{"version":3,"file":"static/js/main.04b88f62.js","mappings":"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","sources":["lib/notifications.ts","src/context/socketContext.js","src/context/authContext.tsx","src/hooks/useAuth.ts","src/hooks/useBuyers.ts","src/hooks/useSuppliers.ts","src/components/Login.tsx","src/hooks/useNotifications.ts","src/hooks/useOffers.ts","src/hooks/useTenderRequests.ts","src/hooks/useDeals.ts","src/components/Notifications.tsx","src/data/categories.js","src/components/Deals.tsx","src/components/Chat.tsx","src/components/Deal.tsx","src/data/suppliers.ts","src/data/buyers.ts","src/components/Explore.tsx","src/components/Supplier.tsx","src/components/Buyer.tsx","src/ExploreNavigation.tsx","src/components/TenderRequests.tsx","src/components/TenderRequest.tsx","src/components/OfferCard.tsx","src/components/SupplierProfile.tsx","src/components/BottomNavigationIcon.tsx","src/components/form/TextInput.tsx","src/components/form/DropDownList.tsx","src/components/form/DateTimeInput.tsx","src/components/CreateDeal.tsx","src/components/form/CheckboxWithText.tsx","src/components/CreateOffer.tsx","src/SupplierNavigation.tsx","src/components/TenderRequestCard.tsx","src/components/BuyerProfile.tsx","src/components/CreateTenderRequest.tsx","src/BuyerNavigation.tsx","src/RootNavigation.tsx","src/App.tsx","src/components/IphoneDummy.tsx","App.tsx","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import * as Device from 'expo-device'\nimport * as ExpoNotifications from 'expo-notifications'\nimport { Platform } from 'react-native'\n\nexport async function registerForPushNotificationsAsync() {\n  let token\n  if (Device.isDevice) {\n    const { status: existingStatus } =\n      await ExpoNotifications.getPermissionsAsync()\n    let finalStatus = existingStatus\n    if (existingStatus !== 'granted') {\n      const { status } = await ExpoNotifications.requestPermissionsAsync()\n      finalStatus = status\n    }\n    if (finalStatus !== 'granted') {\n      alert('Failed to get push token for push notification!')\n      return undefined\n    }\n    token = (await ExpoNotifications.getExpoPushTokenAsync()).data\n    console.log('token', token)\n\n    if (Platform.OS === 'android') {\n      ExpoNotifications.setNotificationChannelAsync('default', {\n        name: 'default',\n        importance: ExpoNotifications.AndroidImportance.MAX,\n        vibrationPattern: [0, 250, 250, 250],\n        lightColor: '#FF231F7C',\n      })\n    }\n    return token\n  }\n\n  return undefined\n}\n","// SocketContext.js\nimport React, { createContext } from 'react'\nimport io from 'socket.io-client'\n\nexport const SocketContext = createContext()\n\nexport const SocketProvider = ({ children }) => {\n  const socket = io('https://skaff-api.iteam.pub')\n\n  return (\n    <SocketContext.Provider value={socket}>{children}</SocketContext.Provider>\n  )\n}\n","import React, { createContext, useState, useContext } from 'react'\nimport { User } from '../data/user'\n\ninterface AuthContextType {\n  user: User | null\n  setUser: (user: User | null) => void\n}\n\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null)\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport function useAuthContext() {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error('useAuthContext must be used within an AuthProvider')\n  }\n  return context\n}\n","import { useContext, useEffect, useCallback } from 'react'\nimport { SocketContext } from '../context/socketContext'\nimport { User } from '../data/user'\nimport { useAuthContext } from '../context/authContext'\n\ntype fn = (user: User, token?: string) => void\n\nconst useAuth = (): {\n  user: User | null\n  login: fn\n  logout: fn\n  save: fn\n  reset: any\n} => {\n  const socket = useContext(SocketContext)\n  const { user, setUser } = useAuthContext()\n\n  const login = useCallback(\n    (user: User, token?: string) => {\n      socket.emit('login', { user, token }, (user: User) => {\n        console.log('got user from socket', user)\n        setUser(user)\n      })\n    },\n    [socket, setUser]\n  )\n\n  const logout = useCallback(\n    (user: User) => {\n      console.log('logout', user)\n      socket.emit('logout', { user }, (user: User) => {\n        console.log('got user from socket', user)\n        setUser(user)\n      })\n    },\n    [socket, setUser]\n  )\n\n  const save = useCallback(\n    (user: User) => {\n      console.log('save', user)\n      socket.emit('editUser', user, (user: User) => {\n        console.log('got updated user from socket', user)\n        setUser(user)\n      })\n    },\n    [socket, setUser]\n  )\n\n  const reset = useCallback(() => {\n    socket.emit('reset')\n    return true\n  }, [socket])\n\n  return { user, login, logout, save, reset }\n}\n\nexport default useAuth\n","import { useContext, useEffect, useState } from 'react'\nimport { SocketContext } from '../context/socketContext'\nimport { Buyer } from '../data/buyers'\n\nconst useBuyers = (): [Array<Buyer>, any, any, any] => {\n  const socket = useContext(SocketContext)\n  const [buyers, setBuyers] = useState([] as Array<Buyer>)\n\n  useEffect(() => {\n    const receive = (buyers: Array<Buyer>) => {\n      setBuyers(buyers)\n    }\n    socket.on('buyers', receive)\n    socket.on('connect', () => socket.emit('buyers', receive))\n\n    return () => {\n      socket.off('buyers', receive)\n      socket.off('connect', receive)\n    }\n  }, [socket])\n\n  const editBuyer = (buyer: Buyer) => {\n    socket.emit('editBuyer', buyer)\n  }\n\n  const addBuyer = (buyer: Buyer) => {\n    socket.emit('addBuyer', buyer)\n  }\n\n  const refresh = () =>\n    socket.emit('buyers', (buyers: Buyer[]) => setBuyers(buyers))\n\n  return [buyers, editBuyer, addBuyer, refresh]\n}\n\nexport default useBuyers\n","import { useContext, useEffect, useState } from 'react'\nimport { SocketContext } from '../context/socketContext'\nimport { Supplier } from '../data/suppliers'\n\nconst useSuppliers = (): [Array<Supplier>, any, any, any] => {\n  const socket = useContext(SocketContext)\n  const [suppliers, setSuppliers] = useState([] as Array<Supplier>)\n\n  useEffect(() => {\n    const receive = (suppliers: Array<Supplier>) => {\n      setSuppliers(suppliers)\n    }\n    socket.on('suppliers', receive)\n\n    return () => {\n      socket.off('suppliers', receive)\n    }\n  }, [socket])\n\n  const editSupplier = (supplier: Supplier) => {\n    socket.emit('editSupplier', supplier)\n  }\n\n  const addSupplier = (supplier: Supplier) => {\n    socket.emit('addSupplier', supplier)\n  }\n\n  const refresh = () =>\n    socket.emit('suppliers', (suppliers: Supplier[]) => setSuppliers(suppliers))\n\n  return [suppliers, editSupplier, addSupplier, refresh]\n}\n\nexport default useSuppliers\n","import { useContext, useEffect, useLayoutEffect, useState } from 'react'\nimport { View, Text, SafeAreaView, StyleSheet, ScrollView } from 'react-native'\nimport { Avatar, Title, Button, Subheading } from 'react-native-paper'\nimport { registerForPushNotificationsAsync } from '../../lib/notifications'\nimport useAuth from '../hooks/useAuth'\nimport useBuyers from '../hooks/useBuyers'\nimport useSuppliers from '../hooks/useSuppliers'\nimport { useAuthContext } from '../context/authContext'\nimport { SocketContext } from '../context/socketContext'\n\nconst Login = ({ onLogin }: { onLogin: any }) => {\n  const { user, login, logout, reset } = useAuth()\n  const [resetting, setResetting] = useState(false)\n  const [buyers, , , loadBuyers] = useBuyers()\n  const [suppliers, , , loadSuppliers] = useSuppliers()\n  const socket = useContext(SocketContext)\n  const [connected, setConnected] = useState(socket.connected)\n\n  useEffect(() => {\n    loadBuyers()\n    loadSuppliers()\n    socket.on('connect', () => setConnected(true))\n    socket.on('disconnect', () => setConnected(false))\n  }, [])\n\n  useLayoutEffect(() => {\n    console.log('user', user)\n    user?.online && logout(user) // logout if we are online\n  }, [user])\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView contentContainerStyle={styles.scrollView}>\n        <View>\n          <Title style={styles.title}>Välj användare att testa med</Title>\n          <Subheading style={styles.subheading}>Producent</Subheading>\n          {suppliers.map((supplier, i) => {\n            return (\n              <View style={styles.searchResult} key={i}>\n                <Avatar.Image\n                  size={30}\n                  style={styles.avatar}\n                  source={{\n                    uri: 'https://skaff-api.iteam.pub' + supplier.image,\n                  }}\n                />\n                <Text\n                  style={styles.searchResultName}\n                  onPress={async () => {\n                    let token\n                    try {\n                      token = await registerForPushNotificationsAsync()\n                    } catch (e) {\n                      console.log('push error', e)\n                    }\n                    login(supplier, token)\n                    onLogin(supplier)\n                  }}\n                >\n                  {supplier.name} {supplier.online && ' 🥕'}\n                </Text>\n              </View>\n            )\n          })}\n          <Subheading style={{ ...styles.subheading, marginTop: 30 }}>\n            Beställare\n          </Subheading>\n          {buyers.map((buyer, i) => {\n            return (\n              <View style={styles.searchResult} key={i}>\n                <Avatar.Image\n                  size={30}\n                  style={styles.avatar}\n                  source={{\n                    uri: 'https://skaff-api.iteam.pub' + buyer.image,\n                  }}\n                />\n                <Text\n                  style={styles.searchResultName}\n                  onPress={async () => {\n                    let token\n                    try {\n                      token = await registerForPushNotificationsAsync()\n                    } catch (e) {\n                      console.log('push error', e)\n                    }\n                    login(buyer, token)\n                    onLogin(buyer)\n                  }}\n                >\n                  {buyer.name} {buyer.online && ' 🥕'}\n                </Text>\n              </View>\n            )\n          })}\n        </View>\n        <Button\n          onPress={() =>\n            (reset() && setResetting(true)) ||\n            setTimeout(() => setResetting(false), 10000)\n          }\n        >\n          {connected\n            ? (resetting && 'Återställer...') || 'Återställ demo'\n            : 'Server offline'}\n        </Button>\n      </ScrollView>\n    </SafeAreaView>\n  )\n}\nexport default Login\n\nconst styles = StyleSheet.create({\n  title: {\n    textAlign: 'center',\n    marginVertical: 30,\n  },\n  container: { flex: 1, alignItems: 'center', justifyContent: 'space-around' },\n  loginForm: { flex: 1, alignItems: 'center', justifyContent: 'center' },\n  scrollView: { flex: 1, alignItems: 'center', justifyContent: 'space-around' },\n  button: {\n    margin: 5,\n  },\n  avatar: { marginRight: 5 },\n  searchResultName: {\n    paddingTop: 10,\n  },\n  searchResult: {\n    flexDirection: 'row',\n    marginBottom: 10,\n  },\n  linkContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    marginBottom: 10,\n  },\n  subheading: {\n    marginBottom: 20,\n  },\n})\n","import { useContext, useEffect, useState } from 'react'\nimport { SocketContext } from '../context/socketContext'\nimport useAuth from './useAuth'\nimport { useAuthContext } from '../context/authContext'\n\ntype fn = () => {}\n\nconst useNotifications = (): [Array<Notification>, fn] => {\n  const socket = useContext(SocketContext)\n  const [notifications, setNotifications] = useState([] as Array<Notification>)\n  const { user } = useAuthContext()\n\n  useEffect(() => {\n    if (!socket) return\n    const receive = (notifications: Array<Notification>) => {\n      setNotifications(\n        notifications.filter((n) => n.data?.to?.contains(user.id))\n      )\n    }\n    socket.on('notifications', receive)\n\n    return () => {\n      socket.off('notifications', receive)\n    }\n  }, [user, socket])\n\n  const refresh = () =>\n    socket.emit('notifications', (notifications: Array<Notification>) =>\n      setNotifications(notifications)\n    )\n\n  return [notifications, refresh]\n}\n\nexport default useNotifications\n","import { useContext, useEffect, useState } from 'react'\nimport { SocketContext } from '../context/socketContext'\nimport { Offer } from '../data/offers'\n\nconst useOffers = (): [Array<Offer>, any, any, any] => {\n  const socket = useContext(SocketContext)\n  const [offers, setOffers] = useState([] as Array<Offer>)\n\n  useEffect(() => {\n    const receive = (offers: Array<Offer>) => {\n      setOffers(offers)\n    }\n    socket.on('offers', receive)\n\n    return () => {\n      socket.off('offers', receive)\n    }\n  }, [socket])\n\n  const editOffer = (offer: Offer) => {\n    socket.emit('editOffer', offer)\n  }\n\n  const addOffer = (offer: Offer) => {\n    socket.emit('addOffer', offer)\n  }\n\n  const refresh = () =>\n    socket.emit('offers', (offers: Array<Offer>) => setOffers(offers))\n\n  return [offers, editOffer, addOffer, refresh]\n}\n\nexport default useOffers\n","import { useContext, useEffect, useState } from 'react'\nimport { SocketContext } from '../context/socketContext'\nimport { TenderRequest } from '../data/tenderRequests'\n\nconst useTenderRequests = (): [Array<TenderRequest>, any, any, any] => {\n  const socket = useContext(SocketContext)\n  const [tenderRequests, setTenderRequests] = useState(\n    new Array<TenderRequest>()\n  )\n\n  useEffect(() => {\n    const receive = (arr: Array<TenderRequest>) => setTenderRequests(arr)\n    socket.on('tenderRequests', receive)\n\n    return () => {\n      socket.off('tenderRequests', receive)\n    }\n  }, [socket])\n\n  const editTenderRequest = (tenderRequest: TenderRequest) => {\n    console.log('editTenderRequest', tenderRequest)\n    socket.emit('editTenderRequest', tenderRequest)\n  }\n\n  const addTenderRequest = (tenderRequest: TenderRequest) => {\n    console.log('addTenderRequest', tenderRequest)\n    socket.emit('addTenderRequest', tenderRequest)\n  }\n\n  const refresh = () =>\n    socket.emit('tenderRequests', (tenderRequests: TenderRequest[]) =>\n      setTenderRequests(tenderRequests)\n    )\n\n  return [tenderRequests, editTenderRequest, addTenderRequest, refresh]\n}\n\nexport default useTenderRequests\n","import { useContext, useEffect, useState } from 'react'\nimport { SocketContext } from '../context/socketContext'\nimport { Deal } from '../data/deals'\n\nconst useDeals = (): [Array<Deal>, any, any, any] => {\n  const socket = useContext(SocketContext)\n  const [deals, setDeals] = useState([] as Array<Deal>)\n\n  useEffect(() => {\n    const receive = (deals: Array<Deal>) => {\n      setDeals(deals)\n    }\n    socket.on('deals', receive)\n\n    return () => {\n      socket.off('deals', receive)\n    }\n  }, [socket])\n\n  const editDeal = (deal: Deal) => {\n    socket.emit('editDeal', deal)\n  }\n\n  const addDeal = (deal: Deal) => {\n    socket.emit('addDeal', deal)\n  }\n\n  const refresh = () =>\n    socket.emit('deals', (deals: Array<Deal>) => setDeals(deals))\n\n  return [deals, editDeal, addDeal, refresh]\n}\n\nexport default useDeals\n","import { List } from 'react-native-paper'\nimport useNotifications from '../hooks/useNotifications'\nimport { useEffect } from 'react'\nimport useOffers from '../hooks/useOffers'\nimport useTenderRequests from '../hooks/useTenderRequests'\nimport useDeals from '../hooks/useDeals'\n\nexport default function Notifications({ navigation }) {\n  const [notifications, refresh] = useNotifications()\n  const [offers, , , refreshOffers] = useOffers()\n  const [tenderRequests, , , refreshTenderRequests] = useTenderRequests()\n  const [deals, , , refreshDeals] = useDeals()\n\n  useEffect(() => {\n    refresh()\n  }, [])\n\n  return (\n    <List.Section>\n      {notifications.length === 0 && (\n        <List.Item\n          left={(props) => <List.Icon {...props} icon=\"bell-off\" />}\n          title=\"Inga notifikationer\"\n          description=\"Du har inga notifikationer än. Pröva att skapa ett erbjudande eller en förfrågan.\"\n        />\n      )}\n      {notifications.map((notification, i) => (\n        <List.Item\n          key={i}\n          onPress={() => {\n            console.log('navigate to', notification)\n            switch (notification.data.type) {\n              case 'offer':\n                navigation.navigate('Offer', {\n                  offer: offers.find(\n                    (offer) => offer.id === notification.data.id\n                  ),\n                })\n                break\n              case 'tenderRequest':\n                navigation.navigate('TenderRequest', {\n                  tenderRequest: tenderRequests.find(\n                    (tenderRequest) => tenderRequest.id === notification.data.id\n                  ),\n                })\n                break\n\n              case 'deal':\n                navigation.navigate('Deal', {\n                  deal: deals.find((deal) => deal.id === notification.data.id),\n                })\n                break\n            }\n          }}\n          title={notification.title}\n          right={(props) => <List.Icon {...props} icon=\"chevron-right\" />}\n          description={notification.body}\n          left={(props) => <List.Icon {...props} icon=\"bell\" />}\n        />\n      ))}\n    </List.Section>\n  )\n}\n","const frozen = '/assets/area_frozen_food.png'\nconst fresh_cooled = '/assets/area_fresh_or_cooled.png'\nconst groceries = '/assets/area_groceries.png'\nconst other = '/assets/area_fruit.png'\n\nexport const categories = {\n  Frozen: {\n    Desserts_Snacks: ['Ostkaka'],\n    Fruits_Berries: ['Blåbär', 'Lingon'],\n    Unprepared_Meat: [\n      'Bacon',\n      'Fransyska',\n      'Nötfärs',\n      'Nötkött strimlat',\n      'Viltfärs',\n    ],\n    Meat_Products: ['Grillkorv', 'Kassler'],\n  },\n  Fresh_Cooled: {\n    Fruits_Berries: ['Päron', 'Äpplen'],\n    Unprepared_Vegetables: [\n      'Champinjoner',\n      'Gulbetor',\n      'Kålrot',\n      'Lök gul',\n      'Morötter',\n      'Palsternackor',\n      'Polkabetor',\n      'Purjolök',\n      'Rotselleri',\n      'Rödbetor',\n      'Vitkål',\n    ],\n    Peeled_Vegetables: ['Morötter'],\n    Unprepared_Meat: [\n      'Blandfärs',\n      'Fläskkarré',\n      'Fläskkotlett',\n      'Fläskkött strimlat',\n      'Fläskkött tärnat',\n      'Hjortkött',\n      'Nötfärs',\n      'Nötkött strimlat',\n      'Nötkött tärnat',\n    ],\n    Meat_Products: [\n      'Falukorv',\n      'Fläskkorv',\n      'Grillkorv',\n      'Korv övrig',\n      'Prinskorv',\n      'Skinka kokt',\n      'Varmkorv',\n    ],\n    Dairy_Products: [\n      'Filmjölk naturell lägst 2% fetthalt',\n      'Lättmjölk, högst 0,5% fetthalt',\n      'Mellanmjölk, 1,5%-1,8% fetthalt',\n      'Standardmjölk, 3,0%-3,5% fetthalt',\n      'Vispgrädde',\n      'Yoghurt naturell',\n      'Yoghurt smaksatt',\n    ],\n    Cheese: ['Ost Hårdost övrig'],\n    Potatoes: [\n      'Potatis',\n      'Potatis skalad',\n      'Potatis skivad',\n      'Potatis strimlad',\n    ],\n    Eggs: ['Ägg färska'],\n  },\n  Pantry_Specialties: {\n    Legumes: ['Baljväxter övriga', 'Ärter gula'],\n    Seeds_and_Kernels: ['Solroskärnor'],\n    Grains: ['Havregryn', 'Mannagryn'],\n    Cooking_Fat_Oil: ['Rapsolja'],\n    Flour: [\n      'Dinkelmjöl',\n      'Grahamsmjöl',\n      'Havremjöl',\n      'Mjölmix',\n      'Rågmjöl',\n      'Rågsikt',\n      'Vetemjöl',\n    ],\n    Sugar_Sweeteners: ['Honung'],\n    Jam_Marmalade_Jelly: ['Jordgubbssylt', 'Lingonsylt', 'Pannkakssylt'],\n    Beer: ['Öl klass 1'],\n  },\n}\n\nexport const areas = {\n  'Frozen': {\n    title: 'Djupfryst',\n    image: frozen,\n  },\n  'Fresh/Cooled': {\n    title: 'Färskvaror/Kylvaror',\n    image: fresh_cooled,\n  },\n  'Grocery/Specialty': {\n    title: 'Kolonial/Speceri',\n    image: groceries,\n  },\n  'BakeryGoods': {\n    title: 'Bagerivaror',\n  },\n  'DryGoods': {\n    title: 'Torrvaror',\n  },\n  'CannedGoods': {\n    title: 'Konserver',\n  },\n  'Beverages': {\n    title: 'Drycker',\n  },\n  'CondimentsAndSpices': {\n    title: 'Kryddor och kryddblandningar',\n  },\n  'DiaryProducts': {\n    title: 'Mejeriprodukter',\n  },\n  'FishAndSeafood': {\n    title: 'Fisk och skaldjur',\n  },\n  'Pastries': {\n    title: 'Konditorivaror',\n  },\n  'Snacks': {\n    title: 'Snacks',\n  },\n  'HealthFoods': {\n    title: 'Hälsokost',\n  },\n  'NonAlcoholicBeverages': {\n    title: 'Alkoholfria drycker',\n  },\n  'Other': {\n    title: 'Other',\n    image: other,\n  },\n}\n\nexport const mainGroups = {\n  BreadAndRolls: 'Bröd och frallor',\n  CerealsAndGrains: 'Spannmål och gryn',\n  Rice: 'Ris',\n  Pasta: 'Pasta',\n  NutsAndSeeds: 'Nötter och frön',\n  CoffeeAndTea: 'Kaffe och te',\n  JuicesAndSoftDrinks: 'Juicer och läskedrycker',\n  OilsAndVinegars: 'Oljor och vinäger',\n  Cheese: 'Ost',\n  Eggs: 'Ägg',\n  Shellfish: 'Skaldjur',\n  SausagesAndDeliMeats: 'Korv och charkuterier',\n  CookiesAndBiscuits: 'Kakor och kex',\n  ChocolatesAndSweets: 'Choklad och godis',\n  EnergyBarsAndDrinks: 'Energi bars och drycker',\n  GlutenFreeProducts: 'Glutenfria produkter',\n  LactoseFreeProducts: 'Laktosfria produkter',\n}\n\nexport const certifications = {\n  organic: {\n    title: 'Organisk',\n  },\n  MSC: {\n    title: 'MSC',\n  },\n  kravMarked: {\n    title: 'Kravmärkt',\n  },\n  ethical: {\n    title: 'Etisk',\n  },\n  fairtrade: {\n    title: 'Fairtrade',\n  },\n  locallyProduced: {\n    title: 'Närodlad',\n  },\n}\n","import * as React from 'react'\nimport { Card, FAB, List, Searchbar, Text } from 'react-native-paper'\nimport { ScrollView, StyleSheet, View } from 'react-native'\nimport { areas } from '../data/categories'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport Chat from './Chat'\nimport useDeals from '../hooks/useDeals'\nimport { Deal } from '../data/deals'\nimport { useState } from 'react'\nimport useAuth from '../hooks/useAuth'\n\ninterface Area {\n  image: string\n  title: string\n  count: number\n}\n\nconst Deals = ({ navigation }: { navigation: any }) => {\n  const [expanded, setExpanded] = React.useState({})\n  const [searchQuery, setSearchQuery] = React.useState('')\n  const [filteredDeals, setFilteredDeals] = React.useState(new Array<Deal>())\n\n  const [deals, , , refresh] = useDeals()\n  const { user } = useAuth()\n  const [activeAreas, setActiveAreas] = React.useState<{ [key: string]: Area }>(\n    {}\n  )\n\n  React.useLayoutEffect(() => {\n    refresh()\n  }, [])\n\n  React.useEffect(() => {\n    setFilteredDeals(\n      deals.filter((deal) =>\n        deal.product.name.toLowerCase().includes(searchQuery.toLowerCase())\n      )\n    )\n  }, [areas, searchQuery, deals])\n\n  React.useEffect(() => {\n    const activeAreas: { [key: string]: Area } = Object.entries(areas).reduce(\n      (result, [key, area]) =>\n        Object.assign(result, {\n          [key]: {\n            ...area,\n            count: filteredDeals.filter((d) => d.commodity.area === area.title)\n              .length,\n          },\n        }),\n      {}\n    )\n    setActiveAreas(activeAreas)\n  }, [filteredDeals])\n\n  return (\n    <>\n      <ScrollView>\n        <Searchbar\n          placeholder=\"Sök erbjudande\"\n          onChangeText={setSearchQuery}\n          value={searchQuery}\n          style={styles.searchbar}\n        />\n\n        {Object.entries(activeAreas).map(([, area]) => (\n          <Card key={area.title}>\n            <TouchableOpacity\n              onPress={() =>\n                setExpanded((expanded) => ({\n                  ...expanded,\n                  [area.title]: !expanded[area.title],\n                }))\n              }\n            >\n              <Card.Cover\n                source={{ uri: `https://skaff-api.iteam.pub${area.image}` }}\n              />\n            </TouchableOpacity>\n            <List.Accordion\n              title={area.title}\n              expanded={\n                !!searchQuery || (expanded[area.title] as boolean) || undefined\n              }\n            >\n              <List.Subheader>{`${area.count} varor`}</List.Subheader>\n              {filteredDeals\n                .filter((d) => d.commodity.area === area.title)\n                .sort((a, b) => a.product.name.localeCompare(b.product.name))\n                .map((deal) => (\n                  <List.Item\n                    key={deal.id}\n                    right={() => <Text>{deal.price.SEK_per_Kg} kr/kg</Text>}\n                    title={deal.product.name}\n                    description={deal.product.brand}\n                    onPress={() => navigation.navigate('Deal', { deal })}\n                  />\n                ))}\n            </List.Accordion>\n          </Card>\n        ))}\n      </ScrollView>\n      {user?.type === 'supplier' && (\n        <FAB\n          style={styles.fab}\n          onPress={() => navigation.navigate('CreateDeal')} //, { screen: 'CreateDeal' })}\n          icon=\"plus\"\n        />\n      )}\n    </>\n  )\n}\n\nexport default Deals\n\nconst styles = StyleSheet.create({\n  searchbar: {\n    backgroundColor: 'white',\n    elevation: false,\n    marginBottom: 16,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  card: {\n    margin: 10,\n    backgroundColor: 'white',\n  },\n  cover: {\n    height: 200,\n    borderRadius: 0,\n  },\n})\n","import React, { useState } from 'react'\nimport {\n  View,\n  Text,\n  ScrollView,\n  StyleSheet,\n  TouchableOpacity,\n} from 'react-native'\nimport { TextInput } from 'react-native-gesture-handler'\nimport { Caption } from 'react-native-paper'\nimport { SafeAreaView } from 'react-native-safe-area-context'\n\nconst messages = [\n  {\n    id: 1,\n    type: 'question',\n    text: 'Vad händer om skörden blir mindre än tänkt?',\n    date: '2021-05-01T12:00:00',\n  },\n  {\n    id: 2,\n    type: 'answer',\n    text: 'Vi för en kontinuerlig dialog och löser det i så fall tillsammans.',\n    date: '2021-05-01T12:01:00',\n  },\n  {\n    id: 3,\n    type: 'question',\n    text: 'Hur exakt är leveransplanen?',\n    date: '2021-05-02T12:02:00',\n  },\n  // ...fler meddelanden\n]\nconst Chat = () => {\n  const [inputText, setInputText] = useState('')\n  const handleSendMessage = () => {\n    if (!inputText) return\n    // Logik för att hantera skickade meddelanden\n    // Exempel: lägga till meddelandet i meddelandelistan\n    messages.push({\n      id: (messages.at(-1)?.id || 0) + 1,\n      type: 'question',\n      text: inputText,\n      date: new Date().toISOString(),\n    })\n    setInputText('') // Rensa svarsfältet efter att ha skickat meddelandet\n  }\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <ScrollView contentContainerStyle={styles.container}>\n        {messages.map((message, i) => (\n          <View key={message.id}>\n            <View\n              style={[\n                styles.messageContainer,\n                message.type === 'question' ? styles.question : styles.answer,\n              ]}\n            >\n              <Text style={styles.messageText}>{message.text}</Text>\n            </View>\n            {i === messages.length - 1 && (\n              <Caption style={styles.messageMetadata}>{message.date}</Caption>\n            )}\n          </View>\n        ))}\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            value={inputText}\n            onChangeText={setInputText}\n            placeholder=\"Skriv din fråga här...\"\n          />\n          <TouchableOpacity\n            onPress={handleSendMessage}\n            style={styles.sendButton}\n          >\n            <Text style={styles.sendButtonText}>Skicka</Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n    flexGrow: 1, // Lägg till denna rad\n    justifyContent: 'flex-end', // Lägg till denna rad\n  },\n  messageContainer: {\n    width: '70%',\n    paddingHorizontal: 16,\n    paddingVertical: 10,\n    borderRadius: 20,\n    marginBottom: 10,\n  },\n  answer: {\n    alignSelf: 'flex-start',\n    backgroundColor: '#757575', // Grå färg från ditt tema\n    marginBottom: 26,\n  },\n  question: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#26CC77', // Morotsfärg\n  },\n  messageText: {\n    fontSize: 16,\n    color: '#FFF',\n  },\n  messageMetadata: {\n    alignSelf: 'center',\n    marginTop: -10,\n    color: '#999',\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  input: {\n    flex: 1,\n    backgroundColor: '#FFF',\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    borderRadius: 20,\n  },\n  sendButton: {\n    marginLeft: 10,\n    backgroundColor: '#26CC77', // Morotsfärg\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 20,\n  },\n  sendButtonText: {\n    color: '#FFF',\n    fontSize: 16,\n  },\n})\n\nexport default Chat\n","import * as React from 'react'\nimport {\n  Caption,\n  Headline,\n  Subheading,\n  useTheme,\n  Text,\n  DataTable,\n  Checkbox,\n  Button,\n} from 'react-native-paper'\nimport { ScrollView, StyleSheet, View } from 'react-native'\nimport { Tabs, TabScreen } from 'react-native-paper-tabs'\nimport Chat from './Chat'\nimport deals from '../data/deals'\nimport { certifications } from '../data/categories'\nimport useAuth from '../hooks/useAuth'\n\nconst Header = ({ product, supplier, price }) => (\n  <View style={{ ...styles.container, ...styles.header }}>\n    <Headline>{product.name}</Headline>\n    <Subheading>{supplier.name}</Subheading>\n    <Subheading style={{ fontWeight: 'bold' }}>\n      {Math.round(price.SEK).toLocaleString('sv')} kr\n    </Subheading>\n  </View>\n)\n\nconst Deal = ({ route, navigation }) => {\n  const [favorite, setFavorite] = React.useState(false)\n  const deal = route.params.deal\n  if (!deal) return navigation.back()\n  const { user } = useAuth()\n\n  const theme = useTheme()\n\n  console.log('deal', deal)\n  const getTitle = function (deal: any) {\n    return (\n      deal.commodity.group +\n      ' i kategorin ' +\n      deal.commodity.mainGroup.toLocaleLowerCase() +\n      ' ' +\n      deal.commodity.area.toLocaleLowerCase()\n    )\n  }\n\n  const toggleFavorite = function (deal: any, on: boolean = !favorite) {\n    global.alert('Ej implementerad än')\n  }\n\n  React.useLayoutEffect(() => {\n    // publish button in header:\n    navigation.setOptions({\n      headerRight: () => (\n        <Button\n          children={[]}\n          icon={favorite ? 'star' : 'star-outline'}\n          onPress={() => toggleFavorite(deal, !favorite)}\n        />\n      ),\n    })\n  }, [deal, favorite])\n\n  return (\n    <>\n      <Header {...deal} />\n      <Tabs\n        // defaultIndex={0} // default = 0\n        uppercase={false} // true/false | default=true | labels are uppercase\n        // showTextLabel={false} // true/false | default=false (KEEP PROVIDING LABEL WE USE IT AS KEY INTERNALLY + SCREEN READERS)\n        // iconPosition // leading, top | default=leading\n        style={{ backgroundColor: '#D8F5E3' }}\n        dark={false} // works the same as AppBar in react-native-paper\n        theme={theme} // works the same as AppBar in react-native-paper\n        // mode=\"scrollable\" // fixed, scrollable | default=fixed\n        // onChangeIndex={(newIndex) => {}} // react on index change\n        // showLeadingSpace={true} //  (default=true) show leading space in scrollable tabs inside the header\n        // disableSwipe={false} // (default=false) disable swipe to left/right gestures\n      >\n        <TabScreen label=\"Information\">\n          <ScrollView>\n            <Container>\n              <Row>\n                <Column>\n                  <Caption>Tillverkare</Caption>\n                  <Text>{deal.product.manufacturer || 'Ej känt'}</Text>\n                </Column>\n                <Column>\n                  <Caption>Varumärke</Caption>\n                  <Text>{deal.product.brand || 'Ej känt'}</Text>\n                </Column>\n              </Row>\n              <Row>\n                <Column>\n                  <Caption>Beskrivning</Caption>\n                  <Text>\n                    {getTitle(deal)} Säljs i paket om{' '}\n                    {deal.price.kilos.toLocaleString('sv')}kg.\n                  </Text>\n                </Column>\n              </Row>\n              <Row>\n                <Column>\n                  <Caption>Pris</Caption>\n                  <Text>\n                    {deal.price.SEK_per_Kg.toLocaleString('sv')} kr/kg\n                  </Text>\n                </Column>\n                <Column>\n                  <Caption>Paketstorlek</Caption>\n                  <Text>{deal.price.kilos.toLocaleString('sv')} kg</Text>\n                </Column>\n              </Row>\n            </Container>\n\n            <DataTable>\n              <DataTable.Header>\n                <DataTable.Title>Miljömärkning</DataTable.Title>\n                <DataTable.Title>Godkänd</DataTable.Title>\n              </DataTable.Header>\n              {Object.entries(deal.certifications)\n                .filter(([, checked]) => checked)\n                .map(([cert, checked], i) => (\n                  <DataTable.Row key={i}>\n                    <DataTable.Cell>\n                      {certifications[cert].title}\n                    </DataTable.Cell>\n                    <DataTable.Cell>\n                      <Checkbox status={checked ? 'checked' : 'unchecked'} />\n                    </DataTable.Cell>\n                  </DataTable.Row>\n                ))}\n            </DataTable>\n            <View style={styles.actionContainer}>\n              <Button\n                mode=\"contained\"\n                onPress={() =>\n                  navigation.navigate('TenderRequests', {\n                    screen: 'CreateTenderRequest',\n                    params: {\n                      title: deal.product.name,\n                    },\n                  })\n                }\n                uppercase={false}\n              >\n                Skapa anbudsförfrågan\n              </Button>\n            </View>\n          </ScrollView>\n        </TabScreen>\n        <TabScreen label=\"Meddelande\">\n          <Chat />\n        </TabScreen>\n        {/* <TabScreen\n          label=\"Anbud\"\n          // icon=\"bag-suitcase\"\n          // optional props\n          // onPressIn={() => {\n          //   console.log('onPressIn explore');\n          // }}\n          // onPress={() => {\n          //   console.log('onPress explore');\n          // }}\n        >\n          <Container>\n            <Paragraph>\n              För att lämna anbud måste du vara ansluten till detta DIS. För att\n              kontrollera att du är det kan du gå till xx..yy.z\n            </Paragraph>\n            <Button\n              mode=\"contained\"\n              onPress={() => navigation.navigate('CreateOffer', { dealId: id })}\n            >\n              Lämna anbud\n            </Button>\n          </Container>\n        </TabScreen> */}\n      </Tabs>\n    </>\n  )\n}\n\nconst Row = ({ children }) => (\n  <View style={{ flexDirection: 'row', marginBottom: 10 }}>{children}</View>\n)\n\nconst Column = ({ children }) => (\n  <View style={{ flexDirection: 'column', marginRight: 20, flex: 1 }}>\n    {children}\n  </View>\n)\n\nconst Container = ({ children }) => (\n  <View style={styles.container}>{children}</View>\n)\n\nexport default Deal\n\nconst styles = StyleSheet.create({\n  container: { padding: 16 },\n  header: {},\n  actionContainer: {\n    flexDirection: 'row',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 20,\n    paddingTop: 20,\n  },\n})\n","import { User } from './user'\nconst image8 = '/assets/avatars/Image008.png'\nconst image9 = '/assets/avatars/Image009.png'\nconst image10 = '/assets/avatars/Image010.png'\nconst image3 = '/assets/avatars/Image003.png'\n\nexport type Supplier = User & {\n  type: 'supplier'\n  produce: string[]\n}\n\nexport default [\n  {\n    id: '1',\n    type: 'supplier',\n    online: false,\n    name: 'Kalles AB',\n    image: image8,\n    address: 'Mejerigatan 2',\n    zip: '653 43',\n    postalAddress: 'Karlstad',\n    email: 'info@kalles.se',\n    produce: ['Morötter', 'Palsternackor', 'Rädisor'],\n    description:\n      'Vi är din lokala leverantör av närproducerad mat och dryck från Värmland. Beställ lokalt och närproducerat mathantverk som producerats där du själv lever och bor - för smakernas, djurens, människornas och miljöns skull.',\n  },\n  {\n    id: '2',\n    type: 'supplier',\n    online: false,\n    name: 'Liljenäs Gård',\n    image: image9,\n    address: 'Älvdalsvägen 35',\n    zip: '683 93',\n    postalAddress: 'Råda',\n    email: 'info@liljenasgard.se',\n    produce: ['Lammkött', 'Köttfärs', 'Nötfärs'],\n    description:\n      'Vi bevarar gamla traditioner i en modern tillverkning, det får ta lite extra tid och vi väljer våra köttleverantörer med omsorg. Vi vet genom våra kunder att det är smaken och vetskapen att det är producerat med kärlek som avgör i slutändan.',\n  },\n  {\n    id: '3',\n    type: 'supplier',\n    online: false,\n    name: 'Wermlands Mejeri',\n    image: image10,\n    address: 'Gillbergavägen 2',\n    zip: '661 95',\n    postalAddress: 'Värmlands Nysäter',\n    email: 'info@wermlandsmeeri.se',\n    produce: ['Komjölk', 'Yoghurt', 'Ost'],\n    description:\n      'Välkommen till Wermlands Mejeri. Ett mejeri med hjärtat i Värmlands Nysäter som säljer närproducerad mjölk och grädde från värmländska kor.',\n  },\n  {\n    id: '3',\n    type: 'supplier',\n    online: false,\n    name: 'Magdakullan',\n    image: image3,\n    address: 'Gillbergavägen 2',\n    zip: '661 95',\n    postalAddress: 'Värmlands Nysäter',\n    email: 'info@wermlandsmeeri.se',\n    produce: ['Komjölk', 'Yoghurt', 'Ost'],\n    description:\n      'Välkommen till Wermlands Mejeri. Ett mejeri med hjärtat i Värmlands Nysäter som säljer närproducerad mjölk och grädde från värmländska kor.',\n  },\n] as Array<Supplier>\n","import { User } from './user'\n\nconst image3 = '/assets/avatars/Image003.png'\nconst image4 = '/assets/avatars/Image004.png'\nconst image5 = '/assets/avatars/Image005.png'\nconst image6 = '/assets/avatars/Image006.png'\nconst image7 = '/assets/avatars/Image007.png'\n\nexport type Buyer = User & {\n  type: 'buyer'\n}\n\nexport default [\n  {\n    id: '1',\n    type: 'buyer',\n    online: false,\n    name: 'Fredricelundsskolan',\n    image: image3,\n    address: 'Tallåsvägen 2',\n    zip: '653 45',\n    postalAddress: 'Karlstad',\n    email: 'info@fredricelundsskolan.se',\n    description:\n      'När du kommer till oss möts du av glädje och god stämning! Fredricelundsskolan är en skola med elever från förskoleklass till årskurs 6 med cirka 280 elever. Vår skola ligger på Våxnäs cirka fyra kilometer nordväst om Karlstads centrum i ett naturfint område med park och skog i närheten.',\n  },\n  {\n    id: '2',\n    type: 'buyer',\n    name: 'Frödingskolan',\n    image: image4,\n    address: 'Posthornsgatan 6',\n    zip: '656 32',\n    postalAddress: 'Karlstad',\n    email: 'info@frodingskolan.se',\n    description:\n      'När du kommer till Frödingskolan möts du av glädje och nyfikenhet. Eleverna på skolan kommer från många olika kulturella bakgrunder. Detta ger en dynamik i lärandet och en härlig atmosfär! Frödingskolans främsta mål är att ge goda kunskaper och stärka språket i alla ämnen så att eleverna är väl förberedda för vidare studier och arbetsliv.',\n  },\n  {\n    id: '3',\n    type: 'buyer',\n    name: 'Kvarnbergsskolan',\n    image: image5,\n    address: 'Ölmegatan 10',\n    zip: '656 30',\n    postalAddress: 'Karlstad',\n    email: 'info@kvarnbergsskolan.se',\n    description:\n      'Kvarnbergssskolan är en F-6 skola som ingår i Skolområde Syd. En skola för ALLA är viktigt för oss på Kvarnbergsskolan. Med forskningen som utgångspunkt strävar vi efter att skapa en kreativ miljö för stor som liten.',\n  },\n  {\n    id: '4',\n    type: 'buyer',\n    name: 'Vålbergsskolan',\n    image: image6,\n    address: 'Åslidsgatan 4B',\n    zip: '660 50',\n    postalAddress: 'Vålberg',\n    email: 'info@valbergsskolan.se',\n    description:\n      'Välkommen till Vålbergsskolan! För oss är det viktigt att era barn får ett bra bemötande och att vi har goda relationer med varandra.',\n  },\n  {\n    id: '5',\n    type: 'buyer',\n    name: 'Nyeds skola',\n    image: image7,\n    address: '',\n    zip: '660 60',\n    postalAddress: 'Molkom',\n    email: 'info@nyedsskola.se',\n    description:\n      'Vår strävan är att våra elever ska nå höga resultat som ger goda förutsättningar för vidare studier, ett gott liv och hopp om en meningsfull framtid',\n  },\n] as Array<Buyer>\n","import * as React from 'react'\nimport {\n  Avatar,\n  Button,\n  Divider,\n  Searchbar,\n  Text,\n  Subheading,\n  useTheme,\n} from 'react-native-paper'\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\nimport { ScrollView, StyleSheet, SafeAreaView, View } from 'react-native'\nimport suppliers from '../data/suppliers'\nimport buyers from '../data/buyers'\n\nconst Explore = ({ navigation }: { navigation: any }) => {\n  const [searchQuery, setSearchQuery] = React.useState('')\n  const theme = useTheme()\n  const filteredSuppliers = suppliers.filter((supplier) =>\n    supplier.name.toLowerCase().includes(searchQuery.toLowerCase())\n  )\n  const filteredBuyers = buyers.filter((buyer) =>\n    buyer.name.toLowerCase().includes(searchQuery.toLowerCase())\n  )\n  return (\n    <SafeAreaView>\n      <ScrollView>\n        <Searchbar\n          placeholder=\"Sök producent/beställare\"\n          onChangeText={setSearchQuery}\n          value={searchQuery}\n          style={styles.searchbar}\n        />\n        <View style={styles.container}>\n          <Subheading style={styles.header}>Producenter</Subheading>\n          {filteredSuppliers.map((supplier, i) => {\n            return (\n              <View style={styles.searchResult} key={i}>\n                <Avatar.Image\n                  size={30}\n                  style={styles.avatar}\n                  source={{\n                    uri: `https://skaff-api.iteam.pub${supplier.image}`,\n                  }}\n                />\n                <Text\n                  style={styles.searchResultName}\n                  onPress={() => navigation.navigate('Supplier', { supplier })}\n                >\n                  {supplier.name}\n                </Text>\n              </View>\n            )\n          })}\n          {searchQuery.length === 0 && (\n            <View style={styles.linkContainer}>\n              <Button uppercase={false}>\n                Ansök om att bli ansluten{' '}\n                <MaterialCommunityIcons\n                  name=\"open-in-new\"\n                  color=\"black\"\n                  size={20}\n                />\n              </Button>\n            </View>\n          )}\n          <Divider />\n          <Subheading style={styles.header}>Beställare</Subheading>\n          {filteredBuyers.map((buyer) => {\n            return (\n              <View style={styles.searchResult} key={buyer.id}>\n                <Avatar.Image\n                  size={30}\n                  style={styles.avatar}\n                  source={{ uri: `https://skaff-api.iteam.pub${buyer.image}` }}\n                />\n                <Text\n                  style={styles.searchResultName}\n                  onPress={() => navigation.navigate('Buyer', { buyer })}\n                >\n                  {buyer.name}\n                </Text>\n              </View>\n            )\n          })}\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  )\n}\n\nexport default Explore\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n  },\n  title: {\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  searchbar: {\n    backgroundColor: 'white',\n    elevation: false,\n    marginBottom: 16,\n  },\n  header: {\n    marginTop: 20,\n    marginBottom: 10,\n  },\n  avatar: { marginRight: 5 },\n  searchResultName: {\n    paddingTop: 10,\n  },\n  searchResult: {\n    flex: 1,\n    flexDirection: 'row',\n    marginBottom: 10,\n  },\n  linkContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    marginBottom: 10,\n  },\n})\n","import {\n  Avatar,\n  Text,\n  Subheading,\n  Divider,\n  Paragraph,\n  IconButton,\n} from 'react-native-paper'\nimport { ScrollView, StyleSheet, View } from 'react-native'\nimport { useEffect } from 'react'\n\nconst Supplier = ({\n  route,\n  navigation,\n  editable,\n}: {\n  route: any\n  navigation: any\n  editable: boolean\n}) => {\n  const supplier = route.params.supplier\n\n  console.log('supplier', supplier)\n\n  useEffect(() => {\n    if (supplier) {\n      navigation.header = 'Profil'\n      navigation.setOptions({ title: supplier.name })\n    }\n  }, [supplier])\n\n  return (\n    <ScrollView style={styles.scrollView}>\n      {supplier && (\n        <View style={styles.headerContainer}>\n          {editable && (\n            <IconButton icon=\"pencil\" size={20} style={styles.editButton} />\n          )}\n          <Avatar.Image\n            size={150}\n            style={styles.avatar}\n            source={{ uri: `https://skaff-api.iteam.pub${supplier.image}` }}\n          ></Avatar.Image>\n          <Text style={styles.address}>{supplier.address}</Text>\n          <Text style={styles.address}>\n            {supplier.zip} {supplier.postalAddress}\n          </Text>\n          <Text style={styles.email}>{supplier.email}</Text>\n          <Divider style={styles.divider} />\n          <Subheading style={styles.subHeading}>Varor</Subheading>\n          {supplier?.produce?.map((p) => {\n            return (\n              <Text key={p} style={styles.produce}>\n                {p}\n              </Text>\n            )\n          })}\n          <Subheading style={styles.subHeading}>Presentation</Subheading>\n          <Paragraph style={styles.description}>\n            {supplier.description}\n          </Paragraph>\n        </View>\n      )}\n    </ScrollView>\n  )\n}\n\nexport default Supplier\n\nconst styles = StyleSheet.create({\n  scrollView: {\n    padding: 10,\n  },\n  headerContainer: {\n    width: '100%',\n  },\n  heading: {\n    marginTop: 20,\n    alignSelf: 'center',\n    fontWeight: 'bold',\n  },\n  avatar: {\n    alignSelf: 'center',\n    marginBottom: 10,\n  },\n  address: {\n    alignSelf: 'center',\n    marginTop: 5,\n  },\n  email: {\n    alignSelf: 'center',\n    marginTop: 15,\n  },\n  produce: {\n    marginTop: 3,\n  },\n  description: {\n    marginTop: 3,\n    lineHeight: 20,\n  },\n  divider: {\n    marginTop: 20,\n  },\n  subHeading: {\n    marginTop: 20,\n  },\n  editButton: {\n    alignSelf: 'flex-end',\n  },\n})\n","import buyers from '../data/buyers'\nimport {\n  Avatar,\n  Button,\n  Searchbar,\n  Text,\n  Subheading,\n  Title,\n  Paragraph,\n  IconButton,\n} from 'react-native-paper'\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\nimport { ScrollView, StyleSheet, SafeAreaView, View } from 'react-native'\nimport { useEffect, useState } from 'react'\n\nconst Buyer = ({\n  route,\n  navigation,\n  editable,\n}: {\n  route: any\n  navigation: any\n  editable: boolean\n}) => {\n  const buyer = route.params.buyer\n\n  useEffect(() => {\n    if (buyer) {\n      navigation.header = 'Profil'\n      navigation.setOptions({ title: buyer.name })\n    }\n  }, [buyer])\n  return (\n    <ScrollView style={styles.scrollView}>\n      {buyer && (\n        <View style={styles.headerContainer}>\n          {editable ? (\n            <IconButton icon=\"pencil\" size={20} style={styles.editButton} />\n          ) : (\n            <Title style={styles.heading}>{buyer.name}</Title>\n          )}\n\n          <Avatar.Image\n            size={150}\n            style={styles.avatar}\n            source={{ uri: `https://skaff-api.iteam.pub${buyer.image}` }}\n          ></Avatar.Image>\n          <Text style={styles.address}>{buyer.address}</Text>\n          <Text style={styles.address}>\n            {buyer.zip} {buyer.postalAddress}\n          </Text>\n          <Text style={styles.email}>{buyer.email}</Text>\n          <View style={styles.menuContainer}>\n            <Button style={styles.menuLink} uppercase={false}>\n              Planerad matsedel{' '}\n              <MaterialCommunityIcons\n                name=\"open-in-new\"\n                color=\"black\"\n                size={20}\n              />\n            </Button>\n          </View>\n          <Subheading>Presentation</Subheading>\n          <Paragraph style={styles.description}>{buyer.description}</Paragraph>\n        </View>\n      )}\n    </ScrollView>\n  )\n}\n\nexport default Buyer\n\nconst styles = StyleSheet.create({\n  scrollView: {\n    padding: 10,\n  },\n  headerContainer: {\n    width: '100%',\n  },\n  heading: {\n    marginTop: 20,\n    alignSelf: 'center',\n    fontWeight: 'bold',\n  },\n  avatar: {\n    alignSelf: 'center',\n    marginBottom: 10,\n  },\n  address: {\n    alignSelf: 'center',\n    marginTop: 5,\n  },\n  email: {\n    alignSelf: 'center',\n    marginTop: 15,\n  },\n  description: {\n    lineHeight: 20,\n  },\n  menuContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    marginTop: 20,\n    marginBottom: 10,\n  },\n  menuLink: { marginLeft: -12 },\n  editButton: {\n    alignSelf: 'flex-end',\n  },\n})\n","import { createStackNavigator } from '@react-navigation/stack'\nimport Explore from './components/Explore'\nimport Supplier from './components/Supplier'\nimport Buyer from './components/Buyer'\n\nconst ExploreNavigation = () => {\n  const Stack = createStackNavigator()\n  return (\n    <>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"ExploreSuppliersAndBuyers\"\n          options={{\n            title: 'Utforska',\n          }}\n          component={Explore}\n        />\n        <Stack.Screen\n          name=\"Supplier\"\n          options={{\n            title: 'Utforska producent',\n          }}\n          component={Supplier}\n        />\n        <Stack.Screen\n          name=\"Buyer\"\n          options={{\n            title: 'Utforska beställare',\n          }}\n          component={Buyer}\n        />\n      </Stack.Navigator>\n    </>\n  )\n}\n\nexport default ExploreNavigation\n","import * as React from 'react'\nimport { Card, FAB, List, Searchbar } from 'react-native-paper'\nimport { ScrollView, StyleSheet, View } from 'react-native'\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\nimport useTenderRequests from '../hooks/useTenderRequests'\nimport { useState } from 'react'\nimport useAuth from '../hooks/useAuth'\n\nconst ChevronRight = () => (\n  <MaterialCommunityIcons\n    size={25}\n    style={{ marginRight: 20 }}\n    name=\"chevron-right\"\n  />\n)\n\nconst TenderRequests = ({ navigation }: { navigation: any }) => {\n  const [searchQuery, setSearchQuery] = useState('')\n  const [open, setOpen] = useState(true)\n\n  const { user } = useAuth()\n\n  const [tenderRequests, update, add, refresh] = useTenderRequests()\n\n  React.useLayoutEffect(() => {\n    refresh()\n  }, [])\n\n  const filteredRequests =\n    (!searchQuery && tenderRequests) ||\n    tenderRequests.filter((request) =>\n      request.title.toLowerCase().includes(searchQuery.toLowerCase())\n    )\n\n  return (\n    <>\n      <ScrollView>\n        <Searchbar\n          placeholder=\"Sök upphandling\"\n          onChangeText={setSearchQuery}\n          value={searchQuery}\n          style={styles.searchbar}\n        />\n        <List.Section>\n          <List.Accordion\n            title=\"Aktiva upphandlingar\"\n            onPress={() => setOpen(!open)}\n            expanded={open}\n          >\n            {filteredRequests.map((tenderRequest, i) => (\n              <Card\n                key={i}\n                style={styles.card}\n                onPress={() =>\n                  navigation.navigate('TenderRequest', { tenderRequest })\n                }\n              >\n                <Card.Title\n                  titleVariant=\"titleSmall\"\n                  titleStyle={{\n                    fontSize: 14,\n                  }}\n                  title={tenderRequest.title}\n                  subtitle={tenderRequest.buyer.name}\n                  right={(props) => <ChevronRight />}\n                />\n              </Card>\n            ))}\n          </List.Accordion>\n\n          <List.Accordion title=\"Favoritmarkerade\">\n            <Card style={styles.card}>\n              <Card.Title\n                titleVariant=\"titleSmall\"\n                titleStyle={{\n                  fontSize: 14,\n                }}\n                title={'Favoritupphandling 1'}\n                subtitle={'Köpare 1'}\n                right={(props) => <ChevronRight />}\n              />\n            </Card>\n          </List.Accordion>\n        </List.Section>\n      </ScrollView>\n      {user?.type === 'buyer' && (\n        <FAB\n          style={styles.fab}\n          onPress={\n            () => navigation.navigate('CreateTenderRequest') //, { screen: 'CreateTenderRequest' }\n          }\n          icon=\"plus\"\n        />\n      )}\n    </>\n  )\n}\n\nexport default TenderRequests\n\nconst styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  card: {\n    margin: 10,\n    backgroundColor: 'white',\n  },\n  cover: {\n    height: 200,\n    borderRadius: 0,\n  },\n\n  container: {\n    paddingHorizontal: 16,\n    paddingTop: 16,\n  },\n  label: {\n    fontSize: 16,\n    marginBottom: 8,\n  },\n  title: {\n    marginHorizontal: 16,\n  },\n  checkboxContainer: {\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  checkbox: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 16,\n  },\n  searchbar: {\n    backgroundColor: 'white',\n    elevation: false,\n    marginBottom: 16,\n  },\n})\n","import { useEffect, useLayoutEffect, useState } from 'react'\nimport {\n  Caption,\n  Headline,\n  Subheading,\n  useTheme,\n  Text,\n  Button,\n  Paragraph,\n  Divider,\n  Card,\n  List,\n  Avatar,\n} from 'react-native-paper'\nimport { ScrollView, StyleSheet, View } from 'react-native'\nimport { Tabs, TabScreen } from 'react-native-paper-tabs'\nimport Chat from './Chat'\nimport useTenderRequests from '../hooks/useTenderRequests'\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\nimport useAuth from '../hooks/useAuth'\nimport { TenderRequest as TenderRequestType } from '../data/tenderRequests'\nimport useOffers from '../hooks/useOffers'\nimport { Offer } from '../data/offers'\n\nconst ChevronRight = () => (\n  <MaterialCommunityIcons\n    size={25}\n    style={{ marginRight: 20 }}\n    name=\"chevron-right\"\n  />\n)\n\nconst TenderRequest = ({\n  route,\n  navigation,\n}: {\n  route: any\n  navigation: any\n}) => {\n  const [tenderOffers, setTenderOffers] = useState([] as Offer[])\n\n  const [tenderRequests, , , refresh] = useTenderRequests()\n  const [offers, updateOffer, , refreshOffers] = useOffers()\n  const [tenderRequest, setTenderRequest] = useState<\n    TenderRequestType | undefined\n  >(route.params.tenderRequest as TenderRequestType)\n  const theme = useTheme()\n  const { user } = useAuth()\n\n  if (route.params.tenderRequestId)\n    setTenderRequest(\n      tenderRequests.find(({ id }) => id === route.params.tenderRequestId)\n    )\n\n  if (!tenderRequest)\n    return <Text>Loading... {route.params.tenderRequestId}</Text>\n\n  useEffect(() => {\n    if (tenderRequest.id) {\n      const offersForTenderRequest = offers.filter(\n        ({ tenderRequestId }) => tenderRequestId === tenderRequest.id\n      )\n      setTenderOffers(offersForTenderRequest)\n\n      const tenderRequestFromState = tenderRequests.find(\n        ({ id }) => id === tenderRequest.id\n      )\n      if (tenderRequestFromState) {\n        setTenderRequest(tenderRequestFromState)\n      }\n    }\n  }, [tenderRequest, offers])\n\n  const myOffers = tenderOffers.filter(\n    (to) =>\n      to.supplier.id === user?.id && to.tenderRequestId === tenderRequest.id\n  )\n\n  useEffect(() => {\n    refreshOffers()\n  }, [tenderRequest])\n\n  return (\n    <>\n      <View style={{ ...styles.header }}>\n        <Headline>{tenderRequest.title}</Headline>\n        <Subheading>{tenderRequest.buyer?.name}</Subheading>\n      </View>\n      <Tabs\n        // defaultIndex={0} // default = 0\n        uppercase={false} // true/false | default=true | labels are uppercase\n        // showTextLabel={false} // true/false | default=false (KEEP PROVIDING LABEL WE USE IT AS KEY INTERNALLY + SCREEN READERS)\n        // iconPosition // leading, top | default=leading\n        style={{ backgroundColor: '#D8F5E3' }}\n        // dark={false} // works the same as AppBar in react-native-paper\n        theme={theme} // works the same as AppBar in react-native-paper\n        // mode=\"scrollable\" // fixed, scrollable | default=fixed\n        // onChangeIndex={(newIndex) => {}} // react on index change\n        // showLeadingSpace={true} //  (default=true) show leading space in scrollable tabs inside the header\n        // disableSwipe={false} // (default=false) disable swipe to left/right gestures\n      >\n        <TabScreen label=\"Förfrågan\">\n          <ScrollView>\n            <Container>\n              <Row>\n                <Column>\n                  <Caption>Sista svar</Caption>\n                  <Text>\n                    {tenderRequest.lastOfferDate?.toString().split('T')[0] ||\n                      'Inget datum'}\n                  </Text>\n                </Column>\n                <Column>\n                  <Caption>Tilldelning senast</Caption>\n                  <Text>\n                    {tenderRequest.lastAwardDate?.toString().split('T')[0] ||\n                      'Inget datum'}\n                  </Text>\n                </Column>\n              </Row>\n            </Container>\n            <Container>\n              <Row>\n                <Column>\n                  <Caption>Leveransplan</Caption>\n                  <Text>{tenderRequest.deliveryPlan}</Text>\n                </Column>\n                <Column>\n                  <Caption>Första leverans</Caption>\n                  <Text>\n                    {tenderRequest.deliveryStartDate?.toString().split('T')[0]}\n                  </Text>\n                </Column>\n              </Row>\n            </Container>\n            <Container>\n              <Subheading>Villkor</Subheading>\n              <Paragraph>{tenderRequest.terms}</Paragraph>\n            </Container>\n            <Divider />\n            <Container>\n              <Subheading>Urval</Subheading>\n              <Paragraph>{tenderRequest.grading}</Paragraph>\n            </Container>\n            <Container>\n              <Subheading>Krav</Subheading>\n              {tenderRequest.qualificationCriteria?.map((criteria, i) => (\n                <Paragraph key={i}>{criteria}</Paragraph>\n              ))}\n            </Container>\n            <Container>\n              <Subheading>Önskemål</Subheading>\n              {tenderRequest.optionalCriteria?.map((optionalCriteria, i) => (\n                <Paragraph key={i}>{optionalCriteria}</Paragraph>\n              ))}\n            </Container>\n            <Container\n              style={{\n                flexDirection: 'row',\n                display: 'flex',\n                backgroundColor: '#DCF6FE',\n                margin: 20,\n                padding: 10,\n                paddingTop: 10,\n                paddingBottom: 10,\n              }}\n            >\n              <MaterialCommunityIcons\n                name=\"exclamation\"\n                color=\"black\"\n                size={20}\n              />\n              <Paragraph style={{ paddingLeft: 10, paddingRight: 20 }}>\n                Ett uppfyllt önskemål genererar, i jämförelsen mot andra anbud,\n                ett prisavdrag motsvarande det uppskattade värdet. Offererat\n                pris är fortfarande det som gäller vid fakturering.\n              </Paragraph>\n            </Container>\n          </ScrollView>\n        </TabScreen>\n        <TabScreen label=\"Meddelande\">\n          <Chat />\n        </TabScreen>\n        <TabScreen label=\"Anbud\">\n          <>\n            <>\n              {user?.type === 'supplier' && (\n                <Container>\n                  {!myOffers.length && (\n                    <>\n                      <Paragraph>\n                        För att lämna anbud måste du vara ansluten till detta\n                        DIS. För att kontrollera att du är det kan du gå till\n                        xx..yy.z\n                      </Paragraph>\n                      <Button\n                        mode=\"contained\"\n                        onPress={() => {\n                          navigation.navigate('TenderRequests', {\n                            screen: 'CreateOffer',\n                            params: {\n                              tenderRequest,\n                            },\n                          })\n                        }}\n                      >\n                        Lämna anbud\n                      </Button>\n                    </>\n                  )}\n                  <List.Section>\n                    <List.Subheader>Dina skickade anbud</List.Subheader>\n                    {myOffers.map((offer, i) => (\n                      <Card\n                        key={i}\n                        style={styles.card}\n                        onPress={() => {\n                          console.log('pressed', offer)\n                          navigation.navigate('Supplier', {\n                            supplier: offer.supplier,\n                          })\n                        }}\n                      >\n                        <Card.Title\n                          titleVariant=\"titleSmall\"\n                          titleStyle={{\n                            fontSize: 14,\n                          }}\n                          left={(props) => (\n                            <MaterialCommunityIcons\n                              name=\"file-document-outline\"\n                              color=\"black\"\n                              size={24}\n                            />\n                          )}\n                          title={offer.price.SEK + ' kr'}\n                          subtitle={\n                            'Inlämnad ' +\n                            offer.submissionDate?.toString().split('T')[0] +\n                            '. ' +\n                            (offer.approved ? 'Vunnen' : 'Ej godkänt')\n                          }\n                          right={(props) => <ChevronRight />}\n                        />\n                      </Card>\n                    ))}\n                  </List.Section>\n                </Container>\n              )}\n            </>\n            {user?.type === 'buyer' && tenderRequest.buyer?.id == user?.id && (\n              <>\n                <Container>\n                  <Paragraph>\n                    Inskickade anbud sorteras efter lägsta pris med eventuella\n                    avdrag för uppfyllda önskemål.\n                  </Paragraph>\n                </Container>\n                <Container>\n                  <Subheading>Matchande anbud</Subheading>\n                  {tenderOffers.map((offer, i) => (\n                    <Card\n                      key={i}\n                      style={styles.card}\n                      //  onPress={() => navigation.navigate('TenderRequest', { id })}\n                    >\n                      <Card.Title\n                        titleVariant=\"titleSmall\"\n                        titleStyle={{\n                          fontSize: 14,\n                        }}\n                        title={offer.supplier?.name}\n                        subtitle={\n                          'Inkom ' +\n                          offer.submissionDate?.toString().split('T')[0]\n                        }\n                        right={(props) => {\n                          if (offer.approved)\n                            return (\n                              <Container\n                                style={{\n                                  flexDirection: 'row',\n                                  display: 'flex',\n                                }}\n                              >\n                                <MaterialCommunityIcons\n                                  size={25}\n                                  name=\"clipboard-check\"\n                                />\n                                <Text\n                                  style={{\n                                    marginLeft: 5,\n                                    marginTop: 5,\n                                  }}\n                                >\n                                  Tilldelad\n                                </Text>\n                              </Container>\n                            )\n                          else if (\n                            tenderOffers.filter((offer) => offer.approved)\n                              .length < 1\n                          )\n                            return (\n                              <Button\n                                icon=\"clipboard-check\"\n                                mode=\"contained\"\n                                uppercase={false}\n                                style={{ marginRight: 10 }}\n                                onPress={() => {\n                                  console.log('offer', offer)\n                                  updateOffer({ ...offer, approved: true })\n                                }}\n                              >\n                                Tilldela\n                              </Button>\n                            )\n                        }}\n                      />\n                    </Card>\n                  ))}\n                </Container>\n                <Container>\n                  <Divider />\n                  <Subheading>Ej uppfyllda anbud</Subheading>\n                </Container>\n              </>\n            )}\n            {user?.type === 'buyer' && tenderRequest.buyer?.id != user?.id && (\n              <Container>\n                <Paragraph>\n                  Som beställare kan du inte lämna anbud på andra beställares\n                  anbudsförfrågningar.\n                </Paragraph>\n              </Container>\n            )}\n          </>\n        </TabScreen>\n      </Tabs>\n    </>\n  )\n}\n\nconst Row = ({ children }) => (\n  <View style={{ flexDirection: 'row' }}>{children}</View>\n)\n\nconst Column = ({ children }) => (\n  <View style={{ flexDirection: 'column', marginRight: 20 }}>{children}</View>\n)\n\nconst Container = ({ children, style }: { children: any; style?: any }) => (\n  <View style={{ ...styles.container, ...style }}>{children}</View>\n)\n\nexport default TenderRequest\n\nconst styles = StyleSheet.create({\n  header: {\n    margin: 16,\n  },\n  container: {\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingTop: 20,\n    paddingBottom: 5,\n  },\n  card: {\n    marginTop: 5,\n    marginBottom: 5,\n    backgroundColor: 'white',\n  },\n})\n","import { StyleSheet } from 'react-native'\nimport { Button, Card } from 'react-native-paper'\nimport { Offer } from '../data/offers'\nimport useAuth from '../hooks/useAuth'\nimport { User } from '../data/user'\n\nconst OfferCard = ({\n  offer,\n  navigation,\n  user,\n}: {\n  offer: Offer\n  navigation: any\n  user: User\n}) => {\n  const isBuyer = user?.type === 'buyer'\n  const isSupplier = user?.type === 'supplier'\n\n  return (\n    <Card\n      style={styles.card}\n      /*  this causes endless loop\n        onPress={() =>\n        navigation.navigate('TenderRequests', {\n          screen: 'TenderRequest',\n          params: {\n            tenderRequestId: offer.tenderRequestId,\n          },\n        })\n      }*/\n    >\n      <Card.Title\n        title={offer.price.SEK + ' kr' + ' - ' + offer.buyer.name}\n        titleVariant=\"titleSmall\"\n        titleStyle={{\n          fontSize: 14,\n        }}\n        subtitle={'Inlämnat: ' + offer.submissionDate?.toString().split('T')[0]}\n        right={(props) => <Button icon=\"chevron-right\" />}\n      ></Card.Title>\n    </Card>\n  )\n}\n\nexport default OfferCard\n\nconst styles = StyleSheet.create({\n  header: {\n    margin: 16,\n  },\n  card: {\n    margin: 10,\n    backgroundColor: 'white',\n  },\n  infoCard: {\n    marginTop: 5,\n    marginBottom: 5,\n  },\n})\n","import { Button, List, useTheme, Divider, Card } from 'react-native-paper'\nimport { Tabs, TabScreen } from 'react-native-paper-tabs'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport Supplier from './Supplier'\nimport { useEffect, useState } from 'react'\nimport useAuth from '../hooks/useAuth'\nimport useOffers from '../hooks/useOffers'\nimport OfferCard from './OfferCard'\n\nconst SupplierProfile = ({\n  route,\n  navigation,\n}: {\n  route: any\n  navigation: any\n}) => {\n  const theme = useTheme()\n  const [showOffers, setShowOffers] = useState(true)\n  const { user: supplier, logout } = useAuth()\n  const [offers, , , refreshOffers] = useOffers()\n\n  if (!supplier) return null\n  useEffect(() => {\n    if (supplier) {\n      navigation.header = 'Profil'\n      navigation.setOptions({ title: supplier.name })\n    }\n  }, [supplier])\n\n  useEffect(() => {\n    refreshOffers()\n  }, [])\n\n  return (\n    <>\n      <Tabs\n        uppercase={false}\n        style={{ backgroundColor: '#D8F5E3' }}\n        theme={theme}\n      >\n        <TabScreen label=\"Aktuellt\">\n          <ScrollView>\n            <List.Accordion\n              title=\"Anbud\"\n              expanded={showOffers}\n              onPress={() => setShowOffers((show) => !show)}\n            >\n              <List.Subheader>Inskickade anbud</List.Subheader>\n              {offers.length === 0 && (\n                <Card.Title\n                  title=\"Inga anbud\"\n                  subtitle=\"Du har inte skickat in några anbud\"\n                ></Card.Title>\n              )}\n              {offers.map((offer) => (\n                <OfferCard\n                  user={supplier}\n                  key={offer.id}\n                  offer={offer}\n                  navigation={navigation}\n                />\n              ))}\n\n              <List.Subheader>Utkast</List.Subheader>\n              <Card>\n                <Card.Title\n                  title=\"Potatis\"\n                  subtitle=\"1 500 kg | Nyeds skola, Molkom\"\n                ></Card.Title>\n              </Card>\n              <List.Subheader>Favoriter</List.Subheader>\n            </List.Accordion>\n            <Divider />\n            <List.Accordion title=\"Erbjudanden\" expanded={true}>\n              <List.Subheader>Publicerade</List.Subheader>\n              <Card>\n                <Card.Title\n                  title=\"Fina morötter\"\n                  subtitle=\"Upp till 5 000 kg per år, leverans veckovis\"\n                ></Card.Title>\n              </Card>\n              <List.Subheader>Utkast</List.Subheader>\n            </List.Accordion>\n          </ScrollView>\n        </TabScreen>\n        <TabScreen label=\"Mina avtal\">\n          <ScrollView>\n            <List.Accordion title=\"Pågående\" expanded={true}>\n              <Card>\n                <Card.Title\n                  title=\"Morötter\"\n                  subtitle=\"500 kg | Fredricelundsskolan, Karlstad\"\n                ></Card.Title>\n              </Card>\n              <Card>\n                <Card.Title\n                  title=\"Morötter\"\n                  subtitle=\"700 kg | Nyeds skola, Molkom\"\n                ></Card.Title>\n              </Card>\n            </List.Accordion>\n            <Divider />\n            <List.Accordion title=\"Avslutade\">\n              <Card>\n                <Card.Title\n                  title=\"Morötter\"\n                  subtitle=\"500 kg | Nyeds skola, Molkom\"\n                ></Card.Title>\n              </Card>\n            </List.Accordion>\n          </ScrollView>\n        </TabScreen>\n        <TabScreen label=\"Profil\">\n          <Supplier\n            route={{ ...route, params: { supplier } }}\n            navigation={navigation}\n            editable={true}\n          ></Supplier>\n        </TabScreen>\n      </Tabs>\n      <Button\n        mode=\"outlined\"\n        onPress={() => navigation.popToTop() || logout(supplier)}\n      >\n        Logga ut\n      </Button>\n    </>\n  )\n}\n\nexport default SupplierProfile\n","import { Text, Button, List, useTheme, Divider, Card } from 'react-native-paper'\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\n\nconst BottomNavigationIcon = ({\n  name,\n  focused,\n}: {\n  name: string\n  focused: boolean\n}) => {\n  const theme = useTheme()\n\n  return (\n    <MaterialCommunityIcons\n      name={name}\n      color={focused ? theme.colors.primary : theme.colors.iconInactive}\n      size={20}\n    />\n  )\n}\n\nexport default BottomNavigationIcon\n","import * as React from 'react'\nimport { KeyboardTypeOptions } from 'react-native'\nimport { TextInput as PaperTextInput, useTheme } from 'react-native-paper'\n\nconst TextInput = ({\n  label,\n  value,\n  keyboardType,\n  disabled,\n  multiline,\n  numberOfLines,\n  styles,\n  placeholder,\n  outlined,\n  onChange,\n}: {\n  label: string\n  value: string\n  keyboardType?: KeyboardTypeOptions\n  disabled?: boolean\n  multiline?: boolean\n  numberOfLines?: number\n  styles?: any\n  placeholder?: string\n  outlined?: boolean\n  onChange?: (text: string) => void\n}) => {\n  const theme = useTheme()\n  return (\n    <PaperTextInput\n      theme={{\n        ...theme,\n        colors: {\n          ...theme.colors,\n          background: '#FFFFFF',\n        },\n        roundness: 0,\n      }}\n      style={{\n        backgroundColor: 'white',\n        ...styles,\n      }}\n      keyboardType={keyboardType}\n      label={label}\n      value={value}\n      onChangeText={onChange}\n      disabled={disabled}\n      placeholder={placeholder}\n      multiline={multiline}\n      numberOfLines={numberOfLines}\n      mode={outlined == undefined && !outlined ? 'flat' : 'outlined'}\n    ></PaperTextInput>\n  )\n}\n\nexport default TextInput\n","import { useState } from 'react'\nimport { KeyboardTypeOptions } from 'react-native'\nimport { useTheme } from 'react-native-paper'\nimport DropDown from 'react-native-paper-dropdown'\n\nconst DropDownList = ({\n  label,\n  value,\n  values,\n  multiSelect,\n  setValue,\n}: {\n  label: string\n  value: string\n  values: Array<{ label: string; value: string }>\n  multiSelect?: boolean\n  setValue: any\n}) => {\n  const [showDropdown, setShowDropdown] = useState(false)\n  const theme = useTheme()\n\n  return (\n    <DropDown\n      theme={{\n        ...theme,\n        colors: {\n          ...theme.colors,\n          background: '#FFFFFF',\n        },\n      }}\n      dropDownStyle={{\n        width: '100%',\n      }}\n      inputProps={{\n        style: {\n          backgroundColor: '#FFFFFF',\n        },\n      }}\n      label={label}\n      value={value}\n      setValue={setValue}\n      list={values}\n      visible={showDropdown}\n      showDropDown={() => setShowDropdown(true)}\n      onDismiss={() => setShowDropdown(false)}\n      multiSelect={multiSelect}\n    ></DropDown>\n  )\n}\n\nexport default DropDownList\n","import { useTheme } from 'react-native-paper'\nimport { DatePickerInput } from 'react-native-paper-dates'\n\nconst DateTimeInput = ({\n  label,\n  value,\n\n  onChange,\n}: {\n  label: string\n  value: Date\n\n  onChange: (date: Date | undefined) => void\n}) => {\n  const theme = useTheme()\n  return (\n    <DatePickerInput\n      theme={{\n        ...theme,\n        colors: {\n          ...theme.colors,\n          background: '#FFFFFF',\n        },\n      }}\n      style={{ backgroundColor: '#FFFFFF' }}\n      locale=\"sv\"\n      label={label}\n      value={value}\n      onChange={onChange}\n      inputMode=\"start\"\n    ></DatePickerInput>\n  )\n}\n\nexport default DateTimeInput\n","import { useEffect, useState } from 'react'\nimport { Button } from 'react-native-paper'\n\nimport { SafeAreaView, ScrollView, StyleSheet, View } from 'react-native'\nimport TextInput from './form/TextInput'\nimport DropDownList from './form/DropDownList'\nimport DateTimeInput from './form/DateTimeInput'\nimport useDeals from '../hooks/useDeals'\nimport useAuth from '../hooks/useAuth'\nimport { useAuthContext } from '../context/authContext'\nimport { Deal } from '../data/deals'\n\nconst styles = StyleSheet.create({\n  actionContainer: {\n    flexDirection: 'row',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: 20,\n    paddingBottom: 20,\n    paddingTop: 20,\n  },\n})\nconst CreateDeal = ({ route, navigation }: { route: any; navigation: any }) => {\n  const id = route?.params?.id\n  const [title, setTitle] = useState('')\n  const [price, setPrice] = useState('')\n  const [volume, setVolume] = useState('')\n  const [constraint, setConstraint] = useState('')\n  const [date, setDate] = useState(new Date())\n  const [endDate, setEndDate] = useState(new Date())\n  const [description, setDescription] = useState('')\n  const [other, setOther] = useState('')\n  const constraints = [\n    { label: 'Bäst före', value: '0' },\n    { label: 'Sista förbrukningsdag', value: '1' },\n  ]\n\n  const [, , add] = useDeals()\n  const { user } = useAuthContext()\n\n  const getSelectedOptions = (\n    selectedOptions: string,\n    options: Array<{ label: string; value: string }>\n  ) => {\n    return selectedOptions\n      .split(',')\n      .map((critera: string) => {\n        return options.find((option: any) => option.value == critera)?.label\n      })\n      .filter((criteria: string | undefined) => criteria)\n  }\n\n  const deal = {\n    id: 0, // created on server\n    product: {\n      name: title,\n    },\n    price: {\n      SEK: +price,\n      SEK_per_Kg: +price / +volume,\n      kilos: +volume,\n    },\n    volume: +volume,\n    supplier: user,\n    constraint: getSelectedOptions(constraint, constraints).pop(),\n    date,\n    endDate,\n    other,\n    description,\n    commodity: {\n      area: 'Other',\n      mainGroup: 'Other',\n      group: 'Other',\n    },\n    certifications: {\n      organic: false, // TODO: add certifications\n      MSC: false,\n      kravMarked: false,\n      ethical: false,\n      fairtrade: false,\n      locallyProduced: false,\n    },\n    origin: {\n      productManufacturingCountry: 'Sverige', // TODO: add origin\n      rawMaterialOriginCountry: 'Sverige',\n    },\n  } as Deal\n\n  // useEffect(() => {\n  //   const deal = deals.find((offer) => offer.id === id)\n  //   if (deal) {\n  //     setTitle(deal?.product?.name)\n  //     setPrice(deal?.price.SEK.toString())\n  //     setVolume(deal?.price.kilos.toString())\n  //   }\n  // }, [id])\n\n  useEffect(() => {\n    // publish button in header:\n    navigation.setOptions({\n      headerRight: () => (\n        <Button onPress={() => publish(deal)}>Publicera</Button>\n      ),\n    })\n  }, [])\n\n  const publish = (deal: any) => {\n    add(deal)\n\n    navigation.navigate('ListDeals')\n  }\n\n  return (\n    <SafeAreaView>\n      <ScrollView>\n        <TextInput\n          label=\"Namn på vara\"\n          value={title}\n          placeholder='t ex \"Äpplen\"'\n          onChange={(text) => setTitle(text)}\n        />\n        <TextInput\n          keyboardType=\"numeric\"\n          label=\"Volym eller vikt (kg/liter)\"\n          value={volume}\n          placeholder=\"t ex 10kg eller 5 liter\"\n          onChange={(text) => setVolume(text)}\n        />\n        <TextInput\n          keyboardType=\"numeric\"\n          label=\"Pris\"\n          placeholder=\"tex 20kr/kg eller 10kr/liter\"\n          value={price}\n          onChange={(text) => setPrice(text)}\n        />\n        <DateTimeInput\n          label=\"Sista datum för erbjudande\"\n          value={endDate}\n          onChange={(newDate) => {\n            if (newDate) setEndDate(newDate)\n          }}\n        ></DateTimeInput>\n        <DropDownList\n          label=\"Ev datumbegränsning\"\n          value={constraint}\n          setValue={setConstraint}\n          values={constraints}\n        ></DropDownList>\n        {constraint && (\n          <DateTimeInput\n            label={constraint == '0' ? 'Bäst före' : 'Sista förbrukningsdag'}\n            value={date}\n            onChange={(newDate) => {\n              if (newDate) setDate(newDate)\n            }}\n          ></DateTimeInput>\n        )}\n\n        <View\n          style={{\n            ...styles.actionContainer,\n            justifyContent: 'flex-start',\n            backgroundColor: '#FFFFFF',\n          }}\n        >\n          <Button\n            icon=\"camera\"\n            mode=\"contained\"\n            uppercase={false}\n            // onPress={() => console.log('Pressed')}\n          >\n            Lägg till bild\n          </Button>\n        </View>\n        <TextInput\n          label=\"Kort beskrivning\"\n          value={description}\n          placeholder='t ex \"Ekologiskt, ursprung Sverige\"'\n          onChange={(text) => setDescription(text)}\n        />\n        <TextInput\n          label=\"Övrigt\"\n          value={other}\n          onChange={(text) => setOther(text)}\n        />\n        <View style={styles.actionContainer}>\n          <Button\n            onPress={() => {\n              navigation.navigate('ListDeals')\n            }}\n            uppercase={false}\n          >\n            Rensa utkast\n          </Button>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  )\n}\n\nexport default CreateDeal\n","import { useState } from 'react'\nimport { Pressable, StyleSheet, View } from 'react-native'\nimport { Checkbox, Text, useTheme } from 'react-native-paper'\n\nconst styles = StyleSheet.create({\n  checkbox: {},\n  checkboxContainer: {\n    flexDirection: 'row',\n  },\n})\n\nconst CheckboxWithText = ({\n  checkedByDefault,\n  text,\n\n  onChange,\n}: {\n  checkedByDefault: boolean\n  text: string\n\n  onChange: (checked: boolean) => void\n}) => {\n  const [checked, setChecked] = useState(checkedByDefault)\n  const theme = useTheme()\n  return (\n    <View style={styles.checkboxContainer}>\n      <Checkbox\n        status={checked ? 'checked' : 'unchecked'}\n        onPress={() => {\n          onChange(!checked)\n          setChecked(!checked)\n        }}\n        color={theme.colors.primary}\n      ></Checkbox>\n      <Pressable\n        onPress={() => {\n          onChange(!checked)\n          setChecked(!checked)\n        }}\n      >\n        <Text style={{ paddingTop: 10 }}>{text}</Text>\n      </Pressable>\n    </View>\n  )\n}\n\nexport default CheckboxWithText\n","import { useState, useEffect, useLayoutEffect } from 'react'\nimport {\n  Button,\n  Divider,\n  Headline,\n  Subheading,\n  Surface,\n  Text,\n  useTheme,\n} from 'react-native-paper'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport { KeyboardAvoidingView, SafeAreaView, StyleSheet } from 'react-native'\nimport { View } from 'react-native'\nimport CheckboxWithText from './form/CheckboxWithText'\nimport TextInput from './form/TextInput'\nimport useTenderRequests from '../hooks/useTenderRequests'\nimport useAuth from '../hooks/useAuth'\nimport uuid from 'react-native-uuid'\nimport useOffers from '../hooks/useOffers'\nimport { TenderRequest } from '../data/tenderRequests'\nimport { Offer } from '../data/offers'\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingBottom: 10,\n    paddingTop: 10,\n  },\n  text: {\n    paddingTop: 5,\n  },\n  divider: {\n    borderColor: '#D8D6CE',\n    borderWidth: 0.5,\n    marginTop: 20,\n    marginBottom: 10,\n  },\n  surface: {\n    backgroundColor: '#FFFFFF',\n    elevation: 0,\n  },\n})\n\nconst CreateOffer = ({\n  navigation,\n  route,\n}: {\n  navigation: any\n  route: any\n}) => {\n  const [selectedQualificationCriterias, setSelectedQualificationCriterias] =\n    useState(Array<string>)\n  const [selectedOptionalCriterias, setSelectedOptionalCriterias] = useState(\n    Array<string>\n  )\n  const { user: supplier } = useAuth()\n  const [, , add, refreshOffers] = useOffers()\n  const [price, setPrice] = useState('')\n  const [other, setOther] = useState('')\n  const [offer, setOffer] = useState({} as Offer)\n  const tenderRequest = route.params?.tenderRequest\n  useEffect(() => {\n    setOffer({\n      qualificationCriteriasMet: selectedOptionalCriterias,\n      optionalCriteriasMet: selectedOptionalCriterias,\n      price: {\n        SEK: +price,\n      },\n      other: other,\n      tenderRequestId: tenderRequest.id,\n      approved: false,\n      submissionDate: new Date(),\n      supplier: supplier,\n      buyer: tenderRequest.buyer,\n      id: uuid.v4(),\n    } as Offer)\n  }, [\n    selectedQualificationCriterias,\n    selectedOptionalCriterias,\n    price,\n    other,\n    tenderRequest,\n    supplier,\n  ])\n\n  useEffect(() => {\n    refreshOffers()\n  }, [tenderRequest])\n\n  useLayoutEffect(() => {\n    // publish button in header:\n    navigation.setOptions({\n      headerRight: () => <Button onPress={() => publish(offer)}>Skicka</Button>,\n    })\n  }, [offer])\n\n  const publish = (offer: Offer) => {\n    if (!tenderRequest.id) return console.error('no tenderRequest.id')\n\n    console.log('publish offer', offer)\n\n    add(offer)\n\n    navigation.navigate('TenderRequest', { tenderRequest })\n  }\n\n  return (\n    <SafeAreaView>\n      <KeyboardAvoidingView>\n        <View style={styles.container}>\n          <Headline>{tenderRequest.title}</Headline>\n          <Text style={styles.text}>{tenderRequest.volume} kg</Text>\n\n          <Divider style={styles.divider} />\n          <Text style={styles.text}>\n            Sista svar: {tenderRequest.lastOfferDate?.toString().split('T')[0]}\n          </Text>\n          <Text style={styles.text}>\n            Tilldelning senast:{' '}\n            {tenderRequest.lastAwardDate?.toString().split('T')[0]}\n          </Text>\n          <Text style={styles.text}>\n            Leveransplan: {tenderRequest.deliveryPlan}\n          </Text>\n          <Text style={styles.text}>\n            Leverans startdatum:{' '}\n            {tenderRequest.deliveryStartDate?.toString().split('T')[0]}\n          </Text>\n          <Subheading style={styles.text}>Villkor</Subheading>\n          <Text style={styles.text}>\n            Producent ansvarar för leverans enligt överenskommelse.\n          </Text>\n          <Divider style={styles.divider} />\n          <Subheading style={styles.text}>Urval</Subheading>\n          <Text style={styles.text}>\n            Inlämnade anbud som uppfyller krav rangordnas efter offererat pris.\n            Uppfyllda önskemål ger prisavdrag vid rangordning av anbud.\n          </Text>\n        </View>\n        <Surface style={styles.surface}>\n          <View style={styles.container}>\n            <Subheading>Krav</Subheading>\n            {tenderRequest.qualificationCriteria?.map((criteria, i) => (\n              <CheckboxWithText\n                key={i}\n                text={criteria}\n                checkedByDefault={false}\n                onChange={(checked) => {\n                  let newChoices = selectedQualificationCriterias.filter(\n                    (choice) => choice != criteria\n                  )\n                  if (checked) {\n                    //add to list\n                    newChoices.push(criteria)\n                  }\n                  setSelectedQualificationCriterias(newChoices)\n                }}\n              ></CheckboxWithText>\n            ))}\n            <Subheading>Önskemål</Subheading>\n            {tenderRequest.optionalCriteria?.map((optionalCriteria, i) => (\n              <CheckboxWithText\n                key={i}\n                text={optionalCriteria}\n                checkedByDefault={false}\n                onChange={(checked) => {\n                  let newChoices = selectedOptionalCriterias.filter(\n                    (choice) => choice != optionalCriteria\n                  )\n                  if (checked) {\n                    //add to list\n                    newChoices.push(optionalCriteria)\n                  }\n                  setSelectedOptionalCriterias(newChoices)\n                }}\n              ></CheckboxWithText>\n            ))}\n            <Subheading>Offererat pris</Subheading>\n            <TextInput\n              label=\"Pris i kr\"\n              value={price}\n              keyboardType=\"numeric\"\n              outlined={true}\n              styles={{ width: 300, marginBottom: 10 }}\n              onChange={(text) => setPrice(text)}\n            />\n            <Subheading>Övrigt</Subheading>\n            <TextInput\n              label=\"Eventuell ytterligare information\"\n              value={other}\n              outlined={true}\n              styles={{ width: 300 }}\n              onChange={(text) => setOther(text)}\n            />\n          </View>\n        </Surface>\n        <View\n          style={{\n            ...styles.container,\n            flexDirection: 'row',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            paddingTop: 20,\n            paddingBottom: 20,\n          }}\n        >\n          <Button onPress={() => {}} uppercase={false}>\n            Spara utkast\n          </Button>\n          <Button\n            onPress={() => publish(offer)}\n            mode=\"contained\"\n            uppercase={false}\n          >\n            Publicera\n          </Button>\n        </View>\n        {/* \n      <TextInput\n        label=\"Beställare\"\n        value={\n          buyer?.name +\n          ', ' +\n          buyer?.address +\n          ', ' +\n          buyer?.zip +\n          ' ' +\n          buyer?.postalAddress\n        }\n        disabled={true}\n      />\n      <DateTimeInput\n        label=\"Sista anbud\"\n        value={lastOfferDate}\n        onChange={(newDate) => {\n          if (newDate) setLastOfferDate(newDate)\n        }}\n      ></DateTimeInput>\n      <DateTimeInput\n        label=\"Tilldelning senast\"\n        value={lastAwardDate}\n        onChange={(newDate) => {\n          if (newDate) setLastAwardDate(newDate)\n        }}\n      ></DateTimeInput>\n      <DateTimeInput\n        label=\"Leverans startdatum\"\n        value={deliveryStartDate}\n        onChange={(newDate) => {\n          if (newDate) setDeliveryStartDate(newDate)\n        }}\n      ></DateTimeInput>\n      <DropDownList\n        label=\"Leveransplan\"\n        value={deliveryPlan}\n        setValue={setDeliveryPlan}\n        values={deliveryPlans}\n      ></DropDownList>\n      <TextInput\n        label=\"Volym per leverans\"\n        value={volumePerDelivery}\n        onChange={(text) => setVolumePerDelivery(text)}\n        disabled={true}\n      />\n      <TextInput\n        label=\"Villkor\"\n        value=\"Producent ansvarar för leverans enligt överenskommelse.\"\n        disabled={true}\n        multiline={true}\n        numberOfLines={2}\n      />\n      <TextInput\n        label=\"Urval\"\n        value=\"Inlämnade anbud som uppfyller krav rangordnas efter offererat pris. Uppfyllda önskemål ger prisavdrag vid rangordning av anbud.\"\n        disabled={true}\n        multiline={true}\n        numberOfLines={3}\n      />\n      <DropDownList\n        label=\"Krav\"\n        value={qualificationCriteria}\n        setValue={setQualificationCriteria}\n        values={criterias}\n        multiSelect={true}\n      ></DropDownList>\n      <DropDownList\n        label=\"Önskemål\"\n        value={optionalCriteria}\n        setValue={setOptionalCriteria}\n        values={criterias}\n        multiSelect={true}\n      ></DropDownList> */}\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  )\n}\n\nexport default CreateOffer\n","import React from 'react'\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs'\nimport Deals from './components/Deals'\nimport Deal from './components/Deal'\nimport ExploreNavigation from './ExploreNavigation'\nimport TenderRequests from './components/TenderRequests'\nimport TenderRequest from './components/TenderRequest'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { IconButton, useTheme } from 'react-native-paper'\nimport Notifications from './components/Notifications'\nimport SupplierProfile from './components/SupplierProfile'\nimport BottomNavigationIcon from './components/BottomNavigationIcon'\nimport CreateDeal from './components/CreateDeal'\nimport CreateOffer from './components/CreateOffer'\n\nconst DealsNavigation = () => {\n  const Stack = createStackNavigator()\n  return (\n    <>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"ListDeals\"\n          options={({ navigation }) => ({\n            headerRight: () => (\n              <IconButton\n                icon=\"bell\"\n                size={18}\n                onPress={() => navigation.navigate('Notifications')}\n              />\n            ),\n            title: 'Erbjudanden',\n          })}\n          component={Deals}\n        />\n        <Stack.Screen\n          name=\"Deal\"\n          options={{\n            title: 'Erbjudande',\n          }}\n          component={Deal}\n        />\n        <Stack.Screen\n          name=\"CreateDeal\"\n          options={{\n            title: 'Erbjud vara',\n          }}\n          component={CreateDeal}\n        />\n        <Stack.Screen name=\"Notifications\" component={Notifications} />\n      </Stack.Navigator>\n    </>\n  )\n}\n\nconst TenderRequestsNavigation = () => {\n  const Stack = createStackNavigator()\n  return (\n    <>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"ListTenderRequests\"\n          options={{\n            title: 'Förfrågningar',\n          }}\n          component={TenderRequests}\n        />\n        <Stack.Screen\n          name=\"TenderRequest\"\n          options={{\n            title: 'Förfrågan',\n          }}\n          component={TenderRequest}\n        />\n        <Stack.Screen\n          name=\"CreateOffer\"\n          options={{\n            title: 'Lämna anbud',\n          }}\n          component={CreateOffer}\n        />\n      </Stack.Navigator>\n    </>\n  )\n}\n\nconst SupplierProfileNavigation = () => {\n  const Stack = createStackNavigator()\n  return (\n    <>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"SupplierProfile\"\n          options={{\n            title: 'Wermlands Mejeri',\n          }}\n          component={SupplierProfile}\n        />\n      </Stack.Navigator>\n    </>\n  )\n}\n\nconst SupplierNavigation = () => {\n  const theme = useTheme()\n  const Tab = createMaterialBottomTabNavigator()\n  return (\n    <Tab.Navigator\n      activeColor={theme.colors.primary}\n      inactiveColor={theme.colors.iconInactive}\n      barStyle={{ backgroundColor: theme.colors.background }}\n      theme={theme}\n      initialRouteName=\"TenderRequests\"\n    >\n      <Tab.Screen\n        name=\"TenderRequests\"\n        component={TenderRequestsNavigation}\n        options={{\n          tabBarLabel: 'Förfrågningar',\n          tabBarAccessibilityLabel: 'Förfrågningar',\n          tabBarIcon: ({ focused }) => (\n            <BottomNavigationIcon\n              name=\"cart\"\n              focused={focused}\n            ></BottomNavigationIcon>\n          ),\n        }}\n        // add back button in header:\n      />\n      <Tab.Screen\n        name=\"Deals\"\n        component={DealsNavigation}\n        options={{\n          tabBarLabel: 'Erbjudanden',\n          tabBarAccessibilityLabel: 'Erbjudanden',\n          tabBarIcon: ({ focused }) => (\n            <BottomNavigationIcon\n              name=\"corn\"\n              focused={focused}\n            ></BottomNavigationIcon>\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Explore\"\n        component={ExploreNavigation}\n        options={{\n          tabBarLabel: 'Upptäck',\n          tabBarAccessibilityLabel: 'Upptäck',\n          tabBarIcon: ({ focused }) => (\n            <BottomNavigationIcon\n              name=\"compass\"\n              focused={focused}\n            ></BottomNavigationIcon>\n          ),\n        }}\n      />\n\n      <Tab.Screen\n        name=\"Profile\"\n        component={SupplierProfileNavigation}\n        options={{\n          tabBarLabel: 'Mina sidor',\n          tabBarAccessibilityLabel: 'Mina sidor',\n          tabBarIcon: ({ focused }) => (\n            <BottomNavigationIcon\n              name=\"account\"\n              focused={focused}\n            ></BottomNavigationIcon>\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  )\n}\n\nexport default SupplierNavigation\n","import { StyleSheet } from 'react-native'\nimport { Button, Card } from 'react-native-paper'\nimport { TenderRequest } from '../data/tenderRequests'\nimport useAuth from '../hooks/useAuth'\n\nconst TenderRequestCard = ({\n  tenderRequest,\n  navigation,\n  user,\n}: {\n  tenderRequest: TenderRequest\n  navigation: any\n  user: ReturnType<typeof useAuth>['user']\n}) => {\n  const isBuyer = user?.type === 'buyer'\n  const isSupplier = user?.type === 'supplier'\n\n  return (\n    <Card\n      style={styles.card}\n      onPress={() =>\n        navigation.navigate('TenderRequests', {\n          screen: 'TenderRequest',\n          params: {\n            tenderRequest,\n          },\n        })\n      }\n    >\n      <Card.Title\n        title={tenderRequest.title}\n        titleVariant=\"titleSmall\"\n        titleStyle={{\n          fontSize: 14,\n        }}\n        subtitle={\n          'Tilldelningsdatum: ' +\n          tenderRequest.lastAwardDate?.toString().split('T')[0]\n        }\n        right={(props) => <Button icon=\"chevron-right\" />}\n      ></Card.Title>\n    </Card>\n  )\n}\n\nexport default TenderRequestCard\n\nconst styles = StyleSheet.create({\n  header: {\n    margin: 16,\n  },\n  card: {\n    margin: 10,\n    backgroundColor: 'white',\n  },\n  infoCard: {\n    marginTop: 5,\n    marginBottom: 5,\n  },\n})\n","import {\n  Text,\n  Button,\n  List,\n  useTheme,\n  Divider,\n  Card,\n  Headline,\n  Subheading,\n} from 'react-native-paper'\nimport { StyleSheet, SafeAreaView, View } from 'react-native'\nimport { Tabs, TabScreen } from 'react-native-paper-tabs'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport Buyer from './Buyer'\n\nimport useAuth from '../hooks/useAuth'\nimport { useEffect, useState } from 'react'\nimport useTenderRequests from '../hooks/useTenderRequests'\nimport TenderRequestCard from './TenderRequestCard'\n\nconst BuyerProfile = ({\n  route,\n  navigation,\n}: {\n  route: any\n  navigation: any\n}) => {\n  const theme = useTheme()\n  const { user: buyer, logout } = useAuth()\n  const [tenderRequests, , , refreshTenderRequests] = useTenderRequests()\n  const [showTenderRequests, setShowTenderRequests] = useState(true)\n  const [showDeals, setShowDeals] = useState(true)\n\n  useEffect(() => {\n    refreshTenderRequests()\n  }, [])\n\n  const myTenderRequests = tenderRequests.filter(\n    (tr) => tr.buyer.id === buyer?.id\n  )\n  return (\n    <>\n      <View style={{ ...styles.header }}>\n        <Headline>Mina sidor</Headline>\n        <Subheading>{buyer?.name}</Subheading>\n      </View>\n      <Tabs\n        uppercase={false}\n        style={{ backgroundColor: '#D8F5E3' }}\n        theme={theme}\n      >\n        <TabScreen label=\"Aktuellt\">\n          <ScrollView>\n            <List.Accordion\n              title=\"Anbudsförfrågningar\"\n              expanded={showTenderRequests}\n              onPress={() =>\n                setShowTenderRequests(\n                  (showTenderRequests) => !showTenderRequests\n                )\n              }\n            >\n              {(myTenderRequests.length === 0 && (\n                <Card.Title\n                  style={styles.infoCard}\n                  title=\"Inga anbudsförfrågningar\"\n                  subtitle=\"Skapa en ny förfrågan för att få anbud från leverantörer.\"\n                ></Card.Title>\n              )) || <List.Subheader>Publicerade</List.Subheader>}\n              {myTenderRequests.map((tenderRequest) => (\n                <TenderRequestCard\n                  user={buyer}\n                  key={tenderRequest.id}\n                  tenderRequest={tenderRequest}\n                  navigation={navigation}\n                />\n              ))}\n            </List.Accordion>\n            <Divider />\n            <List.Accordion\n              title=\"Erbjudanden\"\n              expanded={showDeals}\n              onPress={() => setShowDeals((showDeals) => !showDeals)}\n            >\n              <List.Subheader>Favoriter</List.Subheader>\n              <Card>\n                <Card.Title\n                  title=\"Fina morötter\"\n                  subtitle=\"Upp till 5 000 kg per år, leverans veckovis\"\n                ></Card.Title>\n              </Card>\n            </List.Accordion>\n          </ScrollView>\n        </TabScreen>\n        <TabScreen label=\"Mina avtal\">\n          <ScrollView>\n            <List.Accordion title=\"Pågående\" expanded={true}>\n              <Card>\n                <Card.Title\n                  title=\"Morötter\"\n                  subtitle=\"500 kg | Wermlands Mejeri\"\n                ></Card.Title>\n              </Card>\n              <Card>\n                <Card.Title\n                  title=\"Morötter\"\n                  subtitle=\"700 kg | Wermlands Mejeri\"\n                ></Card.Title>\n              </Card>\n            </List.Accordion>\n            <Divider />\n            <List.Accordion title=\"Avslutade\">\n              <Card>\n                <Card.Title\n                  title=\"Morötter\"\n                  subtitle=\"500 kg | Wermlands Mejeri\"\n                ></Card.Title>\n              </Card>\n            </List.Accordion>\n          </ScrollView>\n        </TabScreen>\n        <TabScreen label=\"Profil\">\n          <Buyer\n            route={{ ...route, params: { buyer } }}\n            navigation={navigation}\n            editable={true}\n          />\n        </TabScreen>\n      </Tabs>\n      <Button\n        mode=\"outlined\"\n        onPress={() => {\n          navigation.popToTop()\n          if (buyer) logout(buyer)\n        }}\n      >\n        Logga ut\n      </Button>\n    </>\n  )\n}\nexport default BuyerProfile\n\nconst styles = StyleSheet.create({\n  header: {\n    margin: 16,\n  },\n  card: {\n    margin: 10,\n    backgroundColor: 'white',\n  },\n  infoCard: {\n    marginTop: 5,\n    marginBottom: 5,\n  },\n})\n","import { useState, useEffect, useLayoutEffect } from 'react'\nimport { Button } from 'react-native-paper'\nimport TextInput from './form/TextInput'\nimport DateTimeInput from './form/DateTimeInput'\nimport DropDownList from './form/DropDownList'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport useTenderRequests from '../hooks/useTenderRequests'\nimport useAuth from '../hooks/useAuth'\nimport { StyleSheet, View } from 'react-native'\n\nconst CreateTenderRequest = ({\n  navigation,\n  route,\n}: {\n  navigation: any\n  route: any\n}) => {\n  const [title, setTitle] = useState('')\n  const [volume, setVolume] = useState('')\n  const [lastOfferDate, setLastOfferDate] = useState(new Date())\n  const [lastAwardDate, setLastAwardDate] = useState(new Date())\n  const [deliveryStartDate, setDeliveryStartDate] = useState(new Date())\n  const [deliveryPlan, setDeliveryPlan] = useState('')\n  const [volumePerDelivery, setVolumePerDelivery] = useState('')\n  const [qualificationCriteria, setQualificationCriteria] = useState('')\n  const [optionalCriteria, setOptionalCriteria] = useState('')\n  const [terms] = useState(\n    'Producent ansvarar för leverans enligt överenskommelse.'\n  )\n  const [grading] = useState(\n    'Inlämnade anbud som uppfyller krav rangordnas efter offererat pris. Uppfyllda önskemål ger prisavdrag vid rangordning av anbud.'\n  )\n  const [, , add] = useTenderRequests()\n\n  const { user: buyer } = useAuth()\n\n  const deliveryPlans = [\n    { label: 'Veckovis', value: '0' },\n    { label: 'Månadsvis', value: '1' },\n    { label: 'Kvartalsvis', value: '2' },\n    { label: 'Endast en leverans', value: '3' },\n  ]\n\n  const criterias = [\n    { label: 'KRAV-certifierad', value: '0' },\n    { label: 'Ekologisk', value: '1' },\n    { label: 'Kvalitet klass 1', value: '2' },\n    { label: 'Studiebesök på plats, 1h', value: '3' },\n    { label: 'Studiebesök på plats, 2h', value: '4' },\n    { label: 'Studiebesök digitalt, 1h', value: '5' },\n    { label: 'Studiebesök digitalt, 2h', value: '6' },\n  ]\n\n  useEffect(() => {\n    if (route.params?.title) {\n      setTitle(route.params?.title)\n    }\n  }, [route.params])\n\n  const getSelectedOptions = (\n    selectedOptions: string,\n    options: Array<{ label: string; value: string }>\n  ) => {\n    return selectedOptions\n      .split(',')\n      .map((critera: string) => {\n        return options.find((option: any) => option.value == critera)?.label\n      })\n      .filter((criteria: string | undefined) => criteria)\n  }\n\n  const tenderRequest = {\n    title,\n    volume: +volume,\n    lastOfferDate,\n    lastAwardDate,\n    buyer,\n    deliveryStartDate,\n    deliveryPlan: getSelectedOptions(deliveryPlan, deliveryPlans).pop(),\n    volumePerDelivery: volumePerDelivery,\n    optionalCriteria: getSelectedOptions(optionalCriteria, criterias),\n    qualificationCriteria: getSelectedOptions(qualificationCriteria, criterias),\n    terms,\n    grading,\n  }\n\n  useLayoutEffect(() => {\n    // publish button in header:\n    navigation.setOptions({\n      headerRight: () => (\n        <Button onPress={() => publish(tenderRequest)}>Publicera</Button>\n      ),\n    })\n  }, [tenderRequest])\n\n  const publish = (tenderRequest: any) => {\n    add(tenderRequest)\n\n    navigation.navigate('ListTenderRequests')\n  }\n\n  return (\n    <ScrollView>\n      <TextInput\n        label=\"Namn på vara\"\n        value={title}\n        onChange={(text) => setTitle(text)}\n      />\n      <TextInput\n        label=\"Total volym\"\n        value={volume}\n        onChange={(text) => setVolume(text)}\n      />\n      <TextInput\n        label=\"Beställare\"\n        value={\n          buyer?.name +\n          ', ' +\n          buyer?.address +\n          ', ' +\n          buyer?.zip +\n          ' ' +\n          buyer?.postalAddress\n        }\n        disabled={true}\n      />\n      <DateTimeInput\n        label=\"Sista anbud\"\n        value={lastOfferDate}\n        onChange={(newDate) => {\n          if (newDate) setLastOfferDate(newDate)\n        }}\n      ></DateTimeInput>\n      <DateTimeInput\n        label=\"Tilldelning senast\"\n        value={lastAwardDate}\n        onChange={(newDate) => {\n          if (newDate) setLastAwardDate(newDate)\n        }}\n      ></DateTimeInput>\n      <DateTimeInput\n        label=\"Leverans startdatum\"\n        value={deliveryStartDate}\n        onChange={(newDate) => {\n          if (newDate) setDeliveryStartDate(newDate)\n        }}\n      ></DateTimeInput>\n      <DropDownList\n        label=\"Leveransplan\"\n        value={deliveryPlan}\n        setValue={setDeliveryPlan}\n        values={deliveryPlans}\n      ></DropDownList>\n      <TextInput\n        label=\"Volym per leverans\"\n        value={volumePerDelivery}\n        onChange={(text) => setVolumePerDelivery(text)}\n      />\n      <TextInput\n        label=\"Villkor\"\n        value={terms}\n        disabled={true}\n        multiline={true}\n        numberOfLines={2}\n      />\n      <TextInput\n        label=\"Urval\"\n        value={grading}\n        disabled={true}\n        multiline={true}\n        numberOfLines={3}\n      />\n      <DropDownList\n        label=\"Krav\"\n        value={qualificationCriteria}\n        setValue={setQualificationCriteria}\n        values={criterias}\n        multiSelect={true}\n      ></DropDownList>\n      <DropDownList\n        label=\"Önskemål\"\n        value={optionalCriteria}\n        setValue={setOptionalCriteria}\n        values={criterias}\n        multiSelect={true}\n      ></DropDownList>\n      <View style={styles.actionContainer}>\n        <Button onPress={() => {}} uppercase={false}>\n          Spara utkast\n        </Button>\n        <Button mode=\"contained\" onPress={publish} uppercase={false}>\n          Publicera\n        </Button>\n      </View>\n    </ScrollView>\n  )\n}\n\nexport default CreateTenderRequest\n\nconst styles = StyleSheet.create({\n  actionContainer: {\n    flexDirection: 'row',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 20,\n    paddingTop: 20,\n  },\n})\n","import React from 'react'\nimport TenderRequests from './components/TenderRequests'\nimport TenderRequest from './components/TenderRequest'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs'\nimport Deal from './components/Deal'\nimport Deals from './components/Deals'\nimport ExploreNavigation from './ExploreNavigation'\nimport { IconButton, useTheme } from 'react-native-paper'\nimport BuyerProfile from './components/BuyerProfile'\nimport BottomNavigationIcon from './components/BottomNavigationIcon'\nimport CreateTenderRequest from './components/CreateTenderRequest'\n\nconst Stack = createStackNavigator()\n\nconst TenderRequestsNavigation = () => {\n  return (\n    <>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"ListTenderRequests\"\n          options={{\n            title: 'Förfrågningar',\n          }}\n          component={TenderRequests}\n        />\n        <Stack.Screen\n          name=\"TenderRequest\"\n          options={{\n            title: 'Förfrågan',\n          }}\n          component={TenderRequest}\n        />\n        <Stack.Screen\n          name=\"CreateTenderRequest\"\n          options={{\n            title: 'Anbudsförfrågan',\n          }}\n          component={CreateTenderRequest}\n        />\n      </Stack.Navigator>\n    </>\n  )\n}\n\nconst DealsNavigation = () => {\n  return (\n    <>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"ListDeals\"\n          options={({ navigation }) => ({\n            headerRight: () => (\n              <IconButton\n                icon=\"bell\"\n                size={18}\n                onPress={() => navigation.navigate('Notifications')}\n              />\n            ),\n            title: 'Erbjudanden',\n          })}\n          component={Deals}\n        />\n        <Stack.Screen\n          name=\"Deal\"\n          options={{\n            title: 'Erbjudande',\n          }}\n          component={Deal}\n        />\n      </Stack.Navigator>\n    </>\n  )\n}\n\nconst BuyerProfileNavigation = () => {\n  const Stack = createStackNavigator()\n  return (\n    <>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"BuyerProfile\"\n          options={{\n            title: 'Kvarnbergsskolan',\n          }}\n          component={BuyerProfile}\n        />\n      </Stack.Navigator>\n    </>\n  )\n}\nconst BuyerNavigation = () => {\n  const Tab = createMaterialBottomTabNavigator()\n  const theme = useTheme()\n  return (\n    <Tab.Navigator\n      activeColor={theme.colors.primary}\n      inactiveColor={theme.colors.iconInactive}\n      barStyle={{ backgroundColor: theme.colors.background }}\n      theme={theme}\n      initialRouteName=\"Deals\"\n    >\n      <Tab.Screen\n        name=\"Deals\"\n        component={DealsNavigation}\n        options={{\n          tabBarLabel: 'Erbjudanden',\n          tabBarAccessibilityLabel: 'Erbjudanden',\n          tabBarIcon: ({ focused }) => (\n            <BottomNavigationIcon\n              name=\"corn\"\n              focused={focused}\n            ></BottomNavigationIcon>\n          ),\n        }}\n      />\n\n      <Tab.Screen\n        name=\"TenderRequests\"\n        component={TenderRequestsNavigation}\n        options={{\n          tabBarLabel: 'Förfrågningar',\n          tabBarAccessibilityLabel: 'Förfrågningar',\n          tabBarIcon: ({ focused }) => (\n            <BottomNavigationIcon\n              name=\"cart\"\n              focused={focused}\n            ></BottomNavigationIcon>\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Explore\"\n        component={ExploreNavigation}\n        options={{\n          tabBarLabel: 'Upptäck',\n          tabBarAccessibilityLabel: 'Upptäck',\n          tabBarIcon: ({ focused }) => (\n            <BottomNavigationIcon\n              name=\"compass\"\n              focused={focused}\n            ></BottomNavigationIcon>\n          ),\n        }}\n      />\n\n      <Tab.Screen\n        name=\"Profile\"\n        component={BuyerProfileNavigation}\n        options={{\n          tabBarLabel: 'Mina sidor',\n          tabBarAccessibilityLabel: 'Mina sidor',\n          tabBarIcon: ({ focused }) => (\n            <BottomNavigationIcon\n              name=\"account\"\n              focused={focused}\n            ></BottomNavigationIcon>\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  )\n}\n\nexport default BuyerNavigation\n","// import * as React from 'react'\nimport React, { useState } from 'react'\nimport Login from './components/Login'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport Notifications from './components/Notifications'\nimport SupplierNavigation from './SupplierNavigation'\nimport BuyerNavigation from './BuyerNavigation'\nimport { User } from './data/user'\n\nconst Navigation = () => {\n  const RootStack = createStackNavigator()\n\n  return (\n    <RootStack.Navigator initialRouteName=\"Login\">\n      <RootStack.Screen\n        name=\"Logga ut\"\n        options={{\n          headerShown: false,\n        }}\n        children={({ navigation }) => (\n          <Login\n            onLogin={(user: User) => {\n              navigation.navigate(user.type)\n            }}\n          />\n        )}\n      />\n      <RootStack.Screen\n        name=\"supplier\"\n        options={{\n          headerShown: false,\n        }}\n        children={() => SupplierNavigation()}\n      />\n      <RootStack.Screen\n        name=\"buyer\"\n        options={{\n          headerShown: false,\n          title: 'Tillbaka',\n        }}\n        children={() => BuyerNavigation()}\n      />\n      <RootStack.Group screenOptions={{ presentation: 'modal' }}>\n        <RootStack.Screen\n          name=\"Notifications\"\n          component={Notifications}\n          options={{\n            title: 'Notiser',\n          }}\n        />\n      </RootStack.Group>\n    </RootStack.Navigator>\n  )\n}\n\nexport default Navigation\n","import React, { useState } from 'react'\nimport { StatusBar } from 'expo-status-bar'\nimport { SafeAreaProvider } from 'react-native-safe-area-context'\nimport Navigation from './RootNavigation'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { Snackbar, useTheme } from 'react-native-paper'\nimport { SocketProvider } from './context/socketContext'\nimport { AuthProvider } from './context/authContext'\nimport useNotifications from './hooks/useNotifications'\n\nconst NotificationSnackbar = () => {\n  const [notificationVisible, setNotificationVisible] = useState<boolean>(false)\n  const [notifications] = useNotifications()\n\n  return (\n    <Snackbar\n      visible={notificationVisible}\n      onDismiss={() => setNotificationVisible(false)}\n    >\n      {notifications.length > 0 && notifications.at(-1)?.title}\n    </Snackbar>\n  )\n}\n\nexport default function App() {\n  const theme = useTheme()\n  return (\n    <AuthProvider>\n      <SocketProvider>\n        <SafeAreaProvider>\n          <NavigationContainer theme={theme}>\n            <Navigation />\n            <StatusBar style=\"light\" />\n          </NavigationContainer>\n          <NotificationSnackbar />\n        </SafeAreaProvider>\n      </SocketProvider>\n    </AuthProvider>\n  )\n}\n","import React from 'react'\nimport { StyleSheet, View } from 'react-native'\n\nexport default function IphoneDummy({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  return (\n    <View style={styles.container}>\n      <View style={styles.innerContainer}>{children}</View>\n    </View>\n  )\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#333',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  innerContainer: {\n    position: 'relative',\n    width: 375,\n    maxWidth: '100vw',\n    height: '90vh',\n    maxHeight: '100vh',\n    borderWidth: 10,\n    borderColor: '#555',\n    borderStyle: 'inset',\n    borderRadius: 40,\n    overflow: 'hidden',\n    alignItems: 'stretch',\n    justifyContent: 'center',\n  },\n})\n","import 'react-native-gesture-handler'\nimport * as React from 'react'\nimport { AppRegistry, Platform, StyleSheet, View } from 'react-native'\nimport {\n  Provider as PaperProvider,\n  MD2LightTheme,\n  configureFonts,\n} from 'react-native-paper'\nimport { expo } from './app.json'\nimport App from './src/App'\nimport { StatusBar } from 'expo-status-bar'\nimport IphoneDummy from './src/components/IphoneDummy'\nimport useNotifications from './src/hooks/useNotifications'\n\nconst fontConfig = {\n  web: {\n    regular: {\n      fontFamily: 'Avenir',\n      fontWeight: 'normal',\n    },\n    medium: {\n      fontFamily: 'Avenir',\n      fontWeight: 600,\n    },\n    light: {\n      fontFamily: 'Avenir',\n      fontWeight: 'light',\n    },\n    thin: {\n      fontFamily: 'Avenir',\n      fontWeight: 'thin',\n    },\n  },\n  ios: {\n    regular: {\n      fontFamily: 'sans-serif',\n      fontWeight: 'normal',\n    },\n    medium: {\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal',\n    },\n    light: {\n      fontFamily: 'sans-serif-light',\n      fontWeight: 'normal',\n    },\n    thin: {\n      fontFamily: 'sans-serif-thin',\n      fontWeight: 'normal',\n    },\n  },\n  android: {\n    regular: {\n      fontFamily: 'sans-serif',\n      fontWeight: 'normal',\n    },\n    medium: {\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal',\n    },\n    light: {\n      fontFamily: 'sans-serif-light',\n      fontWeight: 'normal',\n    },\n    thin: {\n      fontFamily: 'sans-serif-thin',\n      fontWeight: 'normal',\n    },\n  },\n} as const\n\nconst theme = {\n  ...MD2LightTheme,\n  roundness: 4,\n  colors: {\n    ...MD2LightTheme.colors,\n    background: '#FAF7F0', //beige\n    surface: '#FAF7F0',\n    surfaceVariant: '#EBFAEF',\n    // surfaceVariant: '#FFF',\n    primary: '#1C3BA0', //mörkblå\n    accent: '#EBFAEF',\n    // : '#666259', //mörkgrå\n    // primary: '#000', // morotsfärg: #FFA726\n    // accent: '#333', // blå: #29B6F6\n    // Add any other color changes here\n    iconInactive: '#666259', //mörkgrå\n    secondary: '#FFFFFF',\n    secondaryVariant: '#FFFFFF',\n    text: '#1B1918',\n    placeholder: '#1B1918',\n  },\n  fonts: configureFonts({ config: fontConfig }),\n}\n\nexport default function Main() {\n  /*\n  const [notification, setNotification] = React.useState({} as Notification)\n\n  React.useEffect(() => {\n    const lastNotification = notifications.at(-1)\n    if (\n      lastNotification &&\n      new Date(lastNotification?.data.date).valueOf() > Date.now() - 10000\n    ) {\n      setNotificationVisible(true)\n      setNotification(lastNotification)\n    }\n  }, [notifications])*/\n\n  return (\n    <PaperProvider theme={theme}>\n      {Platform.OS === 'web' ? (\n        <IphoneDummy>\n          <App />\n        </IphoneDummy>\n      ) : (\n        <>\n          <StatusBar />\n          <App />\n        </>\n      )}\n    </PaperProvider>\n  )\n}\n\nAppRegistry.registerComponent(expo.name, () => Main)\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [762], () => (__webpack_require__(9386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["registerForPushNotificationsAsync","_registerForPushNotificationsAsync","apply","arguments","_asyncToGenerator","token","Device","isDevice","existingStatus","ExpoNotifications","status","finalStatus","alert","data","console","log","Platform","name","importance","vibrationPattern","lightColor","SocketContext","createContext","SocketProvider","_ref","children","socket","io","_jsx","Provider","value","AuthContext","undefined","AuthProvider","_useState","useState","_useState2","_slicedToArray","user","setUser","useAuthContext","context","useContext","Error","_useAuthContext","login","useCallback","emit","logout","save","reset","buyers","setBuyers","useEffect","receive","on","off","buyer","suppliers","setSuppliers","supplier","onLogin","_useAuth","useAuth","resetting","setResetting","_useBuyers","useBuyers","_useBuyers2","loadBuyers","_useSuppliers","useSuppliers","_useSuppliers2","loadSuppliers","_useState3","connected","_useState4","setConnected","useLayoutEffect","online","SafeAreaView","style","styles","container","_jsxs","ScrollView","contentContainerStyle","scrollView","View","Title","title","Subheading","subheading","map","i","searchResult","Avatar","size","avatar","source","uri","image","Text","searchResultName","onPress","e","_objectSpread","marginTop","Button","setTimeout","StyleSheet","textAlign","marginVertical","flex","alignItems","justifyContent","loginForm","button","margin","marginRight","paddingTop","flexDirection","marginBottom","linkContainer","notifications","setNotifications","filter","n","_n$data","_n$data$to","to","contains","id","offers","setOffers","offer","Array","tenderRequests","setTenderRequests","arr","tenderRequest","deals","setDeals","deal","Notifications","navigation","_useNotifications","useNotifications","_useNotifications2","refresh","_useOffers","useOffers","_useOffers2","_useTenderRequests","useTenderRequests","_useTenderRequests2","_useDeals","useDeals","_useDeals2","List","length","left","props","icon","description","notification","type","navigate","find","right","body","areas","certifications","organic","MSC","kravMarked","ethical","fairtrade","locallyProduced","_React$useState","React","_React$useState2","expanded","setExpanded","_React$useState3","_React$useState4","searchQuery","setSearchQuery","_React$useState5","_React$useState6","filteredDeals","setFilteredDeals","_React$useState7","_React$useState8","activeAreas","setActiveAreas","product","toLowerCase","includes","Object","entries","reduce","result","_ref2","_ref3","key","area","assign","_defineProperty","count","d","commodity","_Fragment","Searchbar","placeholder","onChangeText","searchbar","_ref4","Card","TouchableOpacity","sort","a","b","localeCompare","price","SEK_per_Kg","brand","FAB","fab","backgroundColor","elevation","position","bottom","card","cover","height","borderRadius","messages","text","date","padding","flexGrow","messageContainer","width","paddingHorizontal","paddingVertical","answer","alignSelf","question","messageText","fontSize","color","messageMetadata","inputContainer","input","sendButton","marginLeft","sendButtonText","inputText","setInputText","message","Caption","TextInput","_messages$at","push","at","Date","toISOString","Header","header","Headline","fontWeight","Math","round","SEK","toLocaleString","Row","_ref7","Column","_ref8","Container","_ref9","route","favorite","params","back","theme","useTheme","setOptions","headerRight","global","Tabs","uppercase","dark","TabScreen","label","manufacturer","group","mainGroup","toLocaleLowerCase","getTitle","kilos","DataTable","_ref5","_ref6","cert","checked","Checkbox","actionContainer","mode","screen","Chat","display","paddingBottom","address","zip","postalAddress","email","produce","filteredSuppliers","filteredBuyers","MaterialCommunityIcons","Divider","_supplier$produce","editable","headerContainer","IconButton","editButton","divider","subHeading","p","Paragraph","heading","lineHeight","menuContainer","menuLink","Stack","createStackNavigator","Navigator","Screen","options","component","Explore","Supplier","Buyer","ChevronRight","open","setOpen","filteredRequests","request","titleVariant","titleStyle","subtitle","marginHorizontal","checkboxContainer","checkbox","_tenderRequest$buyer","_tenderRequest$lastOf","_tenderRequest$lastAw","_tenderRequest$delive","_tenderRequest$qualif","_tenderRequest$option","_tenderRequest$buyer2","_tenderRequest$buyer3","tenderOffers","setTenderOffers","updateOffer","refreshOffers","setTenderRequest","tenderRequestId","offersForTenderRequest","tenderRequestFromState","myOffers","lastOfferDate","toString","split","lastAwardDate","deliveryPlan","deliveryStartDate","terms","grading","qualificationCriteria","criteria","optionalCriteria","paddingLeft","paddingRight","_offer$submissionDate","submissionDate","approved","_offer$supplier","_offer$submissionDate2","infoCard","showOffers","setShowOffers","show","OfferCard","popToTop","focused","colors","primary","iconInactive","keyboardType","disabled","multiline","numberOfLines","outlined","onChange","PaperTextInput","background","roundness","values","multiSelect","setValue","showDropdown","setShowDropdown","DropDown","dropDownStyle","inputProps","list","visible","showDropDown","onDismiss","DatePickerInput","locale","inputMode","_route$params","selectedOptions","setTitle","setPrice","_useState5","_useState6","volume","setVolume","_useState7","_useState8","constraint","setConstraint","_useState9","_useState10","setDate","_useState11","_useState12","endDate","setEndDate","_useState13","_useState14","setDescription","_useState15","_useState16","other","setOther","constraints","add","critera","_options$find","option","pop","origin","productManufacturingCountry","rawMaterialOriginCountry","publish","DateTimeInput","newDate","DropDownList","checkedByDefault","setChecked","Pressable","borderColor","borderWidth","surface","selectedQualificationCriterias","setSelectedQualificationCriterias","selectedOptionalCriterias","setSelectedOptionalCriterias","setOffer","qualificationCriteriasMet","optionalCriteriasMet","uuid","error","KeyboardAvoidingView","Surface","CheckboxWithText","newChoices","choice","DealsNavigation","Deals","Deal","CreateDeal","TenderRequestsNavigation","TenderRequests","TenderRequest","CreateOffer","SupplierProfileNavigation","SupplierProfile","Tab","createMaterialBottomTabNavigator","activeColor","inactiveColor","barStyle","initialRouteName","tabBarLabel","tabBarAccessibilityLabel","tabBarIcon","BottomNavigationIcon","ExploreNavigation","refreshTenderRequests","showTenderRequests","setShowTenderRequests","showDeals","setShowDeals","myTenderRequests","tr","TenderRequestCard","setLastOfferDate","setLastAwardDate","setDeliveryStartDate","setDeliveryPlan","volumePerDelivery","setVolumePerDelivery","setQualificationCriteria","_useState17","_useState18","setOptionalCriteria","_useState19","_useState21","deliveryPlans","criterias","_route$params2","getSelectedOptions","CreateTenderRequest","BuyerProfileNavigation","BuyerProfile","RootStack","headerShown","Login","SupplierNavigation","BuyerNavigation","Group","screenOptions","presentation","NotificationSnackbar","_notifications$at","notificationVisible","setNotificationVisible","Snackbar","App","SafeAreaProvider","NavigationContainer","Navigation","StatusBar","IphoneDummy","innerContainer","maxWidth","maxHeight","borderStyle","overflow","MD2LightTheme","surfaceVariant","accent","secondary","secondaryVariant","fonts","configureFonts","config","web","regular","fontFamily","medium","light","thin","ios","android","Main","PaperProvider","AppRegistry","expo","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","t","this","then","ns","create","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","g","globalThis","Function","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}