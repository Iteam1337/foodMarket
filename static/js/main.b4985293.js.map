{"version":3,"file":"static/js/main.b4985293.js","mappings":"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","sources":["lib/notifications.ts","src/context/socketContext.js","src/context/authContext.tsx","src/hooks/useAuth.ts","src/hooks/useBuyers.ts","src/hooks/useSuppliers.ts","src/components/Login.tsx","src/data/categories.js","src/hooks/useDeals.ts","src/components/Deals.tsx","src/components/Chat.tsx","src/components/Deal.tsx","src/data/suppliers.ts","src/data/buyers.ts","src/components/Explore.tsx","src/components/Supplier.tsx","src/components/Buyer.tsx","src/ExploreNavigation.tsx","src/hooks/useTenderRequests.ts","src/components/TenderRequests.tsx","src/hooks/useOffers.ts","src/components/TenderRequest.tsx","src/hooks/useNotifications.ts","src/components/Notifications.tsx","src/components/OfferCard.tsx","src/components/DealCard.tsx","src/components/TenderRequestCard.tsx","src/components/SupplierProfile.tsx","src/components/BottomNavigationIcon.tsx","src/components/form/TextInput.tsx","src/components/form/DropDownList.tsx","src/components/form/DateTimeInput.tsx","src/components/CreateDeal.tsx","src/components/form/CheckboxWithText.tsx","src/components/CreateOffer.tsx","src/SupplierNavigation.tsx","src/components/BuyerProfile.tsx","src/components/CreateTenderRequest.tsx","src/BuyerNavigation.tsx","src/RootNavigation.tsx","src/components/NotificationSnackbar.tsx","src/App.tsx","src/components/IphoneDummy.tsx","App.tsx","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import * as Device from 'expo-device'\nimport * as ExpoNotifications from 'expo-notifications'\nimport { Platform } from 'react-native'\nimport app from '../app.json'\n\nexport async function registerForPushNotificationsAsync() {\n  let token\n  if (Device.isDevice) {\n    const { status: existingStatus } =\n      await ExpoNotifications.getPermissionsAsync()\n    let finalStatus = existingStatus\n    if (existingStatus !== 'granted') {\n      const { status } = await ExpoNotifications.requestPermissionsAsync()\n      finalStatus = status\n    }\n    if (finalStatus !== 'granted') {\n      alert('Failed to get push token for push notification!')\n      return undefined\n    }\n    token = (\n      await ExpoNotifications.getExpoPushTokenAsync({\n        projectId: app.expo.extra.eas.projectId,\n      })\n    ).data\n    console.log('token', token)\n\n    if (Platform.OS === 'android') {\n      ExpoNotifications.setNotificationChannelAsync('default', {\n        name: 'default',\n        importance: ExpoNotifications.AndroidImportance.MAX,\n        vibrationPattern: [0, 250, 250, 250],\n        lightColor: '#FF231F7C',\n      })\n    }\n    return token\n  }\n\n  return undefined\n}\n","// SocketContext.js\nimport React, { createContext } from 'react'\nimport io from 'socket.io-client'\n\nexport const SocketContext = createContext()\n\nexport const SocketProvider = ({ children }) => {\n  const socket = io('https://skaff-api.iteam.pub')\n\n  return (\n    <SocketContext.Provider value={socket}>{children}</SocketContext.Provider>\n  )\n}\n","import React, { createContext, useState, useContext } from 'react'\nimport { User } from '../data/user'\n\ninterface AuthContextType {\n  user: User | null\n  setUser: (user: User | null) => void\n}\n\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null)\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport function useAuthContext() {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error('useAuthContext must be used within an AuthProvider')\n  }\n  return context\n}\n","import { useContext, useEffect, useCallback } from 'react'\nimport { SocketContext } from '../context/socketContext'\nimport { User } from '../data/user'\nimport { useAuthContext } from '../context/authContext'\n\ntype fn = (user: User, token?: string) => void\n\nconst useAuth = (): {\n  user: User | null\n  login: fn\n  logout: fn\n  save: fn\n  reset: any\n} => {\n  const socket = useContext(SocketContext)\n  const { user, setUser } = useAuthContext()\n\n  const login = useCallback(\n    (user: User, token?: string) => {\n      socket.emit('login', { user, token }, (user: User) => {\n        console.log('got user from socket', user)\n        setUser(user)\n      })\n    },\n    [socket, setUser]\n  )\n\n  const logout = useCallback(\n    (user: User) => {\n      console.log('logout', user)\n      socket.emit('logout', { user }, (user: User) => {\n        console.log('got user from socket', user)\n        setUser(user)\n      })\n    },\n    [socket, setUser]\n  )\n\n  const save = useCallback(\n    (user: User) => {\n      console.log('save', user)\n      socket.emit('editUser', user, (user: User) => {\n        console.log('got updated user from socket', user)\n        setUser(user)\n      })\n    },\n    [socket, setUser]\n  )\n\n  const reset = useCallback(() => {\n    socket.emit('reset')\n    return true\n  }, [socket])\n\n  return { user, login, logout, save, reset }\n}\n\nexport default useAuth\n","import { useContext, useEffect, useState } from 'react'\nimport { SocketContext } from '../context/socketContext'\nimport { Buyer } from '../data/buyers'\n\nconst useBuyers = (): [Array<Buyer>, any, any, any] => {\n  const socket = useContext(SocketContext)\n  const [buyers, setBuyers] = useState([] as Array<Buyer>)\n\n  useEffect(() => {\n    const receive = (buyers: Array<Buyer>) => {\n      setBuyers(buyers)\n    }\n    socket.on('buyers', receive)\n    socket.on('connect', () => socket.emit('buyers', receive))\n\n    return () => {\n      socket.off('buyers', receive)\n      socket.off('connect', receive)\n    }\n  }, [socket])\n\n  const editBuyer = (buyer: Buyer) => {\n    socket.emit('editBuyer', buyer)\n  }\n\n  const addBuyer = (buyer: Buyer) => {\n    socket.emit('addBuyer', buyer)\n  }\n\n  const refresh = () =>\n    socket.emit('buyers', (buyers: Buyer[]) => setBuyers(buyers))\n\n  return [buyers, editBuyer, addBuyer, refresh]\n}\n\nexport default useBuyers\n","import { useContext, useEffect, useState } from 'react'\nimport { SocketContext } from '../context/socketContext'\nimport { Supplier } from '../data/suppliers'\n\nconst useSuppliers = (): [Array<Supplier>, any, any, any] => {\n  const socket = useContext(SocketContext)\n  const [suppliers, setSuppliers] = useState([] as Array<Supplier>)\n\n  useEffect(() => {\n    const receive = (suppliers: Array<Supplier>) => {\n      setSuppliers(suppliers)\n    }\n    socket.on('suppliers', receive)\n\n    return () => {\n      socket.off('suppliers', receive)\n    }\n  }, [socket])\n\n  const editSupplier = (supplier: Supplier) => {\n    socket.emit('editSupplier', supplier)\n  }\n\n  const addSupplier = (supplier: Supplier) => {\n    socket.emit('addSupplier', supplier)\n  }\n\n  const refresh = () =>\n    socket.emit('suppliers', (suppliers: Supplier[]) => setSuppliers(suppliers))\n\n  return [suppliers, editSupplier, addSupplier, refresh]\n}\n\nexport default useSuppliers\n","import { useContext, useEffect, useLayoutEffect, useState } from 'react'\nimport { View, Text, SafeAreaView, StyleSheet, ScrollView } from 'react-native'\nimport { Avatar, Title, Button, Subheading } from 'react-native-paper'\nimport { registerForPushNotificationsAsync } from '../../lib/notifications'\nimport useAuth from '../hooks/useAuth'\nimport useBuyers from '../hooks/useBuyers'\nimport useSuppliers from '../hooks/useSuppliers'\nimport { useAuthContext } from '../context/authContext'\nimport { SocketContext } from '../context/socketContext'\n\nconst Login = ({ onLogin }: { onLogin: any }) => {\n  const { user, login, logout, reset } = useAuth()\n  const [resetting, setResetting] = useState(false)\n  const [buyers, , , loadBuyers] = useBuyers()\n  const [suppliers, , , loadSuppliers] = useSuppliers()\n  const socket = useContext(SocketContext)\n  const [connected, setConnected] = useState(socket.connected)\n\n  useEffect(() => {\n    loadBuyers()\n    loadSuppliers()\n    socket.on('connect', () => setConnected(true))\n    socket.on('disconnect', () => setConnected(false))\n  }, [])\n\n  // useLayoutEffect(() => {\n  //   console.log('user', user)\n  //   user?.online && logout(user) // logout if we are online\n  // }, [user])\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView contentContainerStyle={styles.scrollView}>\n        <View>\n          <Title style={styles.title}>Välj användare att testa med</Title>\n          <Subheading style={styles.subheading}>Producent</Subheading>\n          {suppliers.map((supplier, i) => {\n            return (\n              <View style={styles.searchResult} key={i}>\n                <Avatar.Image\n                  size={30}\n                  style={styles.avatar}\n                  source={{\n                    uri: 'https://skaff-api.iteam.pub' + supplier.image,\n                  }}\n                />\n                <Text\n                  style={styles.searchResultName}\n                  onPress={async () => {\n                    let token\n                    try {\n                      token = await registerForPushNotificationsAsync()\n                    } catch (e) {\n                      console.log('push error', e)\n                    }\n                    login(supplier, token)\n                    onLogin(supplier)\n                  }}\n                >\n                  {supplier.name} {supplier.online && ' 🥕'}\n                </Text>\n              </View>\n            )\n          })}\n          <Subheading style={{ ...styles.subheading, marginTop: 30 }}>\n            Beställare\n          </Subheading>\n          {buyers.map((buyer, i) => {\n            return (\n              <View style={styles.searchResult} key={i}>\n                <Avatar.Image\n                  size={30}\n                  style={styles.avatar}\n                  source={{\n                    uri: 'https://skaff-api.iteam.pub' + buyer.image,\n                  }}\n                />\n                <Text\n                  style={styles.searchResultName}\n                  onPress={async () => {\n                    let token\n                    try {\n                      token = await registerForPushNotificationsAsync()\n                    } catch (e) {\n                      console.log('push error', e)\n                    }\n                    login(buyer, token)\n                    onLogin(buyer)\n                  }}\n                >\n                  {buyer.name} {buyer.online && ' 🥕'}\n                </Text>\n              </View>\n            )\n          })}\n        </View>\n        <Button\n          onPress={() =>\n            (reset() && setResetting(true)) ||\n            setTimeout(() => setResetting(false), 10000)\n          }\n        >\n          {connected\n            ? (resetting && 'Återställer...') || 'Återställ demo'\n            : 'Server offline'}\n        </Button>\n      </ScrollView>\n    </SafeAreaView>\n  )\n}\nexport default Login\n\nconst styles = StyleSheet.create({\n  title: {\n    textAlign: 'center',\n    marginVertical: 30,\n  },\n  container: { flex: 1, alignItems: 'center', justifyContent: 'space-around' },\n  loginForm: { flex: 1, alignItems: 'center', justifyContent: 'center' },\n  scrollView: { flex: 1, alignItems: 'center', justifyContent: 'space-around' },\n  button: {\n    margin: 5,\n  },\n  avatar: { marginRight: 5 },\n  searchResultName: {\n    paddingTop: 10,\n  },\n  searchResult: {\n    flexDirection: 'row',\n    marginBottom: 10,\n  },\n  linkContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    marginBottom: 10,\n  },\n  subheading: {\n    marginBottom: 20,\n  },\n})\n","const frozen = '/assets/area_frozen_food.png'\nconst fresh_cooled = '/assets/area_fresh_or_cooled.png'\nconst groceries = '/assets/area_groceries.png'\nconst other = '/assets/area_fruit.png'\n\nexport const categories = {\n  Frozen: {\n    Desserts_Snacks: ['Ostkaka'],\n    Fruits_Berries: ['Blåbär', 'Lingon'],\n    Unprepared_Meat: [\n      'Bacon',\n      'Fransyska',\n      'Nötfärs',\n      'Nötkött strimlat',\n      'Viltfärs',\n    ],\n    Meat_Products: ['Grillkorv', 'Kassler'],\n  },\n  Fresh_Cooled: {\n    Fruits_Berries: ['Päron', 'Äpplen'],\n    Unprepared_Vegetables: [\n      'Champinjoner',\n      'Gulbetor',\n      'Kålrot',\n      'Lök gul',\n      'Morötter',\n      'Palsternackor',\n      'Polkabetor',\n      'Purjolök',\n      'Rotselleri',\n      'Rödbetor',\n      'Vitkål',\n    ],\n    Peeled_Vegetables: ['Morötter'],\n    Unprepared_Meat: [\n      'Blandfärs',\n      'Fläskkarré',\n      'Fläskkotlett',\n      'Fläskkött strimlat',\n      'Fläskkött tärnat',\n      'Hjortkött',\n      'Nötfärs',\n      'Nötkött strimlat',\n      'Nötkött tärnat',\n    ],\n    Meat_Products: [\n      'Falukorv',\n      'Fläskkorv',\n      'Grillkorv',\n      'Korv övrig',\n      'Prinskorv',\n      'Skinka kokt',\n      'Varmkorv',\n    ],\n    Dairy_Products: [\n      'Filmjölk naturell lägst 2% fetthalt',\n      'Lättmjölk, högst 0,5% fetthalt',\n      'Mellanmjölk, 1,5%-1,8% fetthalt',\n      'Standardmjölk, 3,0%-3,5% fetthalt',\n      'Vispgrädde',\n      'Yoghurt naturell',\n      'Yoghurt smaksatt',\n    ],\n    Cheese: ['Ost Hårdost övrig'],\n    Potatoes: [\n      'Potatis',\n      'Potatis skalad',\n      'Potatis skivad',\n      'Potatis strimlad',\n    ],\n    Eggs: ['Ägg färska'],\n  },\n  Pantry_Specialties: {\n    Legumes: ['Baljväxter övriga', 'Ärter gula'],\n    Seeds_and_Kernels: ['Solroskärnor'],\n    Grains: ['Havregryn', 'Mannagryn'],\n    Cooking_Fat_Oil: ['Rapsolja'],\n    Flour: [\n      'Dinkelmjöl',\n      'Grahamsmjöl',\n      'Havremjöl',\n      'Mjölmix',\n      'Rågmjöl',\n      'Rågsikt',\n      'Vetemjöl',\n    ],\n    Sugar_Sweeteners: ['Honung'],\n    Jam_Marmalade_Jelly: ['Jordgubbssylt', 'Lingonsylt', 'Pannkakssylt'],\n    Beer: ['Öl klass 1'],\n  },\n}\n\nexport const areas = {\n  'Frozen': {\n    title: 'Djupfryst',\n    image: frozen,\n  },\n  'Fresh/Cooled': {\n    title: 'Färskvaror/Kylvaror',\n    image: fresh_cooled,\n  },\n  'Grocery/Specialty': {\n    title: 'Kolonial/Speceri',\n    image: groceries,\n  },\n  'BakeryGoods': {\n    title: 'Bagerivaror',\n  },\n  'DryGoods': {\n    title: 'Torrvaror',\n  },\n  'CannedGoods': {\n    title: 'Konserver',\n  },\n  'Beverages': {\n    title: 'Drycker',\n  },\n  'CondimentsAndSpices': {\n    title: 'Kryddor och kryddblandningar',\n  },\n  'DiaryProducts': {\n    title: 'Mejeriprodukter',\n  },\n  'FishAndSeafood': {\n    title: 'Fisk och skaldjur',\n  },\n  'Pastries': {\n    title: 'Konditorivaror',\n  },\n  'Snacks': {\n    title: 'Snacks',\n  },\n  'HealthFoods': {\n    title: 'Hälsokost',\n  },\n  'NonAlcoholicBeverages': {\n    title: 'Alkoholfria drycker',\n  },\n  'Other': {\n    title: 'Other',\n    image: other,\n  },\n}\n\nexport const mainGroups = {\n  BreadAndRolls: 'Bröd och frallor',\n  CerealsAndGrains: 'Spannmål och gryn',\n  Rice: 'Ris',\n  Pasta: 'Pasta',\n  NutsAndSeeds: 'Nötter och frön',\n  CoffeeAndTea: 'Kaffe och te',\n  JuicesAndSoftDrinks: 'Juicer och läskedrycker',\n  OilsAndVinegars: 'Oljor och vinäger',\n  Cheese: 'Ost',\n  Eggs: 'Ägg',\n  Shellfish: 'Skaldjur',\n  SausagesAndDeliMeats: 'Korv och charkuterier',\n  CookiesAndBiscuits: 'Kakor och kex',\n  ChocolatesAndSweets: 'Choklad och godis',\n  EnergyBarsAndDrinks: 'Energi bars och drycker',\n  GlutenFreeProducts: 'Glutenfria produkter',\n  LactoseFreeProducts: 'Laktosfria produkter',\n}\n\nexport const certifications = {\n  organic: {\n    title: 'Organisk',\n  },\n  MSC: {\n    title: 'MSC',\n  },\n  kravMarked: {\n    title: 'Kravmärkt',\n  },\n  ethical: {\n    title: 'Etisk',\n  },\n  fairtrade: {\n    title: 'Fairtrade',\n  },\n  locallyProduced: {\n    title: 'Närodlad',\n  },\n}\n","import { useContext, useEffect, useState } from 'react'\nimport { SocketContext } from '../context/socketContext'\nimport { Deal } from '../data/deals'\n\nconst useDeals = (): [Array<Deal>, any, any, any] => {\n  const socket = useContext(SocketContext)\n  const [deals, setDeals] = useState([] as Array<Deal>)\n\n  useEffect(() => {\n    const receive = (deals: Array<Deal>) => {\n      setDeals(deals)\n    }\n    socket.on('deals', receive)\n\n    return () => {\n      socket.off('deals', receive)\n    }\n  }, [socket])\n\n  const editDeal = (deal: Deal) => {\n    socket.emit('editDeal', deal)\n  }\n\n  const addDeal = (deal: Deal) => {\n    socket.emit('addDeal', deal)\n  }\n\n  const refresh = () =>\n    socket.emit('deals', (deals: Array<Deal>) => setDeals(deals))\n\n  return [deals, editDeal, addDeal, refresh]\n}\n\nexport default useDeals\n","import * as React from 'react'\nimport { Card, FAB, List, Searchbar, Text } from 'react-native-paper'\nimport { ScrollView, StyleSheet, View } from 'react-native'\nimport { areas } from '../data/categories'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport Chat from './Chat'\nimport useDeals from '../hooks/useDeals'\nimport { Deal } from '../data/deals'\nimport { useState } from 'react'\nimport useAuth from '../hooks/useAuth'\n\ninterface Area {\n  image: string\n  title: string\n  count: number\n}\n\nconst Deals = ({ navigation }: { navigation: any }) => {\n  const [expanded, setExpanded] = React.useState({})\n  const [searchQuery, setSearchQuery] = React.useState('')\n  const [filteredDeals, setFilteredDeals] = React.useState(new Array<Deal>())\n\n  const [deals, , , refresh] = useDeals()\n  const { user } = useAuth()\n  const [activeAreas, setActiveAreas] = React.useState<{ [key: string]: Area }>(\n    {}\n  )\n\n  React.useLayoutEffect(() => {\n    refresh()\n  }, [])\n\n  React.useEffect(() => {\n    setFilteredDeals(\n      deals.filter((deal) =>\n        deal.product.name.toLowerCase().includes(searchQuery.toLowerCase())\n      )\n    )\n  }, [areas, searchQuery, deals])\n\n  React.useEffect(() => {\n    const activeAreas: { [key: string]: Area } = Object.entries(areas).reduce(\n      (result, [key, area]) =>\n        Object.assign(result, {\n          [key]: {\n            ...area,\n            count: filteredDeals.filter((d) => d.commodity.area === area.title)\n              .length,\n          },\n        }),\n      {}\n    )\n    setActiveAreas(activeAreas)\n  }, [filteredDeals])\n\n  return (\n    <>\n      <ScrollView>\n        <Searchbar\n          placeholder=\"Sök erbjudande\"\n          onChangeText={setSearchQuery}\n          value={searchQuery}\n          style={styles.searchbar}\n        />\n\n        {Object.entries(activeAreas)\n          .filter(([, c]) => c.count > 0)\n          .map(([, area]) => (\n            <Card key={area.title}>\n              <TouchableOpacity\n                onPress={() =>\n                  setExpanded((expanded) => ({\n                    ...expanded,\n                    [area.title]: !expanded[area.title],\n                  }))\n                }\n              >\n                <Card.Cover\n                  source={{ uri: `https://skaff-api.iteam.pub${area.image}` }}\n                />\n              </TouchableOpacity>\n              <List.Accordion\n                title={area.title}\n                expanded={\n                  !!searchQuery ||\n                  (expanded[area.title] as boolean) ||\n                  undefined\n                }\n              >\n                <List.Subheader>{`${area.count} varor`}</List.Subheader>\n                {filteredDeals\n                  .filter((d) => d.commodity.area === area.title)\n                  .sort((a, b) => a.product.name.localeCompare(b.product.name))\n                  .map((deal) => (\n                    <List.Item\n                      key={deal.id}\n                      right={() => <Text>{deal.price.SEK_per_Kg} kr/kg</Text>}\n                      title={deal.product.name}\n                      description={deal.supplier.name}\n                      onPress={() => navigation.navigate('Deal', { deal })}\n                    />\n                  ))}\n              </List.Accordion>\n            </Card>\n          ))}\n      </ScrollView>\n      {user?.type === 'supplier' && (\n        <FAB\n          style={styles.fab}\n          onPress={() => navigation.navigate('CreateDeal')} //, { screen: 'CreateDeal' })}\n          icon=\"plus\"\n        />\n      )}\n    </>\n  )\n}\n\nexport default Deals\n\nconst styles = StyleSheet.create({\n  searchbar: {\n    backgroundColor: 'white',\n    marginBottom: 16,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  card: {\n    margin: 10,\n    backgroundColor: 'white',\n  },\n  cover: {\n    height: 200,\n    borderRadius: 0,\n  },\n})\n","import React, { useState } from 'react'\nimport {\n  View,\n  Text,\n  ScrollView,\n  StyleSheet,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n} from 'react-native'\nimport { TextInput } from 'react-native-gesture-handler'\nimport { Caption } from 'react-native-paper'\nimport { SafeAreaView } from 'react-native-safe-area-context'\n\nconst messages = [\n  {\n    id: 1,\n    type: 'question',\n    text: 'Vad händer om skörden blir mindre än tänkt?',\n    date: '2021-05-01T12:00:00',\n  },\n  {\n    id: 2,\n    type: 'answer',\n    text: 'Vi för en kontinuerlig dialog och löser det i så fall tillsammans.',\n    date: '2021-05-01T12:01:00',\n  },\n  {\n    id: 3,\n    type: 'question',\n    text: 'Hur exakt är leveransplanen?',\n    date: '2021-05-02T12:02:00',\n  },\n  // ...fler meddelanden\n]\nconst Chat = () => {\n  const [inputText, setInputText] = useState('')\n  const handleSendMessage = () => {\n    if (!inputText) return\n    // Logik för att hantera skickade meddelanden\n    // Exempel: lägga till meddelandet i meddelandelistan\n    messages.push({\n      id: (messages.at(-1)?.id || 0) + 1,\n      type: 'question',\n      text: inputText,\n      date: new Date().toISOString(),\n    })\n    setInputText('') // Rensa svarsfältet efter att ha skickat meddelandet\n  }\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <KeyboardAvoidingView>\n        <ScrollView contentContainerStyle={styles.container}>\n          {messages.map((message, i) => (\n            <View key={message.id}>\n              <View\n                style={[\n                  styles.messageContainer,\n                  message.type === 'question' ? styles.question : styles.answer,\n                ]}\n              >\n                <Text style={styles.messageText}>{message.text}</Text>\n              </View>\n              {i === messages.length - 1 && (\n                <Caption style={styles.messageMetadata}>{message.date}</Caption>\n              )}\n            </View>\n          ))}\n          <View style={styles.inputContainer}>\n            <TextInput\n              style={styles.input}\n              value={inputText}\n              onChangeText={setInputText}\n              placeholder=\"Skriv din fråga här...\"\n            />\n            <TouchableOpacity\n              onPress={handleSendMessage}\n              style={styles.sendButton}\n            >\n              <Text style={styles.sendButtonText}>Skicka</Text>\n            </TouchableOpacity>\n          </View>\n        </ScrollView>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n    flexGrow: 1, // Lägg till denna rad\n    justifyContent: 'flex-end', // Lägg till denna rad\n  },\n  messageContainer: {\n    width: '70%',\n    paddingHorizontal: 16,\n    paddingVertical: 10,\n    borderRadius: 20,\n    marginBottom: 10,\n  },\n  answer: {\n    alignSelf: 'flex-start',\n    backgroundColor: '#757575', // Grå färg från ditt tema\n    marginBottom: 26,\n  },\n  question: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#26CC77', // Morotsfärg\n  },\n  messageText: {\n    fontSize: 16,\n    color: '#FFF',\n  },\n  messageMetadata: {\n    alignSelf: 'center',\n    marginTop: -10,\n    color: '#999',\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  input: {\n    flex: 1,\n    backgroundColor: '#FFF',\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    borderRadius: 20,\n  },\n  sendButton: {\n    marginLeft: 10,\n    backgroundColor: '#26CC77', // Morotsfärg\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 20,\n  },\n  sendButtonText: {\n    color: '#FFF',\n    fontSize: 16,\n  },\n})\n\nexport default Chat\n","import * as React from 'react'\nimport {\n  Caption,\n  Headline,\n  Subheading,\n  useTheme,\n  Text,\n  DataTable,\n  Checkbox,\n  Button,\n} from 'react-native-paper'\nimport { ScrollView, StyleSheet, View } from 'react-native'\nimport { Tabs, TabScreen } from 'react-native-paper-tabs'\nimport Chat from './Chat'\nimport deals from '../data/deals'\nimport { certifications } from '../data/categories'\nimport useAuth from '../hooks/useAuth'\nimport useDeals from '../hooks/useDeals'\n\nconst Header = ({ product, supplier, price }) => (\n  <View style={{ ...styles.container, ...styles.header }}>\n    <Headline>{product.name}</Headline>\n    <Subheading>{supplier.name}</Subheading>\n    <Subheading style={{ fontWeight: 'bold' }}>\n      {Math.round(price.SEK).toLocaleString('sv')} kr\n    </Subheading>\n  </View>\n)\n\nconst Deal = ({ route, navigation }) => {\n  const [favorite, setFavorite] = React.useState(false)\n  const [deal, setDeal] = React.useState(route.params.deal)\n\n  const [deals] = useDeals()\n\n  React.useEffect(() => {\n    if (route.params.dealId) {\n      const deal = deals.find(({ id }) => id === route.params.dealId)\n      setDeal(deal)\n    }\n  }, [route.params.dealId])\n\n  if (!deal) return <Text>Deal not found: {route.params.dealId}</Text>\n\n  const theme = useTheme()\n\n  console.log('deal', deal)\n  const getTitle = function (deal: any) {\n    return (\n      deal.commodity.group +\n      ' i kategorin ' +\n      deal.commodity.mainGroup.toLocaleLowerCase() +\n      ' ' +\n      deal.commodity.area.toLocaleLowerCase()\n    )\n  }\n\n  const toggleFavorite = function (deal: any, on: boolean = !favorite) {\n    global.alert('Ej implementerad än')\n  }\n\n  React.useLayoutEffect(() => {\n    // publish button in header:\n    navigation.setOptions({\n      headerRight: () => (\n        <Button\n          children={[]}\n          icon={favorite ? 'star' : 'star-outline'}\n          onPress={() => toggleFavorite(deal, !favorite)}\n        />\n      ),\n    })\n  }, [deal, favorite])\n\n  return (\n    <>\n      <Header {...deal} />\n      <Tabs\n        // defaultIndex={0} // default = 0\n        uppercase={false} // true/false | default=true | labels are uppercase\n        // showTextLabel={false} // true/false | default=false (KEEP PROVIDING LABEL WE USE IT AS KEY INTERNALLY + SCREEN READERS)\n        // iconPosition // leading, top | default=leading\n        style={{ backgroundColor: '#D8F5E3' }}\n        dark={false} // works the same as AppBar in react-native-paper\n        theme={theme} // works the same as AppBar in react-native-paper\n        // mode=\"scrollable\" // fixed, scrollable | default=fixed\n        // onChangeIndex={(newIndex) => {}} // react on index change\n        // showLeadingSpace={true} //  (default=true) show leading space in scrollable tabs inside the header\n        // disableSwipe={false} // (default=false) disable swipe to left/right gestures\n      >\n        <TabScreen label=\"Information\">\n          <ScrollView>\n            <Container>\n              <Row>\n                <Column>\n                  <Caption>Tillverkare</Caption>\n                  <Text>{deal.product.manufacturer || 'Ej känt'}</Text>\n                </Column>\n                <Column>\n                  <Caption>Varumärke</Caption>\n                  <Text>{deal.product.brand || 'Ej känt'}</Text>\n                </Column>\n              </Row>\n              <Row>\n                <Column>\n                  <Caption>Beskrivning</Caption>\n                  <Text>\n                    {getTitle(deal)} Säljs i paket om{' '}\n                    {deal.price.kilos?.toLocaleString('sv')}kg.\n                  </Text>\n                </Column>\n              </Row>\n              <Row>\n                <Column>\n                  <Caption>Pris</Caption>\n                  <Text>\n                    {deal.price.SEK_per_Kg?.toLocaleString('sv')} kr/kg\n                  </Text>\n                </Column>\n                <Column>\n                  <Caption>Paketstorlek</Caption>\n                  <Text>{deal.price.kilos.toLocaleString('sv')} kg</Text>\n                </Column>\n              </Row>\n            </Container>\n\n            <DataTable>\n              <DataTable.Header>\n                <DataTable.Title>Miljömärkning</DataTable.Title>\n                <DataTable.Title>Godkänd</DataTable.Title>\n              </DataTable.Header>\n              {Object.entries(deal.certifications)\n                .filter(([, checked]) => checked)\n                .map(([cert, checked], i) => (\n                  <DataTable.Row key={i}>\n                    <DataTable.Cell>\n                      {certifications[cert].title}\n                    </DataTable.Cell>\n                    <DataTable.Cell>\n                      <Checkbox status={checked ? 'checked' : 'unchecked'} />\n                    </DataTable.Cell>\n                  </DataTable.Row>\n                ))}\n            </DataTable>\n            <View style={styles.actionContainer}>\n              <Button\n                mode=\"contained\"\n                onPress={() =>\n                  navigation.navigate('TenderRequests', {\n                    screen: 'CreateTenderRequest',\n                    params: {\n                      title: deal.product.name,\n                    },\n                  })\n                }\n                uppercase={false}\n              >\n                Skapa anbudsförfrågan\n              </Button>\n            </View>\n          </ScrollView>\n        </TabScreen>\n        <TabScreen label=\"Meddelande\">\n          <Chat />\n        </TabScreen>\n        {/* <TabScreen\n          label=\"Anbud\"\n          // icon=\"bag-suitcase\"\n          // optional props\n          // onPressIn={() => {\n          //   console.log('onPressIn explore');\n          // }}\n          // onPress={() => {\n          //   console.log('onPress explore');\n          // }}\n        >\n          <Container>\n            <Paragraph>\n              För att lämna anbud måste du vara ansluten till detta DIS. För att\n              kontrollera att du är det kan du gå till xx..yy.z\n            </Paragraph>\n            <Button\n              mode=\"contained\"\n              onPress={() => navigation.navigate('CreateOffer', { dealId: id })}\n            >\n              Lämna anbud\n            </Button>\n          </Container>\n        </TabScreen> */}\n      </Tabs>\n    </>\n  )\n}\n\nconst Row = ({ children }) => (\n  <View style={{ flexDirection: 'row', marginBottom: 10 }}>{children}</View>\n)\n\nconst Column = ({ children }) => (\n  <View style={{ flexDirection: 'column', marginRight: 20, flex: 1 }}>\n    {children}\n  </View>\n)\n\nconst Container = ({ children }) => (\n  <View style={styles.container}>{children}</View>\n)\n\nexport default Deal\n\nconst styles = StyleSheet.create({\n  container: { padding: 16 },\n  header: {},\n  actionContainer: {\n    flexDirection: 'row',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 20,\n    paddingTop: 20,\n  },\n})\n","import { User } from './user'\nconst image8 = '/assets/avatars/Image008.png'\nconst image9 = '/assets/avatars/Image009.png'\nconst image10 = '/assets/avatars/Image010.png'\nconst image3 = '/assets/avatars/Image003.png'\n\nexport type Supplier = User & {\n  type: 'supplier'\n  produce: string[]\n}\n\nexport default [\n  {\n    id: '1',\n    type: 'supplier',\n    online: false,\n    name: 'Kalles AB',\n    image: image8,\n    address: 'Mejerigatan 2',\n    zip: '653 43',\n    postalAddress: 'Karlstad',\n    email: 'info@kalles.se',\n    produce: ['Morötter', 'Palsternackor', 'Rädisor'],\n    description:\n      'Vi är din lokala leverantör av närproducerad mat och dryck från Värmland. Beställ lokalt och närproducerat mathantverk som producerats där du själv lever och bor - för smakernas, djurens, människornas och miljöns skull.',\n  },\n  {\n    id: '2',\n    type: 'supplier',\n    online: false,\n    name: 'Liljenäs Gård',\n    image: image9,\n    address: 'Älvdalsvägen 35',\n    zip: '683 93',\n    postalAddress: 'Råda',\n    email: 'info@liljenasgard.se',\n    produce: ['Lammkött', 'Köttfärs', 'Nötfärs'],\n    description:\n      'Vi bevarar gamla traditioner i en modern tillverkning, det får ta lite extra tid och vi väljer våra köttleverantörer med omsorg. Vi vet genom våra kunder att det är smaken och vetskapen att det är producerat med kärlek som avgör i slutändan.',\n  },\n  {\n    id: '3',\n    type: 'supplier',\n    online: false,\n    name: 'Wermlands Mejeri',\n    image: image10,\n    address: 'Gillbergavägen 2',\n    zip: '661 95',\n    postalAddress: 'Värmlands Nysäter',\n    email: 'info@wermlandsmeeri.se',\n    produce: ['Komjölk', 'Yoghurt', 'Ost'],\n    description:\n      'Välkommen till Wermlands Mejeri. Ett mejeri med hjärtat i Värmlands Nysäter som säljer närproducerad mjölk och grädde från värmländska kor.',\n  },\n  {\n    id: '4',\n    type: 'supplier',\n    online: false,\n    name: 'Magdakullan',\n    image: image3,\n    address: 'Magdavägen 2',\n    zip: '661 95',\n    postalAddress: 'Margaetelundsvägen 1337',\n    email: 'info@margaretelund.se',\n    produce: ['Komjölk', 'Yoghurt', 'Ost'],\n    description:\n      'Välkommen till Magdakullan. Ett mejeri med hjärtat i Magdakullan som säljer närproducerad skålar och färdigmat från värmländska kor.',\n  },\n] as Array<Supplier>\n","import { User } from './user'\n\nconst image3 = '/assets/avatars/Image003.png'\nconst image4 = '/assets/avatars/Image004.png'\nconst image5 = '/assets/avatars/Image005.png'\nconst image6 = '/assets/avatars/Image006.png'\nconst image7 = '/assets/avatars/Image007.png'\n\nexport type Buyer = User & {\n  type: 'buyer'\n}\n\nexport default [\n  {\n    id: '1',\n    type: 'buyer',\n    online: false,\n    name: 'Fredricelundsskolan',\n    image: image3,\n    address: 'Tallåsvägen 2',\n    zip: '653 45',\n    postalAddress: 'Karlstad',\n    email: 'info@fredricelundsskolan.se',\n    description:\n      'När du kommer till oss möts du av glädje och god stämning! Fredricelundsskolan är en skola med elever från förskoleklass till årskurs 6 med cirka 280 elever. Vår skola ligger på Våxnäs cirka fyra kilometer nordväst om Karlstads centrum i ett naturfint område med park och skog i närheten.',\n  },\n  {\n    id: '2',\n    type: 'buyer',\n    name: 'Frödingskolan',\n    image: image4,\n    address: 'Posthornsgatan 6',\n    zip: '656 32',\n    postalAddress: 'Karlstad',\n    email: 'info@frodingskolan.se',\n    description:\n      'När du kommer till Frödingskolan möts du av glädje och nyfikenhet. Eleverna på skolan kommer från många olika kulturella bakgrunder. Detta ger en dynamik i lärandet och en härlig atmosfär! Frödingskolans främsta mål är att ge goda kunskaper och stärka språket i alla ämnen så att eleverna är väl förberedda för vidare studier och arbetsliv.',\n  },\n  {\n    id: '3',\n    type: 'buyer',\n    name: 'Kvarnbergsskolan',\n    image: image5,\n    address: 'Ölmegatan 10',\n    zip: '656 30',\n    postalAddress: 'Karlstad',\n    email: 'info@kvarnbergsskolan.se',\n    description:\n      'Kvarnbergssskolan är en F-6 skola som ingår i Skolområde Syd. En skola för ALLA är viktigt för oss på Kvarnbergsskolan. Med forskningen som utgångspunkt strävar vi efter att skapa en kreativ miljö för stor som liten.',\n  },\n  {\n    id: '4',\n    type: 'buyer',\n    name: 'Vålbergsskolan',\n    image: image6,\n    address: 'Åslidsgatan 4B',\n    zip: '660 50',\n    postalAddress: 'Vålberg',\n    email: 'info@valbergsskolan.se',\n    description:\n      'Välkommen till Vålbergsskolan! För oss är det viktigt att era barn får ett bra bemötande och att vi har goda relationer med varandra.',\n  },\n  {\n    id: '5',\n    type: 'buyer',\n    name: 'Nyeds skola',\n    image: image7,\n    address: '',\n    zip: '660 60',\n    postalAddress: 'Molkom',\n    email: 'info@nyedsskola.se',\n    description:\n      'Vår strävan är att våra elever ska nå höga resultat som ger goda förutsättningar för vidare studier, ett gott liv och hopp om en meningsfull framtid',\n  },\n] as Array<Buyer>\n","import * as React from 'react'\nimport {\n  Avatar,\n  Button,\n  Divider,\n  Searchbar,\n  Text,\n  Subheading,\n  useTheme,\n} from 'react-native-paper'\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\nimport { ScrollView, StyleSheet, SafeAreaView, View } from 'react-native'\nimport suppliers from '../data/suppliers'\nimport buyers from '../data/buyers'\n\nconst Explore = ({ navigation }: { navigation: any }) => {\n  const [searchQuery, setSearchQuery] = React.useState('')\n  const theme = useTheme()\n  const filteredSuppliers = suppliers.filter((supplier) =>\n    supplier.name.toLowerCase().includes(searchQuery.toLowerCase())\n  )\n  const filteredBuyers = buyers.filter((buyer) =>\n    buyer.name.toLowerCase().includes(searchQuery.toLowerCase())\n  )\n  return (\n    <SafeAreaView>\n      <ScrollView>\n        <Searchbar\n          placeholder=\"Sök producent/beställare\"\n          onChangeText={setSearchQuery}\n          value={searchQuery}\n          style={styles.searchbar}\n        />\n        <View style={styles.container}>\n          <Subheading style={styles.header}>Producenter</Subheading>\n          {filteredSuppliers.map((supplier, i) => {\n            return (\n              <View style={styles.searchResult} key={i}>\n                <Avatar.Image\n                  size={30}\n                  style={styles.avatar}\n                  source={{\n                    uri: `https://skaff-api.iteam.pub${supplier.image}`,\n                  }}\n                />\n                <Text\n                  style={styles.searchResultName}\n                  onPress={() => navigation.navigate('Supplier', { supplier })}\n                >\n                  {supplier.name}\n                </Text>\n              </View>\n            )\n          })}\n          {searchQuery.length === 0 && (\n            <View style={styles.linkContainer}>\n              <Button uppercase={false}>\n                Ansök om att bli ansluten{' '}\n                <MaterialCommunityIcons\n                  name=\"open-in-new\"\n                  color=\"black\"\n                  size={20}\n                />\n              </Button>\n            </View>\n          )}\n          <Divider />\n          <Subheading style={styles.header}>Beställare</Subheading>\n          {filteredBuyers.map((buyer) => {\n            return (\n              <View style={styles.searchResult} key={buyer.id}>\n                <Avatar.Image\n                  size={30}\n                  style={styles.avatar}\n                  source={{ uri: `https://skaff-api.iteam.pub${buyer.image}` }}\n                />\n                <Text\n                  style={styles.searchResultName}\n                  onPress={() => navigation.navigate('Buyer', { buyer })}\n                >\n                  {buyer.name}\n                </Text>\n              </View>\n            )\n          })}\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  )\n}\n\nexport default Explore\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n  },\n  title: {\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  searchbar: {\n    backgroundColor: 'white',\n    marginBottom: 16,\n  },\n  header: {\n    marginTop: 20,\n    marginBottom: 10,\n  },\n  avatar: { marginRight: 5 },\n  searchResultName: {\n    paddingTop: 10,\n  },\n  searchResult: {\n    flex: 1,\n    flexDirection: 'row',\n    marginBottom: 10,\n  },\n  linkContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    marginBottom: 10,\n  },\n})\n","import {\n  Avatar,\n  Text,\n  Subheading,\n  Divider,\n  Paragraph,\n  IconButton,\n} from 'react-native-paper'\nimport { ScrollView, StyleSheet, View } from 'react-native'\nimport { useEffect } from 'react'\n\nconst Supplier = ({\n  route,\n  navigation,\n  editable,\n}: {\n  route: any\n  navigation: any\n  editable: boolean\n}) => {\n  const supplier = route.params.supplier\n\n  console.log('supplier', supplier)\n\n  useEffect(() => {\n    if (supplier) {\n      navigation.header = 'Profil'\n      navigation.setOptions({ title: supplier.name })\n    }\n  }, [supplier])\n\n  return (\n    <ScrollView style={styles.scrollView}>\n      {supplier && (\n        <View style={styles.headerContainer}>\n          {editable && (\n            <IconButton icon=\"pencil\" size={20} style={styles.editButton} />\n          )}\n          <Avatar.Image\n            size={150}\n            style={styles.avatar}\n            source={{ uri: `https://skaff-api.iteam.pub${supplier.image}` }}\n          ></Avatar.Image>\n          <Text style={styles.address}>{supplier.address}</Text>\n          <Text style={styles.address}>\n            {supplier.zip} {supplier.postalAddress}\n          </Text>\n          <Text style={styles.email}>{supplier.email}</Text>\n          <Divider style={styles.divider} />\n          <Subheading style={styles.subHeading}>Varor</Subheading>\n          {supplier?.produce?.map((p) => {\n            return (\n              <Text key={p} style={styles.produce}>\n                {p}\n              </Text>\n            )\n          })}\n          <Subheading style={styles.subHeading}>Presentation</Subheading>\n          <Paragraph style={styles.description}>\n            {supplier.description}\n          </Paragraph>\n        </View>\n      )}\n    </ScrollView>\n  )\n}\n\nexport default Supplier\n\nconst styles = StyleSheet.create({\n  scrollView: {\n    padding: 10,\n  },\n  headerContainer: {\n    width: '100%',\n  },\n  heading: {\n    marginTop: 20,\n    alignSelf: 'center',\n    fontWeight: 'bold',\n  },\n  avatar: {\n    alignSelf: 'center',\n    marginBottom: 10,\n  },\n  address: {\n    alignSelf: 'center',\n    marginTop: 5,\n  },\n  email: {\n    alignSelf: 'center',\n    marginTop: 15,\n  },\n  produce: {\n    marginTop: 3,\n  },\n  description: {\n    marginTop: 3,\n    lineHeight: 20,\n  },\n  divider: {\n    marginTop: 20,\n  },\n  subHeading: {\n    marginTop: 20,\n  },\n  editButton: {\n    alignSelf: 'flex-end',\n  },\n})\n","import buyers from '../data/buyers'\nimport {\n  Avatar,\n  Button,\n  Searchbar,\n  Text,\n  Subheading,\n  Title,\n  Paragraph,\n  IconButton,\n} from 'react-native-paper'\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\nimport { ScrollView, StyleSheet, SafeAreaView, View } from 'react-native'\nimport { useEffect, useState } from 'react'\n\nconst Buyer = ({\n  route,\n  navigation,\n  editable,\n}: {\n  route: any\n  navigation: any\n  editable: boolean\n}) => {\n  const buyer = route.params.buyer\n\n  useEffect(() => {\n    if (buyer) {\n      navigation.header = 'Profil'\n      navigation.setOptions({ title: buyer.name })\n    }\n  }, [buyer])\n  return (\n    <ScrollView style={styles.scrollView}>\n      {buyer && (\n        <View style={styles.headerContainer}>\n          {editable ? (\n            <IconButton icon=\"pencil\" size={20} style={styles.editButton} />\n          ) : (\n            <Title style={styles.heading}>{buyer.name}</Title>\n          )}\n\n          <Avatar.Image\n            size={150}\n            style={styles.avatar}\n            source={{ uri: `https://skaff-api.iteam.pub${buyer.image}` }}\n          ></Avatar.Image>\n          <Text style={styles.address}>{buyer.address}</Text>\n          <Text style={styles.address}>\n            {buyer.zip} {buyer.postalAddress}\n          </Text>\n          <Text style={styles.email}>{buyer.email}</Text>\n          <View style={styles.menuContainer}>\n            <Button style={styles.menuLink} uppercase={false}>\n              Planerad matsedel{' '}\n              <MaterialCommunityIcons\n                name=\"open-in-new\"\n                color=\"black\"\n                size={20}\n              />\n            </Button>\n          </View>\n          <Subheading>Presentation</Subheading>\n          <Paragraph style={styles.description}>{buyer.description}</Paragraph>\n        </View>\n      )}\n    </ScrollView>\n  )\n}\n\nexport default Buyer\n\nconst styles = StyleSheet.create({\n  scrollView: {\n    padding: 10,\n  },\n  headerContainer: {\n    width: '100%',\n  },\n  heading: {\n    marginTop: 20,\n    alignSelf: 'center',\n    fontWeight: 'bold',\n  },\n  avatar: {\n    alignSelf: 'center',\n    marginBottom: 10,\n  },\n  address: {\n    alignSelf: 'center',\n    marginTop: 5,\n  },\n  email: {\n    alignSelf: 'center',\n    marginTop: 15,\n  },\n  description: {\n    lineHeight: 20,\n  },\n  menuContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    marginTop: 20,\n    marginBottom: 10,\n  },\n  menuLink: { marginLeft: -12 },\n  editButton: {\n    alignSelf: 'flex-end',\n  },\n})\n","import { createStackNavigator } from '@react-navigation/stack'\nimport Explore from './components/Explore'\nimport Supplier from './components/Supplier'\nimport Buyer from './components/Buyer'\n\nconst ExploreNavigation = () => {\n  const Stack = createStackNavigator()\n  return (\n    <>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"ExploreSuppliersAndBuyers\"\n          options={{\n            title: 'Utforska',\n          }}\n          component={Explore}\n        />\n        <Stack.Screen\n          name=\"Supplier\"\n          options={{\n            title: 'Utforska producent',\n          }}\n          component={Supplier}\n        />\n        <Stack.Screen\n          name=\"Buyer\"\n          options={{\n            title: 'Utforska beställare',\n          }}\n          component={Buyer}\n        />\n      </Stack.Navigator>\n    </>\n  )\n}\n\nexport default ExploreNavigation\n","import { useContext, useEffect, useState } from 'react'\nimport { SocketContext } from '../context/socketContext'\nimport { TenderRequest } from '../data/tenderRequests'\n\nconst useTenderRequests = (): [Array<TenderRequest>, any, any, any] => {\n  const socket = useContext(SocketContext)\n  const [tenderRequests, setTenderRequests] = useState(\n    new Array<TenderRequest>()\n  )\n\n  useEffect(() => {\n    const receive = (arr: Array<TenderRequest>) => setTenderRequests(arr)\n    socket.on('tenderRequests', receive)\n\n    return () => {\n      socket.off('tenderRequests', receive)\n    }\n  }, [socket])\n\n  const editTenderRequest = (tenderRequest: TenderRequest) => {\n    console.log('editTenderRequest', tenderRequest)\n    socket.emit('editTenderRequest', tenderRequest)\n  }\n\n  const addTenderRequest = (tenderRequest: TenderRequest) => {\n    console.log('addTenderRequest', tenderRequest)\n    socket.emit('addTenderRequest', tenderRequest)\n  }\n\n  const refresh = () =>\n    socket.emit('tenderRequests', (tenderRequests: TenderRequest[]) =>\n      setTenderRequests(tenderRequests)\n    )\n\n  return [tenderRequests, editTenderRequest, addTenderRequest, refresh]\n}\n\nexport default useTenderRequests\n","import * as React from 'react'\nimport { Card, FAB, List, Searchbar } from 'react-native-paper'\nimport { ScrollView, StyleSheet, View } from 'react-native'\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\nimport useTenderRequests from '../hooks/useTenderRequests'\nimport { useState } from 'react'\nimport useAuth from '../hooks/useAuth'\n\nconst ChevronRight = () => (\n  <MaterialCommunityIcons\n    size={25}\n    style={{ marginRight: 20 }}\n    name=\"chevron-right\"\n  />\n)\n\nconst TenderRequests = ({ navigation }: { navigation: any }) => {\n  const [searchQuery, setSearchQuery] = useState('')\n  const [open, setOpen] = useState(true)\n\n  const { user } = useAuth()\n\n  const [tenderRequests, update, add, refresh] = useTenderRequests()\n\n  React.useLayoutEffect(() => {\n    refresh()\n  }, [])\n\n  const filteredRequests =\n    (!searchQuery && tenderRequests) ||\n    tenderRequests.filter((request) =>\n      request.title.toLowerCase().includes(searchQuery.toLowerCase())\n    )\n\n  return (\n    <>\n      <ScrollView>\n        <Searchbar\n          placeholder=\"Sök upphandling\"\n          onChangeText={setSearchQuery}\n          value={searchQuery}\n          style={styles.searchbar}\n        />\n        <List.Section>\n          <List.Accordion\n            title=\"Aktiva upphandlingar\"\n            onPress={() => setOpen(!open)}\n            expanded={open}\n          >\n            {filteredRequests.map((tenderRequest, i) => (\n              <Card\n                key={i}\n                style={styles.card}\n                onPress={() =>\n                  navigation.navigate('TenderRequest', { tenderRequest })\n                }\n              >\n                <Card.Title\n                  titleVariant=\"titleSmall\"\n                  titleStyle={{\n                    fontSize: 14,\n                  }}\n                  title={tenderRequest.title}\n                  subtitle={tenderRequest.buyer.name}\n                  right={(props) => <ChevronRight />}\n                />\n              </Card>\n            ))}\n          </List.Accordion>\n\n          <List.Accordion title=\"Favoritmarkerade\">\n            <Card style={styles.card}>\n              <Card.Title\n                titleVariant=\"titleSmall\"\n                titleStyle={{\n                  fontSize: 14,\n                }}\n                title={'Favoritupphandling 1'}\n                subtitle={'Köpare 1'}\n                right={(props) => <ChevronRight />}\n              />\n            </Card>\n          </List.Accordion>\n        </List.Section>\n      </ScrollView>\n      {user?.type === 'buyer' && (\n        <FAB\n          style={styles.fab}\n          onPress={\n            () => navigation.navigate('CreateTenderRequest') //, { screen: 'CreateTenderRequest' }\n          }\n          icon=\"plus\"\n        />\n      )}\n    </>\n  )\n}\n\nexport default TenderRequests\n\nconst styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  card: {\n    margin: 10,\n    backgroundColor: 'white',\n  },\n  cover: {\n    height: 200,\n    borderRadius: 0,\n  },\n\n  container: {\n    paddingHorizontal: 16,\n    paddingTop: 16,\n  },\n  label: {\n    fontSize: 16,\n    marginBottom: 8,\n  },\n  title: {\n    marginHorizontal: 16,\n  },\n  checkboxContainer: {\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  checkbox: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 16,\n  },\n  searchbar: {\n    backgroundColor: 'white',\n    marginBottom: 16,\n  },\n})\n","import { useContext, useEffect, useState } from 'react'\nimport { SocketContext } from '../context/socketContext'\nimport { Offer } from '../data/offers'\n\nconst useOffers = (): [Array<Offer>, any, any, any] => {\n  const socket = useContext(SocketContext)\n  const [offers, setOffers] = useState([] as Array<Offer>)\n\n  useEffect(() => {\n    const receive = (offers: Array<Offer>) => {\n      setOffers(offers)\n    }\n    socket.on('offers', receive)\n\n    return () => {\n      socket.off('offers', receive)\n    }\n  }, [socket])\n\n  const editOffer = (offer: Offer) => {\n    socket.emit('editOffer', offer)\n  }\n\n  const addOffer = (offer: Offer) => {\n    socket.emit('addOffer', offer)\n  }\n\n  const refresh = ({ supplier, buyer } = {}) =>\n    socket.emit('offers', (offers: Array<Offer>) =>\n      setOffers(\n        offers.filter((o) => {\n          if (supplier) return o.supplier.id == supplier.id\n          if (buyer) return o.buyer.id == buyer.id\n          return true\n        })\n      )\n    )\n\n  return [offers, editOffer, addOffer, refresh]\n}\n\nexport default useOffers\n","import { useEffect, useLayoutEffect, useState } from 'react'\nimport {\n  Caption,\n  Headline,\n  Subheading,\n  useTheme,\n  Text,\n  Button,\n  Paragraph,\n  Divider,\n  Card,\n  List,\n  Avatar,\n} from 'react-native-paper'\nimport { ScrollView, StyleSheet, View } from 'react-native'\nimport { Tabs, TabScreen } from 'react-native-paper-tabs'\nimport Chat from './Chat'\nimport useTenderRequests from '../hooks/useTenderRequests'\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\nimport useAuth from '../hooks/useAuth'\nimport { TenderRequest as TenderRequestType } from '../data/tenderRequests'\nimport useOffers from '../hooks/useOffers'\nimport { Offer } from '../data/offers'\n\nconst ChevronRight = () => (\n  <MaterialCommunityIcons\n    size={25}\n    style={{ marginRight: 20 }}\n    name=\"chevron-right\"\n  />\n)\n\nconst TenderRequest = ({\n  route,\n  navigation,\n}: {\n  route: any\n  navigation: any\n}) => {\n  const [tenderRequests, , , refreshTenderRequests] = useTenderRequests()\n  const [tenderRequest, setTenderRequest] = useState<\n    TenderRequestType | undefined\n  >(route.params.tenderRequest as TenderRequestType)\n  const theme = useTheme()\n  const { user } = useAuth()\n  const [offers, updateOffer, , refreshOffers] = useOffers()\n\n  useEffect(() => {\n    if (tenderRequest?.id) {\n      const tenderRequestFromState = tenderRequests.find(\n        ({ id }) => id === tenderRequest.id\n      )\n      if (tenderRequestFromState) {\n        setTenderRequest(tenderRequestFromState)\n      }\n    }\n  }, [tenderRequest, offers])\n\n  useEffect(() => {\n    const buyer = user?.type === 'buyer' ? user : undefined\n    const supplier = user?.type === 'supplier' ? user : undefined\n    refreshOffers({ buyer, supplier })\n    refreshTenderRequests()\n  }, [user])\n\n  if (!tenderRequest)\n    return (\n      <Text>\n        Ladda via parametrar stöds ej än: {route.params.tenderRequestId}\n      </Text>\n    )\n  return (\n    <>\n      <View style={{ ...styles.header }}>\n        <Headline>{tenderRequest.title}</Headline>\n        <Subheading>{tenderRequest.buyer?.name}</Subheading>\n      </View>\n      <Tabs\n        // defaultIndex={0} // default = 0\n        uppercase={false} // true/false | default=true | labels are uppercase\n        // showTextLabel={false} // true/false | default=false (KEEP PROVIDING LABEL WE USE IT AS KEY INTERNALLY + SCREEN READERS)\n        // iconPosition // leading, top | default=leading\n        style={{ backgroundColor: '#D8F5E3' }}\n        // dark={false} // works the same as AppBar in react-native-paper\n        theme={theme} // works the same as AppBar in react-native-paper\n        // mode=\"scrollable\" // fixed, scrollable | default=fixed\n        // onChangeIndex={(newIndex) => {}} // react on index change\n        // showLeadingSpace={true} //  (default=true) show leading space in scrollable tabs inside the header\n        // disableSwipe={false} // (default=false) disable swipe to left/right gestures\n      >\n        <TabScreen label=\"Förfrågan\">\n          <ScrollView>\n            <Container>\n              <Row>\n                <Column>\n                  <Caption>Sista svar</Caption>\n                  <Text>\n                    {tenderRequest.lastOfferDate?.toString().split('T')[0] ||\n                      'Inget datum'}\n                  </Text>\n                </Column>\n                <Column>\n                  <Caption>Tilldelning senast</Caption>\n                  <Text>\n                    {tenderRequest.lastAwardDate?.toString().split('T')[0] ||\n                      'Inget datum'}\n                  </Text>\n                </Column>\n              </Row>\n            </Container>\n            <Container>\n              <Row>\n                <Column>\n                  <Caption>Leveransplan</Caption>\n                  <Text>{tenderRequest.deliveryPlan}</Text>\n                </Column>\n                <Column>\n                  <Caption>Första leverans</Caption>\n                  <Text>\n                    {tenderRequest.deliveryStartDate?.toString().split('T')[0]}\n                  </Text>\n                </Column>\n              </Row>\n            </Container>\n            <Container>\n              <Subheading>Villkor</Subheading>\n              <Paragraph>{tenderRequest.terms}</Paragraph>\n            </Container>\n            <Divider />\n            <Container>\n              <Subheading>Urval</Subheading>\n              <Paragraph>{tenderRequest.grading}</Paragraph>\n            </Container>\n            <Container>\n              <Subheading>Krav</Subheading>\n              {tenderRequest.qualificationCriteria?.map((criteria, i) => (\n                <Paragraph key={i}>{criteria}</Paragraph>\n              ))}\n            </Container>\n            <Container>\n              <Subheading>Önskemål</Subheading>\n              {tenderRequest.optionalCriteria?.map((optionalCriteria, i) => (\n                <Paragraph key={i}>{optionalCriteria}</Paragraph>\n              ))}\n            </Container>\n            <Container\n              style={{\n                flexDirection: 'row',\n                display: 'flex',\n                backgroundColor: '#DCF6FE',\n                margin: 20,\n                padding: 10,\n                paddingTop: 10,\n                paddingBottom: 10,\n              }}\n            >\n              <MaterialCommunityIcons\n                name=\"exclamation\"\n                color=\"black\"\n                size={20}\n              />\n              <Paragraph style={{ paddingLeft: 10, paddingRight: 20 }}>\n                Ett uppfyllt önskemål genererar, i jämförelsen mot andra anbud,\n                ett prisavdrag motsvarande det uppskattade värdet. Offererat\n                pris är fortfarande det som gäller vid fakturering.\n              </Paragraph>\n            </Container>\n          </ScrollView>\n        </TabScreen>\n        <TabScreen label=\"Meddelande\">\n          <Chat />\n        </TabScreen>\n        <TabScreen label=\"Anbud\">\n          <>\n            <>\n              {user?.type === 'supplier' && (\n                <Container>\n                  {!offers.length && (\n                    <>\n                      <Paragraph>\n                        För att lämna anbud måste du vara ansluten till detta\n                        DIS. För att kontrollera att du är det kan du gå till\n                        xx..yy.z\n                      </Paragraph>\n                      <Button\n                        mode=\"contained\"\n                        onPress={() => {\n                          navigation.navigate('TenderRequests', {\n                            screen: 'CreateOffer',\n                            params: {\n                              tenderRequest,\n                            },\n                          })\n                        }}\n                      >\n                        Lämna anbud\n                      </Button>\n                    </>\n                  )}\n                  <List.Section>\n                    <List.Subheader>Dina skickade anbud</List.Subheader>\n                    {offers\n                      .filter((o) => o.tenderRequestId === tenderRequest.id)\n                      .map((offer, i) => (\n                        <Card\n                          key={i}\n                          style={styles.card}\n                          onPress={() => {\n                            console.log('pressed', offer)\n                            navigation.navigate('Supplier', {\n                              supplier: offer.supplier,\n                            })\n                          }}\n                        >\n                          <Card.Title\n                            titleVariant=\"titleSmall\"\n                            titleStyle={{\n                              fontSize: 14,\n                            }}\n                            left={(props) => (\n                              <MaterialCommunityIcons\n                                name=\"file-document-outline\"\n                                color=\"black\"\n                                size={24}\n                              />\n                            )}\n                            title={offer.price.SEK + ' kr'}\n                            subtitle={\n                              'Inlämnad ' +\n                              offer.submissionDate?.toString().split('T')[0] +\n                              '. ' +\n                              (offer.approved ? 'Vunnen' : 'Ej godkänt')\n                            }\n                            right={(props) => <ChevronRight />}\n                          />\n                        </Card>\n                      ))}\n                  </List.Section>\n                </Container>\n              )}\n            </>\n            {user?.type === 'buyer' && tenderRequest.buyer?.id == user?.id && (\n              <>\n                <Container>\n                  <Paragraph>\n                    Inskickade anbud sorteras efter lägsta pris med eventuella\n                    avdrag för uppfyllda önskemål.\n                  </Paragraph>\n                </Container>\n                <Container>\n                  <Subheading>Matchande anbud</Subheading>\n                  {offers\n                    .filter((o) => o.tenderRequestId === tenderRequest.id)\n                    .sort((a, b) => a.price.SEK - b.price.SEK)\n                    .map((offer, i) => (\n                      <Card\n                        key={i}\n                        style={styles.card}\n                        //  onPress={() => navigation.navigate('TenderRequest', { id })}\n                      >\n                        <Card.Title\n                          titleVariant=\"titleSmall\"\n                          titleStyle={{\n                            fontSize: 14,\n                          }}\n                          title={\n                            offer.price.SEK +\n                            ' kr från: ' +\n                            offer.supplier?.name\n                          }\n                          subtitle={\n                            'Inkom ' +\n                            offer.submissionDate?.toString().split('T')[0]\n                          }\n                          right={(props) => {\n                            if (offer.approved)\n                              return (\n                                <Container\n                                  style={{\n                                    flexDirection: 'row',\n                                    display: 'flex',\n                                  }}\n                                >\n                                  <MaterialCommunityIcons\n                                    size={25}\n                                    name=\"clipboard-check\"\n                                  />\n                                  <Text\n                                    style={{\n                                      marginLeft: 5,\n                                      marginTop: 5,\n                                    }}\n                                  >\n                                    Tilldelad\n                                  </Text>\n                                </Container>\n                              )\n                            else if (\n                              offers.filter((offer) => offer.approved).length <\n                              1\n                            )\n                              return (\n                                <Button\n                                  icon=\"clipboard-check\"\n                                  mode=\"contained\"\n                                  uppercase={false}\n                                  style={{ marginRight: 10 }}\n                                  onPress={() => {\n                                    console.log('offer', offer)\n                                    updateOffer({ ...offer, approved: true })\n                                  }}\n                                >\n                                  Tilldela\n                                </Button>\n                              )\n                          }}\n                        />\n                      </Card>\n                    ))}\n                </Container>\n                <Container>\n                  <Divider />\n                  <Subheading>Ej uppfyllda anbud</Subheading>\n                </Container>\n              </>\n            )}\n            {user?.type === 'buyer' && tenderRequest.buyer?.id != user?.id && (\n              <Container>\n                <Paragraph>\n                  Som beställare kan du inte lämna anbud på andra beställares\n                  anbudsförfrågningar.\n                </Paragraph>\n              </Container>\n            )}\n          </>\n        </TabScreen>\n      </Tabs>\n    </>\n  )\n}\n\nconst Row = ({ children }) => (\n  <View style={{ flexDirection: 'row' }}>{children}</View>\n)\n\nconst Column = ({ children }) => (\n  <View style={{ flexDirection: 'column', marginRight: 20 }}>{children}</View>\n)\n\nconst Container = ({ children, style }: { children: any; style?: any }) => (\n  <View style={{ ...styles.container, ...style }}>{children}</View>\n)\n\nexport default TenderRequest\n\nconst styles = StyleSheet.create({\n  header: {\n    margin: 16,\n  },\n  container: {\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingTop: 20,\n    paddingBottom: 5,\n  },\n  card: {\n    marginTop: 5,\n    marginBottom: 5,\n    backgroundColor: 'white',\n  },\n})\n","import { useContext, useEffect, useState } from 'react'\nimport { SocketContext } from '../context/socketContext'\nimport useAuth from './useAuth'\nimport { useAuthContext } from '../context/authContext'\n\ntype Notification = {\n  to: Array<string>\n  title: string\n  body: string\n  data: {\n    date: Date\n    type: string\n    to: string\n    id: string\n  }\n}\n\ntype fn = () => {}\n\nconst useNotifications = (): [Array<Notification>, fn] => {\n  const socket = useContext(SocketContext)\n  const [notifications, setNotifications] = useState([] as Array<Notification>)\n  const { user } = useAuth()\n\n  useEffect(() => {\n    if (!socket) return\n    const receive = (notifications: Array<Notification>) => {\n      if (!user) return\n      setNotifications(\n        notifications\n          .filter((n) => n.data?.to?.includes(user?.id))\n          .sort(\n            (a, b) =>\n              new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf()\n          )\n      )\n    }\n    socket.on('notifications', receive)\n\n    return () => {\n      socket.off('notifications', receive)\n    }\n  }, [user, socket])\n\n  const refresh = () =>\n    socket.emit('notifications', (notifications: Array<Notification>) =>\n      setNotifications(notifications)\n    )\n\n  return [notifications, refresh]\n}\n\nexport default useNotifications\n","import { List } from 'react-native-paper'\nimport useNotifications from '../hooks/useNotifications'\nimport { useEffect } from 'react'\nimport useOffers from '../hooks/useOffers'\nimport useTenderRequests from '../hooks/useTenderRequests'\nimport useDeals from '../hooks/useDeals'\n\nexport default function Notifications({ navigation }) {\n  const [notifications, refresh] = useNotifications()\n  const [offers, , , refreshOffers] = useOffers()\n  const [tenderRequests, , , refreshTenderRequests] = useTenderRequests()\n  const [deals, , , refreshDeals] = useDeals()\n\n  useEffect(() => {\n    refresh()\n  }, [])\n\n  return (\n    <List.Section>\n      {notifications.length === 0 && (\n        <List.Item\n          left={(props) => <List.Icon {...props} icon=\"bell-off\" />}\n          title=\"Inga notifikationer\"\n          description=\"Du har inga notifikationer än. Pröva att skapa ett erbjudande eller en förfrågan.\"\n        />\n      )}\n      {notifications\n        .sort(\n          (a, b) =>\n            new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf()\n        )\n        .map((notification, i) => (\n          <List.Item\n            key={i}\n            onPress={() => {\n              console.log('navigate to', notification)\n              switch (notification.data.type) {\n                case 'offer':\n                  navigation.navigate('TenderRequests', {\n                    screen: 'TenderRequest',\n                    params: {\n                      tenderRequestId: notification.data.tenderRequestId,\n                    },\n                  })\n                  break\n                case 'tenderRequest':\n                  navigation.navigate('TenderRequests', {\n                    screen: 'TenderRequest',\n                    params: {\n                      tenderRequestId: notification.data.id,\n                    },\n                  })\n                  break\n\n                case 'deal':\n                  navigation.navigate('Deal', {\n                    deal: deals.find(\n                      (deal) => deal.id === notification.data.id\n                    ),\n                  })\n                  break\n              }\n            }}\n            title={notification.title}\n            right={(props) => <List.Icon {...props} icon=\"chevron-right\" />}\n            description={notification.body}\n            left={(props) => <List.Icon {...props} icon=\"bell\" />}\n          />\n        ))}\n    </List.Section>\n  )\n}\n","import { StyleSheet } from 'react-native'\nimport { Button, Card } from 'react-native-paper'\nimport { Offer } from '../data/offers'\nimport useAuth from '../hooks/useAuth'\nimport { User } from '../data/user'\n\nconst OfferCard = ({\n  offer,\n  navigation,\n  user,\n}: {\n  offer: Offer\n  navigation: any\n  user: User\n}) => {\n  const isBuyer = user?.type === 'buyer'\n  const isSupplier = user?.type === 'supplier'\n\n  return (\n    <Card\n      style={styles.card}\n      onPress={() =>\n        navigation.navigate('TenderRequest', {\n          tenderRequestId: offer.tenderRequestId,\n        })\n      }\n      /*  this causes endless loop\n        onPress={() =>\n        navigation.navigate('TenderRequests', {\n          screen: 'TenderRequest',\n          params: {\n            tenderRequestId: offer.tenderRequestId,\n          },\n        })\n      }*/\n    >\n      <Card.Title\n        title={offer.price.SEK + ' kr' + ' - ' + offer.buyer.name}\n        titleVariant=\"titleSmall\"\n        titleStyle={{\n          fontSize: 14,\n          color: offer.approved ? 'green' : 'black',\n        }}\n        subtitle={'Inlämnat: ' + offer.submissionDate?.toString().split('T')[0]}\n        right={(props) => <Button icon=\"chevron-right\" />}\n      ></Card.Title>\n    </Card>\n  )\n}\n\nexport default OfferCard\n\nconst styles = StyleSheet.create({\n  header: {\n    margin: 16,\n  },\n  card: {\n    margin: 10,\n    backgroundColor: 'white',\n  },\n  infoCard: {\n    marginTop: 5,\n    marginBottom: 5,\n  },\n})\n","import { StyleSheet } from 'react-native'\nimport { Button, Card } from 'react-native-paper'\nimport { Deal } from '../data/deals'\nimport useAuth from '../hooks/useAuth'\n\nconst DealCard = ({\n  deal,\n  navigation,\n}: {\n  deal: Deal\n  navigation: any\n  user: ReturnType<typeof useAuth>['user']\n}) => {\n  return (\n    <Card\n      style={styles.card}\n      onPress={() =>\n        navigation.navigate('Deals', {\n          screen: 'Deal',\n          params: {\n            deal,\n          },\n        })\n      }\n    >\n      <Card.Title\n        title={deal.product.name}\n        titleVariant=\"titleSmall\"\n        titleStyle={{\n          fontSize: 14,\n        }}\n        subtitle={'Pris: ' + deal.price.SEK}\n        right={(props) => <Button icon=\"chevron-right\" />}\n      ></Card.Title>\n    </Card>\n  )\n}\n\nexport default DealCard\n\nconst styles = StyleSheet.create({\n  header: {\n    margin: 16,\n  },\n  card: {\n    margin: 10,\n    backgroundColor: 'white',\n  },\n  infoCard: {\n    marginTop: 5,\n    marginBottom: 5,\n  },\n})\n","import { StyleSheet } from 'react-native'\nimport { Button, Card } from 'react-native-paper'\nimport { TenderRequest } from '../data/tenderRequests'\nimport useAuth from '../hooks/useAuth'\n\nconst TenderRequestCard = ({\n  tenderRequest,\n  navigation,\n}: {\n  tenderRequest: TenderRequest\n  navigation: any\n  user: ReturnType<typeof useAuth>['user']\n}) => {\n  return (\n    <Card\n      style={styles.card}\n      onPress={() =>\n        navigation.navigate('TenderRequests', {\n          screen: 'TenderRequest',\n          params: {\n            tenderRequestId: tenderRequest.id,\n          },\n        })\n      }\n    >\n      <Card.Title\n        title={tenderRequest.title}\n        titleVariant=\"titleSmall\"\n        titleStyle={{\n          fontSize: 14,\n        }}\n        subtitle={\n          'Tilldelningsdatum: ' +\n          tenderRequest.lastAwardDate?.toString().split('T')[0]\n        }\n        right={(props) => <Button icon=\"chevron-right\" />}\n      ></Card.Title>\n    </Card>\n  )\n}\n\nexport default TenderRequestCard\n\nconst styles = StyleSheet.create({\n  header: {\n    margin: 16,\n  },\n  card: {\n    margin: 10,\n    backgroundColor: 'white',\n  },\n  infoCard: {\n    marginTop: 5,\n    marginBottom: 5,\n  },\n})\n","import { Button, List, useTheme, Divider, Card } from 'react-native-paper'\nimport { Tabs, TabScreen } from 'react-native-paper-tabs'\nimport Supplier from './Supplier'\nimport { useEffect, useState } from 'react'\nimport useAuth from '../hooks/useAuth'\nimport useOffers from '../hooks/useOffers'\nimport OfferCard from './OfferCard'\nimport { ScrollView } from 'react-native'\nimport useTenderRequests from '../hooks/useTenderRequests'\nimport useDeals from '../hooks/useDeals'\nimport DealCard from './DealCard'\nimport TenderRequestCard from './TenderRequestCard'\n\nconst SupplierProfile = ({\n  route,\n  navigation,\n}: {\n  route: any\n  navigation: any\n}) => {\n  const theme = useTheme()\n  const [showOffers, setShowOffers] = useState(true)\n  const [tenderRequests, , , refreshTenderRequests] = useTenderRequests()\n  const [deals, , , refreshDeals] = useDeals()\n  const { user: supplier, logout } = useAuth()\n  const [offers, , , refreshOffers] = useOffers()\n\n  if (!supplier) return null\n  useEffect(() => {\n    refreshTenderRequests()\n    navigation.header = 'Profil'\n    navigation.setOptions({ title: supplier.name })\n  }, [supplier])\n\n  useEffect(() => {\n    refreshOffers({ supplier })\n    refreshTenderRequests()\n    refreshDeals()\n  }, [supplier])\n\n  const myOffers = offers.filter((o) => o.supplier.id === supplier.id)\n  const myDeals = deals.filter((o) => o.supplier.id === supplier.id)\n  const myTenderRequests = tenderRequests.filter((tr) =>\n    myOffers.some((offer) => offer.tenderRequestId === tr.id)\n  )\n\n  return (\n    <>\n      <Tabs\n        uppercase={false}\n        style={{ backgroundColor: '#D8F5E3' }}\n        theme={theme}\n      >\n        <TabScreen label=\"Aktuellt\">\n          <ScrollView>\n            <List.Accordion\n              title=\"Anbud\"\n              expanded={showOffers}\n              onPress={() => setShowOffers((show) => !show)}\n            >\n              <List.Subheader>Inskickade anbud</List.Subheader>\n              {myOffers.length === 0 && (\n                <Card.Title\n                  title=\"Inga anbud\"\n                  subtitle=\"Du har inte skickat in några anbud\"\n                ></Card.Title>\n              )}\n              {myOffers.map((offer, i) => (\n                <OfferCard\n                  user={supplier}\n                  key={offer.id}\n                  offer={offer}\n                  navigation={navigation}\n                />\n              ))}\n            </List.Accordion>\n            <Divider />\n            <List.Accordion title=\"Erbjudanden\" expanded={true}>\n              <List.Subheader>Publicerade</List.Subheader>\n              {myDeals.map((deal, i) => (\n                <DealCard\n                  key={i}\n                  user={supplier}\n                  deal={deal}\n                  navigation={navigation}\n                />\n              ))}\n            </List.Accordion>\n          </ScrollView>\n        </TabScreen>\n        <TabScreen label=\"Mina avtal\">\n          <ScrollView>\n            <List.Accordion title=\"Pågående\" expanded={true}>\n              {myTenderRequests\n                .filter((t) =>\n                  offers\n                    .filter((o) => !o.approved)\n                    .some((o) => o.tenderRequestId === t.id)\n                )\n                .map((tenderRequest) => (\n                  <TenderRequestCard\n                    user={supplier}\n                    key={tenderRequest.id}\n                    tenderRequest={tenderRequest}\n                    navigation={navigation}\n                  />\n                ))}\n            </List.Accordion>\n            <Divider />\n            <List.Accordion title=\"Avslutade\">\n              {myTenderRequests\n                .filter((t) =>\n                  offers\n                    .filter((o) => o.approved)\n                    .some((o) => o.tenderRequestId === t.id)\n                )\n                .map((tenderRequest, i) => (\n                  <TenderRequestCard\n                    key={tenderRequest.id}\n                    user={supplier}\n                    key={tenderRequest.id}\n                    tenderRequest={tenderRequest}\n                    navigation={navigation}\n                  />\n                ))}\n            </List.Accordion>\n          </ScrollView>\n        </TabScreen>\n        <TabScreen label=\"Profil\">\n          <Supplier\n            route={{ ...route, params: { supplier } }}\n            navigation={navigation}\n            editable={true}\n          ></Supplier>\n        </TabScreen>\n      </Tabs>\n      <Button\n        mode=\"outlined\"\n        onPress={() => navigation.popToTop() || logout(supplier)}\n      >\n        Logga ut\n      </Button>\n    </>\n  )\n}\n\nexport default SupplierProfile\n","import { Text, Button, List, useTheme, Divider, Card } from 'react-native-paper'\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\n\nconst BottomNavigationIcon = ({\n  name,\n  focused,\n}: {\n  name: string\n  focused: boolean\n}) => {\n  const theme = useTheme()\n\n  return (\n    <MaterialCommunityIcons\n      name={name}\n      color={focused ? theme.colors.primary : theme.colors.iconInactive}\n      size={20}\n    />\n  )\n}\n\nexport default BottomNavigationIcon\n","import * as React from 'react'\nimport { KeyboardTypeOptions } from 'react-native'\nimport { TextInput as PaperTextInput, useTheme } from 'react-native-paper'\n\nconst TextInput = ({\n  label,\n  value,\n  keyboardType,\n  disabled,\n  multiline,\n  numberOfLines,\n  styles,\n  placeholder,\n  outlined,\n  onChange,\n}: {\n  label: string\n  value: string\n  keyboardType?: KeyboardTypeOptions\n  disabled?: boolean\n  multiline?: boolean\n  numberOfLines?: number\n  styles?: any\n  placeholder?: string\n  outlined?: boolean\n  onChange?: (text: string) => void\n}) => {\n  const theme = useTheme()\n  return (\n    <PaperTextInput\n      theme={{\n        ...theme,\n        colors: {\n          ...theme.colors,\n          background: '#FFFFFF',\n        },\n        roundness: 0,\n      }}\n      style={{\n        backgroundColor: 'white',\n        ...styles,\n      }}\n      keyboardType={keyboardType}\n      label={label}\n      value={value}\n      onChangeText={onChange}\n      disabled={disabled}\n      placeholder={placeholder}\n      multiline={multiline}\n      numberOfLines={numberOfLines}\n      mode={outlined == undefined && !outlined ? 'flat' : 'outlined'}\n    ></PaperTextInput>\n  )\n}\n\nexport default TextInput\n","import { useState } from 'react'\nimport { KeyboardTypeOptions } from 'react-native'\nimport { useTheme } from 'react-native-paper'\nimport DropDown from 'react-native-paper-dropdown'\n\nconst DropDownList = ({\n  label,\n  value,\n  values,\n  multiSelect,\n  setValue,\n}: {\n  label: string\n  value: string\n  values: Array<{ label: string; value: string }>\n  multiSelect?: boolean\n  setValue: any\n}) => {\n  const [showDropdown, setShowDropdown] = useState(false)\n  const theme = useTheme()\n\n  return (\n    <DropDown\n      theme={{\n        ...theme,\n        colors: {\n          ...theme.colors,\n          background: '#FFFFFF',\n        },\n      }}\n      dropDownStyle={{\n        width: '100%',\n      }}\n      inputProps={{\n        style: {\n          backgroundColor: '#FFFFFF',\n        },\n      }}\n      label={label}\n      value={value}\n      setValue={setValue}\n      list={values}\n      visible={showDropdown}\n      showDropDown={() => setShowDropdown(true)}\n      onDismiss={() => setShowDropdown(false)}\n      multiSelect={multiSelect}\n    ></DropDown>\n  )\n}\n\nexport default DropDownList\n","import { useTheme } from 'react-native-paper'\nimport { DatePickerInput } from 'react-native-paper-dates'\n\nconst DateTimeInput = ({\n  label,\n  value,\n\n  onChange,\n}: {\n  label: string\n  value: Date\n\n  onChange: (date: Date | undefined) => void\n}) => {\n  const theme = useTheme()\n  return (\n    <DatePickerInput\n      theme={{\n        ...theme,\n        colors: {\n          ...theme.colors,\n          background: '#FFFFFF',\n        },\n      }}\n      style={{ backgroundColor: '#FFFFFF' }}\n      locale=\"sv\"\n      label={label}\n      value={value}\n      onChange={onChange}\n      inputMode=\"start\"\n    ></DatePickerInput>\n  )\n}\n\nexport default DateTimeInput\n","import { useEffect, useState } from 'react'\nimport { Button } from 'react-native-paper'\n\nimport {\n  KeyboardAvoidingView,\n  SafeAreaView,\n  ScrollView,\n  StyleSheet,\n  View,\n} from 'react-native'\nimport TextInput from './form/TextInput'\nimport DropDownList from './form/DropDownList'\nimport DateTimeInput from './form/DateTimeInput'\nimport useDeals from '../hooks/useDeals'\nimport useAuth from '../hooks/useAuth'\nimport { useAuthContext } from '../context/authContext'\nimport { Deal } from '../data/deals'\n\nconst styles = StyleSheet.create({\n  actionContainer: {\n    flexDirection: 'row',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: 20,\n    paddingBottom: 20,\n    paddingTop: 20,\n  },\n})\nconst CreateDeal = ({ route, navigation }: { route: any; navigation: any }) => {\n  const id = route?.params?.id\n  const [title, setTitle] = useState('')\n  const [price, setPrice] = useState('')\n  const [volume, setVolume] = useState('1')\n  const [constraint, setConstraint] = useState('')\n  const [date, setDate] = useState(new Date())\n  const [endDate, setEndDate] = useState(new Date())\n  const [description, setDescription] = useState('')\n  const [other, setOther] = useState('')\n  const constraints = [\n    { label: 'Bäst före', value: '0' },\n    { label: 'Sista förbrukningsdag', value: '1' },\n  ]\n\n  const [, , add] = useDeals()\n  const { user } = useAuthContext()\n\n  const getSelectedOptions = (\n    selectedOptions: string,\n    options: Array<{ label: string; value: string }>\n  ) => {\n    return selectedOptions\n      .split(',')\n      .map((critera: string) => {\n        return options.find((option: any) => option.value == critera)?.label\n      })\n      .filter((criteria: string | undefined) => criteria)\n  }\n\n  // useEffect(() => {\n  //   const deal = deals.find((offer) => offer.id === id)\n  //   if (deal) {\n  //     setTitle(deal?.product?.name)\n  //     setPrice(deal?.price.SEK.toString())\n  //     setVolume(deal?.price.kilos.toString())\n  //   }\n  // }, [id])\n\n  useEffect(() => {\n    // publish button in header:\n    navigation.setOptions({\n      headerRight: () => (\n        <Button onPress={() => publish({ title, price, volume, user })}>\n          Publicera\n        </Button>\n      ),\n    })\n  }, [title, price, volume, user])\n\n  const publish = ({\n    title,\n    price,\n    volume,\n    user,\n  }: {\n    title: string\n    price: string\n    volume: string\n    user: any\n  }) => {\n    console.log('title', title)\n    console.log('price', price)\n    console.log('volume', volume)\n\n    const deal = {\n      id: 0, // created on server\n      product: {\n        name: title,\n      },\n      price: {\n        SEK: +price,\n        SEK_per_Kg: +price / +volume,\n        kilos: +volume,\n      },\n      volume: +volume,\n      supplier: { ...user, artNo: '' },\n      // constraint: getSelectedOptions(constraint, constraints).pop(),\n      // date,\n      // endDate,\n      // other,\n      // description,\n      commodity: {\n        area: 'Other',\n        mainGroup: 'Other',\n        group: 'Other',\n      },\n      certifications: {\n        organic: false, // TODO: add certifications\n        MSC: false,\n        kravMarked: false,\n        ethical: false,\n        fairtrade: false,\n        locallyProduced: false,\n      },\n      origin: {\n        productManufacturingCountry: 'Sverige', // TODO: add origin\n        rawMaterialOriginCountry: 'Sverige',\n      },\n    } as Deal\n\n    console.log('deal', deal)\n    add(deal)\n\n    navigation.navigate('ListDeals')\n  }\n\n  return (\n    <SafeAreaView>\n      <KeyboardAvoidingView>\n        <ScrollView>\n          <TextInput\n            label=\"Namn på vara\"\n            value={title}\n            placeholder='t ex \"Äpplen\"'\n            onChange={(text) => setTitle(text)}\n          />\n          <TextInput\n            keyboardType=\"numeric\"\n            label=\"Volym eller vikt (i kg/liter)\"\n            value={volume}\n            placeholder=\"t ex 10 eller 5\"\n            onChange={(text) => setVolume(text)}\n          />\n          <TextInput\n            keyboardType=\"numeric\"\n            label=\"Pris i SEK\"\n            placeholder=\"tex 20 eller 10\"\n            value={price}\n            onChange={(text) => setPrice(text)}\n          />\n          <DateTimeInput\n            label=\"Sista datum för erbjudande\"\n            value={endDate}\n            onChange={(newDate) => {\n              if (newDate) setEndDate(newDate)\n            }}\n          ></DateTimeInput>\n          <DropDownList\n            label=\"Ev datumbegränsning\"\n            value={constraint}\n            setValue={setConstraint}\n            values={constraints}\n          ></DropDownList>\n          {constraint && (\n            <DateTimeInput\n              label={constraint == '0' ? 'Bäst före' : 'Sista förbrukningsdag'}\n              value={date}\n              onChange={(newDate) => {\n                if (newDate) setDate(newDate)\n              }}\n            ></DateTimeInput>\n          )}\n\n          <View\n            style={{\n              ...styles.actionContainer,\n              justifyContent: 'flex-start',\n              backgroundColor: '#FFFFFF',\n            }}\n          >\n            <Button\n              icon=\"camera\"\n              mode=\"contained\"\n              uppercase={false}\n              // onPress={() => console.log('Pressed')}\n            >\n              Lägg till bild\n            </Button>\n          </View>\n          <TextInput\n            label=\"Kort beskrivning\"\n            value={description}\n            placeholder='t ex \"Ekologiskt, ursprung Sverige\"'\n            onChange={(text) => setDescription(text)}\n          />\n          <TextInput\n            label=\"Övrigt\"\n            value={other}\n            onChange={(text) => setOther(text)}\n          />\n          <View style={styles.actionContainer}>\n            <Button\n              onPress={() => {\n                navigation.navigate('ListDeals')\n              }}\n              uppercase={false}\n            >\n              Rensa utkast\n            </Button>\n          </View>\n        </ScrollView>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  )\n}\n\nexport default CreateDeal\n","import { useState } from 'react'\nimport { Pressable, StyleSheet, View } from 'react-native'\nimport { Checkbox, Text, useTheme } from 'react-native-paper'\n\nconst styles = StyleSheet.create({\n  checkbox: {},\n  checkboxContainer: {\n    flexDirection: 'row',\n  },\n})\n\nconst CheckboxWithText = ({\n  checkedByDefault,\n  text,\n\n  onChange,\n}: {\n  checkedByDefault: boolean\n  text: string\n\n  onChange: (checked: boolean) => void\n}) => {\n  const [checked, setChecked] = useState(checkedByDefault)\n  const theme = useTheme()\n  return (\n    <View style={styles.checkboxContainer}>\n      <Checkbox\n        status={checked ? 'checked' : 'unchecked'}\n        onPress={() => {\n          onChange(!checked)\n          setChecked(!checked)\n        }}\n        color={theme.colors.primary}\n      ></Checkbox>\n      <Pressable\n        onPress={() => {\n          onChange(!checked)\n          setChecked(!checked)\n        }}\n      >\n        <Text style={{ paddingTop: 10 }}>{text}</Text>\n      </Pressable>\n    </View>\n  )\n}\n\nexport default CheckboxWithText\n","import { useState, useEffect, useLayoutEffect } from 'react'\nimport {\n  Button,\n  Divider,\n  Headline,\n  Subheading,\n  Surface,\n  Text,\n  useTheme,\n} from 'react-native-paper'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport { KeyboardAvoidingView, SafeAreaView, StyleSheet } from 'react-native'\nimport { View } from 'react-native'\nimport CheckboxWithText from './form/CheckboxWithText'\nimport TextInput from './form/TextInput'\nimport useTenderRequests from '../hooks/useTenderRequests'\nimport useAuth from '../hooks/useAuth'\nimport uuid from 'react-native-uuid'\nimport useOffers from '../hooks/useOffers'\nimport { TenderRequest } from '../data/tenderRequests'\nimport { Offer } from '../data/offers'\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingBottom: 10,\n    paddingTop: 10,\n  },\n  text: {\n    paddingTop: 5,\n  },\n  divider: {\n    borderColor: '#D8D6CE',\n    borderWidth: 0.5,\n    marginTop: 20,\n    marginBottom: 10,\n  },\n  surface: {\n    backgroundColor: '#FFFFFF',\n  },\n})\n\nconst CreateOffer = ({\n  navigation,\n  route,\n}: {\n  navigation: any\n  route: any\n}) => {\n  const [selectedQualificationCriterias, setSelectedQualificationCriterias] =\n    useState(Array<string>)\n  const [selectedOptionalCriterias, setSelectedOptionalCriterias] = useState(\n    Array<string>\n  )\n  const { user: supplier } = useAuth()\n  const [, , add, refreshOffers] = useOffers()\n  const [price, setPrice] = useState('')\n  const [other, setOther] = useState('')\n  const [offer, setOffer] = useState({} as Offer)\n  const tenderRequest = route.params?.tenderRequest\n  useEffect(() => {\n    setOffer({\n      qualificationCriteriasMet: selectedOptionalCriterias,\n      optionalCriteriasMet: selectedOptionalCriterias,\n      price: {\n        SEK: +price,\n      },\n      other: other,\n      tenderRequestId: tenderRequest.id,\n      approved: false,\n      submissionDate: new Date(),\n      supplier: supplier,\n      buyer: tenderRequest.buyer,\n      id: uuid.v4(),\n    } as Offer)\n  }, [\n    selectedQualificationCriterias,\n    selectedOptionalCriterias,\n    price,\n    other,\n    tenderRequest,\n    supplier,\n  ])\n\n  useEffect(() => {\n    refreshOffers()\n  }, [tenderRequest])\n\n  useLayoutEffect(() => {\n    // publish button in header:\n    navigation.setOptions({\n      headerRight: () => <Button onPress={() => publish(offer)}>Skicka</Button>,\n    })\n  }, [offer])\n\n  const publish = (offer: Offer) => {\n    if (!tenderRequest.id) return console.error('no tenderRequest.id')\n\n    console.log('publish offer', offer)\n\n    add(offer)\n\n    navigation.navigate('TenderRequest', { tenderRequest })\n  }\n\n  return (\n    <SafeAreaView>\n      <KeyboardAvoidingView>\n        <ScrollView>\n          <View style={styles.container}>\n            <Headline>{tenderRequest.title}</Headline>\n            <Text style={styles.text}>{tenderRequest.volume} kg</Text>\n\n            <Divider style={styles.divider} />\n            <Text style={styles.text}>\n              Sista svar:{' '}\n              {tenderRequest.lastOfferDate?.toString().split('T')[0]}\n            </Text>\n            <Text style={styles.text}>\n              Tilldelning senast:{' '}\n              {tenderRequest.lastAwardDate?.toString().split('T')[0]}\n            </Text>\n            <Text style={styles.text}>\n              Leveransplan: {tenderRequest.deliveryPlan}\n            </Text>\n            <Text style={styles.text}>\n              Leverans startdatum:{' '}\n              {tenderRequest.deliveryStartDate?.toString().split('T')[0]}\n            </Text>\n            <Subheading style={styles.text}>Villkor</Subheading>\n            <Text style={styles.text}>\n              Producent ansvarar för leverans enligt överenskommelse.\n            </Text>\n            <Divider style={styles.divider} />\n            <Subheading style={styles.text}>Urval</Subheading>\n            <Text style={styles.text}>\n              Inlämnade anbud som uppfyller krav rangordnas efter offererat\n              pris. Uppfyllda önskemål ger prisavdrag vid rangordning av anbud.\n            </Text>\n          </View>\n          <Surface style={styles.surface}>\n            <View style={styles.container}>\n              <Subheading>Krav</Subheading>\n              {tenderRequest.qualificationCriteria?.map((criteria, i) => (\n                <CheckboxWithText\n                  key={i}\n                  text={criteria}\n                  checkedByDefault={false}\n                  onChange={(checked) => {\n                    let newChoices = selectedQualificationCriterias.filter(\n                      (choice) => choice != criteria\n                    )\n                    if (checked) {\n                      //add to list\n                      newChoices.push(criteria)\n                    }\n                    setSelectedQualificationCriterias(newChoices)\n                  }}\n                ></CheckboxWithText>\n              ))}\n              <Subheading>Önskemål</Subheading>\n              {tenderRequest.optionalCriteria?.map((optionalCriteria, i) => (\n                <CheckboxWithText\n                  key={i}\n                  text={optionalCriteria}\n                  checkedByDefault={false}\n                  onChange={(checked) => {\n                    let newChoices = selectedOptionalCriterias.filter(\n                      (choice) => choice != optionalCriteria\n                    )\n                    if (checked) {\n                      //add to list\n                      newChoices.push(optionalCriteria)\n                    }\n                    setSelectedOptionalCriterias(newChoices)\n                  }}\n                ></CheckboxWithText>\n              ))}\n              <Subheading>Offererat pris</Subheading>\n              <TextInput\n                label=\"Pris i kr\"\n                value={price}\n                keyboardType=\"numeric\"\n                outlined={true}\n                styles={{ width: 300, marginBottom: 10 }}\n                onChange={(text) => setPrice(text)}\n              />\n              <Subheading>Övrigt</Subheading>\n              <TextInput\n                label=\"Eventuell ytterligare information\"\n                value={other}\n                outlined={true}\n                styles={{ width: 300 }}\n                onChange={(text) => setOther(text)}\n              />\n            </View>\n          </Surface>\n          <View\n            style={{\n              ...styles.container,\n              flexDirection: 'row',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              paddingTop: 20,\n              paddingBottom: 20,\n            }}\n          >\n            <Button onPress={() => {}} uppercase={false}>\n              Spara utkast\n            </Button>\n            <Button\n              onPress={() => publish(offer)}\n              mode=\"contained\"\n              uppercase={false}\n            >\n              Publicera\n            </Button>\n          </View>\n          {/* \n      <TextInput\n        label=\"Beställare\"\n        value={\n          buyer?.name +\n          ', ' +\n          buyer?.address +\n          ', ' +\n          buyer?.zip +\n          ' ' +\n          buyer?.postalAddress\n        }\n        disabled={true}\n      />\n      <DateTimeInput\n        label=\"Sista anbud\"\n        value={lastOfferDate}\n        onChange={(newDate) => {\n          if (newDate) setLastOfferDate(newDate)\n        }}\n      ></DateTimeInput>\n      <DateTimeInput\n        label=\"Tilldelning senast\"\n        value={lastAwardDate}\n        onChange={(newDate) => {\n          if (newDate) setLastAwardDate(newDate)\n        }}\n      ></DateTimeInput>\n      <DateTimeInput\n        label=\"Leverans startdatum\"\n        value={deliveryStartDate}\n        onChange={(newDate) => {\n          if (newDate) setDeliveryStartDate(newDate)\n        }}\n      ></DateTimeInput>\n      <DropDownList\n        label=\"Leveransplan\"\n        value={deliveryPlan}\n        setValue={setDeliveryPlan}\n        values={deliveryPlans}\n      ></DropDownList>\n      <TextInput\n        label=\"Volym per leverans\"\n        value={volumePerDelivery}\n        onChange={(text) => setVolumePerDelivery(text)}\n        disabled={true}\n      />\n      <TextInput\n        label=\"Villkor\"\n        value=\"Producent ansvarar för leverans enligt överenskommelse.\"\n        disabled={true}\n        multiline={true}\n        numberOfLines={2}\n      />\n      <TextInput\n        label=\"Urval\"\n        value=\"Inlämnade anbud som uppfyller krav rangordnas efter offererat pris. Uppfyllda önskemål ger prisavdrag vid rangordning av anbud.\"\n        disabled={true}\n        multiline={true}\n        numberOfLines={3}\n      />\n      <DropDownList\n        label=\"Krav\"\n        value={qualificationCriteria}\n        setValue={setQualificationCriteria}\n        values={criterias}\n        multiSelect={true}\n      ></DropDownList>\n      <DropDownList\n        label=\"Önskemål\"\n        value={optionalCriteria}\n        setValue={setOptionalCriteria}\n        values={criterias}\n        multiSelect={true}\n      ></DropDownList> */}\n        </ScrollView>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  )\n}\n\nexport default CreateOffer\n","import React from 'react'\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs'\nimport Deals from './components/Deals'\nimport Deal from './components/Deal'\nimport ExploreNavigation from './ExploreNavigation'\nimport TenderRequests from './components/TenderRequests'\nimport TenderRequest from './components/TenderRequest'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { IconButton, useTheme } from 'react-native-paper'\nimport Notifications from './components/Notifications'\nimport SupplierProfile from './components/SupplierProfile'\nimport BottomNavigationIcon from './components/BottomNavigationIcon'\nimport CreateDeal from './components/CreateDeal'\nimport CreateOffer from './components/CreateOffer'\n\nconst DealsNavigation = () => {\n  const Stack = createStackNavigator()\n  return (\n    <>\n      <Stack.Navigator>\n        <Stack.Group>\n          <Stack.Screen\n            name=\"ListDeals\"\n            options={({ navigation }) => ({\n              headerRight: () => (\n                <IconButton\n                  icon=\"bell\"\n                  size={18}\n                  onPress={() => navigation.navigate('Notifications')}\n                />\n              ),\n              title: 'Erbjudanden',\n            })}\n            component={Deals}\n          />\n          <Stack.Screen\n            name=\"Deal\"\n            options={{\n              title: 'Erbjudande',\n            }}\n            component={Deal}\n          />\n          <Stack.Screen\n            name=\"CreateDeal\"\n            options={{\n              title: 'Erbjud vara',\n            }}\n            component={CreateDeal}\n          />\n        </Stack.Group>\n        <Stack.Group screenOptions={{ presentation: 'modal' }}>\n          <Stack.Screen name=\"Notifications\" component={Notifications} />\n        </Stack.Group>\n      </Stack.Navigator>\n    </>\n  )\n}\n\nconst TenderRequestsNavigation = () => {\n  const Stack = createStackNavigator()\n  return (\n    <>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"ListTenderRequests\"\n          options={{\n            title: 'Förfrågningar',\n          }}\n          component={TenderRequests}\n        />\n        <Stack.Screen\n          name=\"TenderRequest\"\n          options={{\n            title: 'Förfrågan',\n          }}\n          component={TenderRequest}\n        />\n        <Stack.Screen\n          name=\"CreateOffer\"\n          options={{\n            title: 'Lämna anbud',\n          }}\n          component={CreateOffer}\n        />\n      </Stack.Navigator>\n    </>\n  )\n}\n\nconst SupplierProfileNavigation = () => {\n  const Stack = createStackNavigator()\n  return (\n    <>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"SupplierProfile\"\n          options={({ navigation }) => ({\n            title: 'Producent',\n            headerRight: () => (\n              <IconButton\n                icon=\"bell\"\n                size={18}\n                onPress={() => navigation.navigate('Notifications')}\n              />\n            ),\n          })}\n          component={SupplierProfile}\n        />\n        <Stack.Screen name=\"Notifications\" component={Notifications} />\n      </Stack.Navigator>\n    </>\n  )\n}\n\nconst SupplierNavigation = () => {\n  const theme = useTheme()\n  const Tab = createMaterialBottomTabNavigator()\n  return (\n    <Tab.Navigator\n      activeColor={theme.colors.primary}\n      inactiveColor={theme.colors.iconInactive}\n      barStyle={{ backgroundColor: theme.colors.background }}\n      theme={theme}\n      initialRouteName=\"TenderRequests\"\n    >\n      <Tab.Screen\n        name=\"TenderRequests\"\n        component={TenderRequestsNavigation}\n        options={{\n          tabBarLabel: 'Förfrågningar',\n          tabBarAccessibilityLabel: 'Förfrågningar',\n          tabBarIcon: ({ focused }) => (\n            <BottomNavigationIcon\n              name=\"cart\"\n              focused={focused}\n            ></BottomNavigationIcon>\n          ),\n        }}\n        // add back button in header:\n      />\n      <Tab.Screen\n        name=\"Deals\"\n        component={DealsNavigation}\n        options={{\n          tabBarLabel: 'Erbjudanden',\n          tabBarAccessibilityLabel: 'Erbjudanden',\n          tabBarIcon: ({ focused }) => (\n            <BottomNavigationIcon\n              name=\"corn\"\n              focused={focused}\n            ></BottomNavigationIcon>\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Explore\"\n        component={ExploreNavigation}\n        options={{\n          tabBarLabel: 'Upptäck',\n          tabBarAccessibilityLabel: 'Upptäck',\n          tabBarIcon: ({ focused }) => (\n            <BottomNavigationIcon\n              name=\"compass\"\n              focused={focused}\n            ></BottomNavigationIcon>\n          ),\n        }}\n      />\n\n      <Tab.Screen\n        name=\"Profile\"\n        component={SupplierProfileNavigation}\n        options={{\n          tabBarLabel: 'Mina sidor',\n          tabBarAccessibilityLabel: 'Mina sidor',\n          tabBarIcon: ({ focused }) => (\n            <BottomNavigationIcon\n              name=\"account\"\n              focused={focused}\n            ></BottomNavigationIcon>\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  )\n}\n\nexport default SupplierNavigation\n","import {\n  Text,\n  Button,\n  List,\n  useTheme,\n  Divider,\n  Card,\n  Headline,\n  Subheading,\n} from 'react-native-paper'\nimport { StyleSheet, SafeAreaView, View } from 'react-native'\nimport { Tabs, TabScreen } from 'react-native-paper-tabs'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport Buyer from './Buyer'\n\nimport useAuth from '../hooks/useAuth'\nimport { useEffect, useState } from 'react'\nimport useTenderRequests from '../hooks/useTenderRequests'\nimport TenderRequestCard from './TenderRequestCard'\nimport useOffers from '../hooks/useOffers'\n\nconst BuyerProfile = ({\n  route,\n  navigation,\n}: {\n  route: any\n  navigation: any\n}) => {\n  const theme = useTheme()\n  const { user: buyer, logout } = useAuth()\n  const [tenderRequests, , , refreshTenderRequests] = useTenderRequests()\n  const [offers, , , refreshOffers] = useOffers()\n  const [showTenderRequests, setShowTenderRequests] = useState(true)\n  const [showDeals, setShowDeals] = useState(true)\n\n  useEffect(() => {\n    refreshTenderRequests()\n    refreshOffers({ buyer })\n  }, [])\n\n  const myTenderRequests = tenderRequests.filter(\n    (tr) => tr.buyer.id === buyer?.id\n  )\n  return (\n    <>\n      <View style={{ ...styles.header }}>\n        <Headline>Mina sidor</Headline>\n        <Subheading>{buyer?.name}</Subheading>\n      </View>\n      <Tabs\n        uppercase={false}\n        style={{ backgroundColor: '#D8F5E3' }}\n        theme={theme}\n      >\n        <TabScreen label=\"Aktuellt\">\n          <ScrollView>\n            <List.Accordion\n              title=\"Anbudsförfrågningar\"\n              expanded={showTenderRequests}\n              onPress={() =>\n                setShowTenderRequests(\n                  (showTenderRequests) => !showTenderRequests\n                )\n              }\n            >\n              {(myTenderRequests.length === 0 && (\n                <Card.Title\n                  style={styles.infoCard}\n                  title=\"Inga anbudsförfrågningar\"\n                  subtitle=\"Skapa en ny förfrågan för att få anbud från leverantörer.\"\n                ></Card.Title>\n              )) || <List.Subheader>Publicerade</List.Subheader>}\n              {myTenderRequests.map((tenderRequest) => (\n                <TenderRequestCard\n                  user={buyer}\n                  key={tenderRequest.id}\n                  tenderRequest={tenderRequest}\n                  navigation={navigation}\n                />\n              ))}\n            </List.Accordion>\n          </ScrollView>\n        </TabScreen>\n        <TabScreen label=\"Anbud\">\n          <ScrollView>\n            <List.Accordion title=\"Pågående\" expanded={true}>\n              {myTenderRequests\n                .filter((t) =>\n                  offers\n                    .filter((o) => !o.approved)\n                    .some((o) => o.tenderRequestId === t.id)\n                )\n                .map((tenderRequest) => (\n                  <TenderRequestCard\n                    user={buyer}\n                    key={tenderRequest.id}\n                    tenderRequest={tenderRequest}\n                    navigation={navigation}\n                  />\n                ))}\n            </List.Accordion>\n            <Divider />\n            <List.Accordion title=\"Avslutade\" expanded={true}>\n              {myTenderRequests\n                .filter((t) =>\n                  offers\n                    .filter((o) => o.approved)\n                    .some((o) => o.tenderRequestId === t.id)\n                )\n                .map((tenderRequest) => (\n                  <TenderRequestCard\n                    user={buyer}\n                    key={tenderRequest.id}\n                    tenderRequest={tenderRequest}\n                    navigation={navigation}\n                  />\n                ))}\n            </List.Accordion>\n          </ScrollView>\n        </TabScreen>\n        <TabScreen label=\"Profil\">\n          <Buyer\n            route={{ ...route, params: { buyer } }}\n            navigation={navigation}\n            editable={true}\n          />\n        </TabScreen>\n      </Tabs>\n      <Button\n        mode=\"outlined\"\n        onPress={() => {\n          navigation.popToTop()\n          if (buyer) logout(buyer)\n        }}\n      >\n        Logga ut\n      </Button>\n    </>\n  )\n}\nexport default BuyerProfile\n\nconst styles = StyleSheet.create({\n  header: {\n    margin: 16,\n  },\n  card: {\n    margin: 10,\n    backgroundColor: 'white',\n  },\n  infoCard: {\n    marginTop: 5,\n    marginBottom: 5,\n  },\n})\n","import { useState, useEffect, useLayoutEffect } from 'react'\nimport { Button } from 'react-native-paper'\nimport TextInput from './form/TextInput'\nimport DateTimeInput from './form/DateTimeInput'\nimport DropDownList from './form/DropDownList'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport useTenderRequests from '../hooks/useTenderRequests'\nimport useAuth from '../hooks/useAuth'\nimport { KeyboardAvoidingView, StyleSheet, View } from 'react-native'\n\nconst CreateTenderRequest = ({\n  navigation,\n  route,\n}: {\n  navigation: any\n  route: any\n}) => {\n  const [title, setTitle] = useState('')\n  const [volume, setVolume] = useState('')\n  const [lastOfferDate, setLastOfferDate] = useState(new Date())\n  const [lastAwardDate, setLastAwardDate] = useState(new Date())\n  const [deliveryStartDate, setDeliveryStartDate] = useState(new Date())\n  const [deliveryPlan, setDeliveryPlan] = useState('')\n  const [volumePerDelivery, setVolumePerDelivery] = useState('')\n  const [qualificationCriteria, setQualificationCriteria] = useState('')\n  const [optionalCriteria, setOptionalCriteria] = useState('')\n  const [terms] = useState(\n    'Producent ansvarar för leverans enligt överenskommelse.'\n  )\n  const [grading] = useState(\n    'Inlämnade anbud som uppfyller krav rangordnas efter offererat pris. Uppfyllda önskemål ger prisavdrag vid rangordning av anbud.'\n  )\n  const [, , add] = useTenderRequests()\n\n  const { user: buyer } = useAuth()\n\n  const deliveryPlans = [\n    { label: 'Veckovis', value: '0' },\n    { label: 'Månadsvis', value: '1' },\n    { label: 'Kvartalsvis', value: '2' },\n    { label: 'Endast en leverans', value: '3' },\n  ]\n\n  const criterias = [\n    { label: 'KRAV-certifierad', value: '0' },\n    { label: 'Ekologisk', value: '1' },\n    { label: 'Kvalitet klass 1', value: '2' },\n    { label: 'Studiebesök på plats, 1h', value: '3' },\n    { label: 'Studiebesök på plats, 2h', value: '4' },\n    { label: 'Studiebesök digitalt, 1h', value: '5' },\n    { label: 'Studiebesök digitalt, 2h', value: '6' },\n  ]\n\n  useEffect(() => {\n    if (route.params?.title) {\n      setTitle(route.params?.title)\n    }\n  }, [route.params])\n\n  const getSelectedOptions = (\n    selectedOptions: string,\n    options: Array<{ label: string; value: string }>\n  ) => {\n    return selectedOptions\n      .split(',')\n      .map((critera: string) => {\n        return options.find((option: any) => option.value == critera)?.label\n      })\n      .filter((criteria: string | undefined) => criteria)\n  }\n\n  const tenderRequest = {\n    title,\n    volume: +volume,\n    lastOfferDate,\n    lastAwardDate,\n    buyer,\n    deliveryStartDate,\n    deliveryPlan: getSelectedOptions(deliveryPlan, deliveryPlans).pop(),\n    volumePerDelivery: volumePerDelivery,\n    optionalCriteria: getSelectedOptions(optionalCriteria, criterias),\n    qualificationCriteria: getSelectedOptions(qualificationCriteria, criterias),\n    terms,\n    grading,\n  }\n\n  useLayoutEffect(() => {\n    // publish button in header:\n    navigation.setOptions({\n      headerRight: () => (\n        <Button onPress={() => publish(tenderRequest)}>Publicera</Button>\n      ),\n    })\n  }, [tenderRequest])\n\n  const publish = (tenderRequest: any) => {\n    add(tenderRequest)\n\n    navigation.navigate('TenderRequests', {\n      screen: 'ListTenderRequests',\n    })\n  }\n\n  return (\n    <KeyboardAvoidingView>\n      <ScrollView>\n        <TextInput\n          label=\"Namn på vara\"\n          value={title}\n          onChange={(text) => setTitle(text)}\n        />\n        <TextInput\n          label=\"Total volym\"\n          value={volume}\n          onChange={(text) => setVolume(text)}\n        />\n        <TextInput\n          label=\"Beställare\"\n          value={\n            buyer?.name +\n            ', ' +\n            buyer?.address +\n            ', ' +\n            buyer?.zip +\n            ' ' +\n            buyer?.postalAddress\n          }\n          disabled={true}\n        />\n        <DateTimeInput\n          label=\"Sista anbud\"\n          value={lastOfferDate}\n          onChange={(newDate) => {\n            if (newDate) setLastOfferDate(newDate)\n          }}\n        ></DateTimeInput>\n        <DateTimeInput\n          label=\"Tilldelning senast\"\n          value={lastAwardDate}\n          onChange={(newDate) => {\n            if (newDate) setLastAwardDate(newDate)\n          }}\n        ></DateTimeInput>\n        <DateTimeInput\n          label=\"Leverans startdatum\"\n          value={deliveryStartDate}\n          onChange={(newDate) => {\n            if (newDate) setDeliveryStartDate(newDate)\n          }}\n        ></DateTimeInput>\n        <DropDownList\n          label=\"Leveransplan\"\n          value={deliveryPlan}\n          setValue={setDeliveryPlan}\n          values={deliveryPlans}\n        ></DropDownList>\n        <TextInput\n          label=\"Volym per leverans\"\n          value={volumePerDelivery}\n          onChange={(text) => setVolumePerDelivery(text)}\n        />\n        <TextInput\n          label=\"Villkor\"\n          value={terms}\n          disabled={true}\n          multiline={true}\n          numberOfLines={2}\n        />\n        <TextInput\n          label=\"Urval\"\n          value={grading}\n          disabled={true}\n          multiline={true}\n          numberOfLines={3}\n        />\n        <DropDownList\n          label=\"Krav\"\n          value={qualificationCriteria}\n          setValue={setQualificationCriteria}\n          values={criterias}\n          multiSelect={true}\n        ></DropDownList>\n        <DropDownList\n          label=\"Önskemål\"\n          value={optionalCriteria}\n          setValue={setOptionalCriteria}\n          values={criterias}\n          multiSelect={true}\n        ></DropDownList>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  )\n}\n\nexport default CreateTenderRequest\n\nconst styles = StyleSheet.create({\n  actionContainer: {\n    flexDirection: 'row',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 20,\n    paddingTop: 20,\n  },\n})\n","import React from 'react'\nimport TenderRequests from './components/TenderRequests'\nimport TenderRequest from './components/TenderRequest'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs'\nimport Deal from './components/Deal'\nimport Deals from './components/Deals'\nimport ExploreNavigation from './ExploreNavigation'\nimport { IconButton, useTheme } from 'react-native-paper'\nimport BuyerProfile from './components/BuyerProfile'\nimport BottomNavigationIcon from './components/BottomNavigationIcon'\nimport CreateTenderRequest from './components/CreateTenderRequest'\nimport Notifications from './components/Notifications'\nimport { useNavigation } from '@react-navigation/native'\n\nconst Stack = createStackNavigator()\n\nconst TenderRequestsNavigation = () => {\n  const navigation = useNavigation()\n  return (\n    <>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"ListTenderRequests\"\n          options={{\n            title: 'Förfrågningar',\n          }}\n          component={TenderRequests}\n        />\n        <Stack.Screen\n          name=\"TenderRequest\"\n          options={{\n            title: 'Förfrågan',\n          }}\n          component={TenderRequest}\n        />\n        <Stack.Screen\n          name=\"CreateTenderRequest\"\n          options={{\n            title: 'Anbudsförfrågan',\n          }}\n          component={CreateTenderRequest}\n        />\n      </Stack.Navigator>\n    </>\n  )\n}\n\nconst DealsNavigation = () => {\n  return (\n    <>\n      <Stack.Navigator>\n        <Stack.Group>\n          <Stack.Screen\n            name=\"ListDeals\"\n            options={({ navigation }) => ({\n              headerRight: () => (\n                <IconButton\n                  icon=\"bell\"\n                  size={18}\n                  onPress={() => navigation.navigate('Notifications')}\n                />\n              ),\n              title: 'Erbjudanden',\n            })}\n            component={Deals}\n          />\n          <Stack.Screen\n            name=\"Deal\"\n            options={{\n              title: 'Erbjudande',\n            }}\n            component={Deal}\n          />\n        </Stack.Group>\n        <Stack.Group screenOptions={{ presentation: 'modal' }}>\n          <Stack.Screen name=\"Notifications\" component={Notifications} />\n        </Stack.Group>\n      </Stack.Navigator>\n    </>\n  )\n}\n\nconst BuyerProfileNavigation = () => {\n  const Stack = createStackNavigator()\n  return (\n    <>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"BuyerProfile\"\n          options={({ navigation }) => ({\n            title: 'Kvarnbergsskolan',\n            headerRight: () => (\n              <IconButton\n                icon=\"bell\"\n                size={18}\n                onPress={() => navigation.navigate('Notifications')}\n              />\n            ),\n          })}\n          component={BuyerProfile}\n        />\n        <Stack.Screen name=\"Notifications\" component={Notifications} />\n      </Stack.Navigator>\n    </>\n  )\n}\nconst BuyerNavigation = () => {\n  const Tab = createMaterialBottomTabNavigator()\n  const theme = useTheme()\n  return (\n    <Tab.Navigator\n      activeColor={theme.colors.primary}\n      inactiveColor={theme.colors.iconInactive}\n      barStyle={{ backgroundColor: theme.colors.background }}\n      theme={theme}\n      initialRouteName=\"Deals\"\n    >\n      <Tab.Screen\n        name=\"Deals\"\n        component={DealsNavigation}\n        options={{\n          tabBarLabel: 'Erbjudanden',\n          tabBarAccessibilityLabel: 'Erbjudanden',\n          tabBarIcon: ({ focused }) => (\n            <BottomNavigationIcon\n              name=\"corn\"\n              focused={focused}\n            ></BottomNavigationIcon>\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"TenderRequests\"\n        component={TenderRequestsNavigation}\n        options={{\n          tabBarLabel: 'Förfrågningar',\n          tabBarAccessibilityLabel: 'Förfrågningar',\n          tabBarIcon: ({ focused }) => (\n            <BottomNavigationIcon\n              name=\"cart\"\n              focused={focused}\n            ></BottomNavigationIcon>\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Explore\"\n        component={ExploreNavigation}\n        options={{\n          tabBarLabel: 'Upptäck',\n          tabBarAccessibilityLabel: 'Upptäck',\n          tabBarIcon: ({ focused }) => (\n            <BottomNavigationIcon\n              name=\"compass\"\n              focused={focused}\n            ></BottomNavigationIcon>\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Profile\"\n        component={BuyerProfileNavigation}\n        options={{\n          tabBarLabel: 'Mina sidor',\n          tabBarAccessibilityLabel: 'Mina sidor',\n          tabBarIcon: ({ focused }) => (\n            <BottomNavigationIcon\n              name=\"account\"\n              focused={focused}\n            ></BottomNavigationIcon>\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  )\n}\n\nexport default BuyerNavigation\n","// import * as React from 'react'\nimport React, { useEffect, useState } from 'react'\nimport Login from './components/Login'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport Notifications from './components/Notifications'\nimport SupplierNavigation from './SupplierNavigation'\nimport BuyerNavigation from './BuyerNavigation'\nimport { User } from './data/user'\n\nconst Navigation = () => {\n  const RootStack = createStackNavigator()\n\n  return (\n    <RootStack.Navigator initialRouteName=\"Login\">\n      <RootStack.Screen\n        name=\"Logga ut\"\n        options={{\n          headerShown: false,\n        }}\n        children={({ navigation }) => (\n          <Login\n            onLogin={(user: User) => {\n              navigation.navigate(user.type)\n            }}\n          />\n        )}\n      />\n      <RootStack.Screen\n        name=\"supplier\"\n        options={{\n          headerShown: false,\n        }}\n        children={() => SupplierNavigation()}\n      />\n      <RootStack.Screen\n        name=\"buyer\"\n        options={{\n          headerShown: false,\n          title: 'Tillbaka',\n        }}\n        children={() => BuyerNavigation()}\n      />\n    </RootStack.Navigator>\n  )\n}\n\nexport default Navigation\n","import { useEffect, useState } from 'react'\nimport useNotifications from '../hooks/useNotifications'\nimport { Button, Snackbar, Text } from 'react-native-paper'\nimport { useNavigation } from '@react-navigation/native'\n\nconst getNavigationArguments = (data: any) => {\n  if (!data) return null\n  console.log('getNavigationType', data)\n  switch (data?.type) {\n    case 'deal':\n      return ['Deals', { screen: 'Deal', params: { dealId: data.id } }]\n    case 'offer':\n      return [\n        'Offer',\n        [\n          'TenderRequests',\n          {\n            screen: 'TenderRequest',\n            params: { tenderRequestId: data.tenderRequestId },\n          },\n        ],\n      ]\n    case 'tenderRequest':\n      return [\n        'TenderRequests',\n        { screen: 'TenderRequest', params: { tenderRequestId: data.id } },\n      ]\n  }\n}\n\nexport const NotificationSnackbar = () => {\n  const [notificationVisible, setNotificationVisible] = useState<boolean>(true)\n  const [notifications] = useNotifications()\n  const navigation = useNavigation()\n  const lastNotification = notifications.at(0)\n\n  useEffect(() => {\n    console.log('notifications', notifications)\n    if (\n      new Date(lastNotification?.data.date || 0).valueOf() >\n      Date.now() - 10000\n    ) {\n      setNotificationVisible(true)\n    }\n  }, [lastNotification])\n\n  return (\n    (lastNotification && (\n      <Snackbar\n        visible={notificationVisible}\n        onDismiss={() => setNotificationVisible(false)}\n        action={{\n          label: 'OK',\n          onPress: () => {\n            navigation.navigate('Notifications')\n          },\n        }}\n      >\n        {lastNotification.title + ': ' + lastNotification.body}\n      </Snackbar>\n    )) ||\n    null\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { StatusBar } from 'expo-status-bar'\nimport { SafeAreaProvider } from 'react-native-safe-area-context'\nimport Navigation from './RootNavigation'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { useTheme } from 'react-native-paper'\nimport { SocketProvider } from './context/socketContext'\nimport { AuthProvider } from './context/authContext'\nimport { NotificationSnackbar } from './components/NotificationSnackbar'\n\nexport default function App() {\n  const theme = useTheme()\n  return (\n    <AuthProvider>\n      <SocketProvider>\n        <SafeAreaProvider>\n          <NavigationContainer theme={theme}>\n            <Navigation />\n            <NotificationSnackbar />\n          </NavigationContainer>\n        </SafeAreaProvider>\n      </SocketProvider>\n    </AuthProvider>\n  )\n}\n","import React from 'react'\nimport { StyleSheet, View } from 'react-native'\n\nexport default function IphoneDummy({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  return (\n    <View style={styles.container}>\n      <View style={styles.innerContainer}>{children}</View>\n    </View>\n  )\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#333',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  innerContainer: {\n    position: 'relative',\n    width: 375,\n    maxWidth: '100vw',\n    height: '90vh',\n    maxHeight: '100vh',\n    borderWidth: 10,\n    borderColor: '#555',\n    borderStyle: 'inset',\n    borderRadius: 40,\n    overflow: 'hidden',\n    alignItems: 'stretch',\n    justifyContent: 'center',\n  },\n})\n","import 'react-native-gesture-handler'\nimport * as React from 'react'\nimport { AppRegistry, Platform, StyleSheet, View } from 'react-native'\nimport {\n  Provider as PaperProvider,\n  MD2LightTheme,\n  configureFonts,\n} from 'react-native-paper'\nimport { expo } from './app.json'\nimport App from './src/App'\nimport { StatusBar } from 'expo-status-bar'\nimport IphoneDummy from './src/components/IphoneDummy'\nimport useNotifications from './src/hooks/useNotifications'\n\nconst fontConfig = {\n  web: {\n    regular: {\n      fontFamily: 'Avenir',\n      fontWeight: 'normal',\n    },\n    medium: {\n      fontFamily: 'Avenir',\n      fontWeight: 600,\n    },\n    light: {\n      fontFamily: 'Avenir',\n      fontWeight: 'light',\n    },\n    thin: {\n      fontFamily: 'Avenir',\n      fontWeight: 'thin',\n    },\n  },\n  ios: {\n    regular: {\n      fontFamily: 'sans-serif',\n      fontWeight: 'normal',\n    },\n    medium: {\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal',\n    },\n    light: {\n      fontFamily: 'sans-serif-light',\n      fontWeight: 'normal',\n    },\n    thin: {\n      fontFamily: 'sans-serif-thin',\n      fontWeight: 'normal',\n    },\n  },\n  android: {\n    regular: {\n      fontFamily: 'sans-serif',\n      fontWeight: 'normal',\n    },\n    medium: {\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal',\n    },\n    light: {\n      fontFamily: 'sans-serif-light',\n      fontWeight: 'normal',\n    },\n    thin: {\n      fontFamily: 'sans-serif-thin',\n      fontWeight: 'normal',\n    },\n  },\n} as const\n\nconst theme = {\n  ...MD2LightTheme,\n  roundness: 4,\n  colors: {\n    ...MD2LightTheme.colors,\n    background: '#FAF7F0', //beige\n    surface: '#FAF7F0',\n    surfaceVariant: '#EBFAEF',\n    // surfaceVariant: '#FFF',\n    primary: '#1C3BA0', //mörkblå\n    accent: '#EBFAEF',\n    // : '#666259', //mörkgrå\n    // primary: '#000', // morotsfärg: #FFA726\n    // accent: '#333', // blå: #29B6F6\n    // Add any other color changes here\n    iconInactive: '#666259', //mörkgrå\n    secondary: '#FFFFFF',\n    secondaryVariant: '#FFFFFF',\n    text: '#1B1918',\n    placeholder: '#1B1918',\n  },\n  fonts: configureFonts({ config: fontConfig }),\n}\n\nexport default function Main() {\n  /*\n  const [notification, setNotification] = React.useState({} as Notification)\n\n  React.useEffect(() => {\n    const lastNotification = notifications.at(-1)\n    if (\n      lastNotification &&\n      new Date(lastNotification?.data.date).valueOf() > Date.now() - 10000\n    ) {\n      setNotificationVisible(true)\n      setNotification(lastNotification)\n    }\n  }, [notifications])*/\n\n  return (\n    <PaperProvider theme={theme}>\n      {Platform.OS === 'web' ? (\n        <IphoneDummy>\n          <App />\n        </IphoneDummy>\n      ) : (\n        <>\n          <StatusBar />\n          <App />\n        </>\n      )}\n    </PaperProvider>\n  )\n}\n\nAppRegistry.registerComponent(expo.name, () => Main)\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [762], () => (__webpack_require__(9386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["registerForPushNotificationsAsync","_registerForPushNotificationsAsync","apply","arguments","_asyncToGenerator","token","Device","isDevice","existingStatus","ExpoNotifications","status","finalStatus","alert","projectId","app","data","console","log","Platform","name","importance","vibrationPattern","lightColor","SocketContext","createContext","SocketProvider","_ref","children","socket","io","_jsx","Provider","value","AuthContext","undefined","AuthProvider","_useState","useState","_useState2","_slicedToArray","user","setUser","useAuthContext","context","useContext","Error","_useAuthContext","login","useCallback","emit","logout","save","reset","buyers","setBuyers","useEffect","receive","on","off","buyer","suppliers","setSuppliers","supplier","onLogin","_useAuth","useAuth","resetting","setResetting","_useBuyers","useBuyers","_useBuyers2","loadBuyers","_useSuppliers","useSuppliers","_useSuppliers2","loadSuppliers","_useState3","connected","_useState4","setConnected","SafeAreaView","style","styles","container","_jsxs","ScrollView","contentContainerStyle","scrollView","View","Title","title","Subheading","subheading","map","i","searchResult","Avatar","size","avatar","source","uri","image","Text","searchResultName","onPress","e","online","_objectSpread","marginTop","Button","setTimeout","StyleSheet","textAlign","marginVertical","flex","alignItems","justifyContent","loginForm","button","margin","marginRight","paddingTop","flexDirection","marginBottom","linkContainer","areas","certifications","organic","MSC","kravMarked","ethical","fairtrade","locallyProduced","deals","setDeals","deal","navigation","_React$useState","React","_React$useState2","expanded","setExpanded","_React$useState3","_React$useState4","searchQuery","setSearchQuery","_React$useState5","Array","_React$useState6","filteredDeals","setFilteredDeals","_useDeals","useDeals","_useDeals2","refresh","_React$useState7","_React$useState8","activeAreas","setActiveAreas","filter","product","toLowerCase","includes","Object","entries","reduce","result","_ref2","_ref3","key","area","assign","_defineProperty","count","d","commodity","length","_Fragment","Searchbar","placeholder","onChangeText","searchbar","_ref4","_ref6","Card","TouchableOpacity","List","sort","a","b","localeCompare","right","price","SEK_per_Kg","description","navigate","id","type","FAB","fab","icon","backgroundColor","position","bottom","card","cover","height","borderRadius","messages","text","date","padding","flexGrow","messageContainer","width","paddingHorizontal","paddingVertical","answer","alignSelf","question","messageText","fontSize","color","messageMetadata","inputContainer","input","sendButton","marginLeft","sendButtonText","inputText","setInputText","KeyboardAvoidingView","message","Caption","TextInput","_messages$at","push","at","Date","toISOString","Header","header","Headline","fontWeight","Math","round","SEK","toLocaleString","Row","_ref8","Column","_ref9","Container","_ref10","_deal$price$kilos","_deal$price$SEK_per_K","route","favorite","params","setDeal","dealId","find","theme","useTheme","setOptions","headerRight","global","Tabs","uppercase","dark","TabScreen","label","manufacturer","brand","group","mainGroup","toLocaleLowerCase","getTitle","kilos","DataTable","_ref7","cert","checked","Checkbox","actionContainer","mode","screen","Chat","display","paddingBottom","address","zip","postalAddress","email","produce","filteredSuppliers","filteredBuyers","MaterialCommunityIcons","Divider","_supplier$produce","editable","headerContainer","IconButton","editButton","divider","subHeading","p","Paragraph","heading","lineHeight","menuContainer","menuLink","Stack","createStackNavigator","Navigator","Screen","options","component","Explore","Supplier","Buyer","tenderRequests","setTenderRequests","arr","tenderRequest","ChevronRight","open","setOpen","_useTenderRequests","useTenderRequests","_useTenderRequests2","filteredRequests","request","titleVariant","titleStyle","subtitle","props","marginHorizontal","checkboxContainer","checkbox","offers","setOffers","offer","o","_ref5","_tenderRequest$buyer","_tenderRequest$lastOf","_tenderRequest$lastAw","_tenderRequest$delive","_tenderRequest$qualif","_tenderRequest$option","_tenderRequest$buyer2","_tenderRequest$buyer3","refreshTenderRequests","setTenderRequest","_useOffers","useOffers","_useOffers2","updateOffer","refreshOffers","tenderRequestFromState","lastOfferDate","toString","split","lastAwardDate","deliveryPlan","deliveryStartDate","terms","grading","qualificationCriteria","criteria","optionalCriteria","paddingLeft","paddingRight","tenderRequestId","_offer$submissionDate","left","submissionDate","approved","_offer$supplier","_offer$submissionDate2","notifications","setNotifications","n","_n$data","_n$data$to","to","valueOf","Notifications","_useNotifications","useNotifications","_useNotifications2","notification","body","infoCard","showOffers","setShowOffers","refreshDeals","myOffers","myDeals","myTenderRequests","tr","some","show","OfferCard","DealCard","t","TenderRequestCard","popToTop","focused","colors","primary","iconInactive","keyboardType","disabled","multiline","numberOfLines","outlined","onChange","PaperTextInput","background","roundness","values","multiSelect","setValue","showDropdown","setShowDropdown","DropDown","dropDownStyle","inputProps","list","visible","showDropDown","onDismiss","DatePickerInput","locale","inputMode","_route$params","setTitle","setPrice","_useState5","_useState6","volume","setVolume","_useState7","_useState8","constraint","setConstraint","_useState9","_useState10","setDate","_useState11","_useState12","endDate","setEndDate","_useState13","_useState14","setDescription","_useState15","_useState16","other","setOther","add","publish","artNo","origin","productManufacturingCountry","rawMaterialOriginCountry","DateTimeInput","newDate","DropDownList","checkedByDefault","setChecked","Pressable","borderColor","borderWidth","surface","selectedQualificationCriterias","setSelectedQualificationCriterias","selectedOptionalCriterias","setSelectedOptionalCriterias","setOffer","qualificationCriteriasMet","optionalCriteriasMet","uuid","useLayoutEffect","error","Surface","CheckboxWithText","newChoices","choice","DealsNavigation","Group","Deals","Deal","CreateDeal","screenOptions","presentation","TenderRequestsNavigation","TenderRequests","TenderRequest","CreateOffer","SupplierProfileNavigation","SupplierProfile","Tab","createMaterialBottomTabNavigator","activeColor","inactiveColor","barStyle","initialRouteName","tabBarLabel","tabBarAccessibilityLabel","tabBarIcon","BottomNavigationIcon","ExploreNavigation","showTenderRequests","setShowTenderRequests","setLastOfferDate","setLastAwardDate","setDeliveryStartDate","setDeliveryPlan","volumePerDelivery","setVolumePerDelivery","setQualificationCriteria","_useState17","_useState18","setOptionalCriteria","_useState19","_useState21","deliveryPlans","criterias","_route$params2","getSelectedOptions","selectedOptions","critera","_options$find","option","pop","useNavigation","CreateTenderRequest","BuyerProfileNavigation","BuyerProfile","RootStack","headerShown","Login","SupplierNavigation","BuyerNavigation","NotificationSnackbar","notificationVisible","setNotificationVisible","lastNotification","now","Snackbar","action","App","SafeAreaProvider","NavigationContainer","Navigation","IphoneDummy","innerContainer","maxWidth","maxHeight","borderStyle","overflow","MD2LightTheme","surfaceVariant","accent","secondary","secondaryVariant","fonts","configureFonts","config","web","regular","fontFamily","medium","light","thin","ios","android","Main","PaperProvider","StatusBar","AppRegistry","expo","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","this","then","ns","create","def","current","indexOf","getOwnPropertyNames","forEach","definition","defineProperty","enumerable","get","g","globalThis","Function","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}